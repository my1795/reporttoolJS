{"ast":null,"code":"\"use strict\";\n\nvar execa = require(\"execa\");\n\nvar db2util = \"/QOpenSys/pkgs/bin/db2util\";\nvar sql = \"select NEXT_HOP, LOCAL_BINDING_INTERFACE from QSYS2.NETSTAT_ROUTE_INFO where ROUTE_TYPE='DFTROUTE' and NEXT_HOP!='*DIRECT' and CONNECTION_TYPE=?\";\n\nvar parse = function parse(stdout) {\n  var result;\n\n  try {\n    var resultObj = JSON.parse(stdout);\n    var gateway = resultObj.records[0].NEXT_HOP;\n    var iface = resultObj.records[0].LOCAL_BINDING_INTERFACE;\n    result = {\n      gateway: gateway,\n      iface: iface\n    };\n  } catch (err) {}\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nvar promise = function promise(family) {\n  return execa.stdout(db2util, [sql, \"-p\", family, \"-o\", \"json\"]).then(function (stdout) {\n    return parse(stdout);\n  });\n};\n\nvar sync = function sync(family) {\n  var _execa$sync = execa.sync(db2util, [sql, \"-p\", family, \"-o\", \"json\"]),\n      stdout = _execa$sync.stdout;\n\n  return parse(stdout);\n};\n\nmodule.exports.v4 = function () {\n  return promise(\"IPV4\");\n};\n\nmodule.exports.v6 = function () {\n  return promise(\"IPV6\");\n};\n\nmodule.exports.v4.sync = function () {\n  return sync(\"IPV4\");\n};\n\nmodule.exports.v6.sync = function () {\n  return sync(\"IPV6\");\n};","map":null,"metadata":{},"sourceType":"script"}