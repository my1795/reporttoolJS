{"ast":null,"code":"import _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\SearchPage.js\";\nimport React, { Component } from 'react'; //import './App.css';\n\nimport { Container } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { Navbar } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, dateFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage(props) {\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).call(this, props));\n    _this.state = {\n      columns: [{\n        dataField: 'generalinfo_id',\n        text: 'Info     ID',\n        headerAlign: 'center',\n        sort: true,\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'fromcompletedby',\n        text: 'Completed By',\n        headerAlign: 'center',\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'gpsproduct',\n        text: 'Product',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            value: 'E',\n            label: 'E'\n          }]\n        },\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'startdate',\n        text: 'Date',\n        headerAlign: 'center',\n        filter: dateFilter(),\n        editable: false,\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'caseid',\n        text: 'Case        ID',\n        sort: true,\n        filter: textFilter(),\n        headerFormatter: _this.caseIDFormatter,\n        headerAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'customername',\n        text: 'Customer Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'description',\n        text: 'Description',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        },\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'pname',\n        text: 'Problem     Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            value: 'E',\n            label: 'E'\n          }]\n        },\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }],\n      selectedRows: [],\n      expandRow: {\n        showExpandColumn: true,\n        renderer: function renderer(row) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, \"This Expand row is belong to rowKey \".concat(row.dataField)), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, \"You can render anything here, also you can add additional data on every row object\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, \"expandRow.renderer callback will pass the origin row object to you\"));\n        }\n      },\n      generalinfo: []\n    };\n    _this.handleSelected = _this.handleSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveChanges = _this.saveChanges.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteRows = _this.deleteRows.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"caseIDFormatter\",\n    value: function caseIDFormatter(column, colIndex, _ref) {\n      var sortElement = _ref.sortElement,\n          filterElement = _ref.filterElement;\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, filterElement, column.text, sortElement);\n    }\n  }, {\n    key: \"handleSelected\",\n    value: function handleSelected() {\n      console.log(this.state.generalinfo.dataField);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.assignGeneralInfo();\n      this.assingProductBox();\n      this.assignProblemBox();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.state.generalinfo);\n    }\n  }, {\n    key: \"deleteRows\",\n    value: function deleteRows() {\n      alert(\"Deleted\");\n    }\n  }, {\n    key: \"saveChanges\",\n    value: function saveChanges() {\n      alert(\"changes saved\");\n    }\n  }, {\n    key: \"assignGeneralInfo\",\n    value: function assignGeneralInfo() {\n      var _this2 = this;\n\n      fetch('http://localhost:4000/generalinfo').then(function (response) {\n        return response.json();\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this2.setState({\n          generalinfo: data\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assingProductBox\",\n    value: function assingProductBox() {\n      var _this3 = this;\n\n      var products = [];\n      var opt = [];\n      fetch('http://localhost:4000/products').then(function (response) {\n        return response.json();\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var el = _step.value;\n            products.push(el.productname);\n            console.log(el.productname);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < products.length; k++) {\n          opt.push({\n            value: products[k],\n            label: products[k]\n          });\n        }\n\n        var copy = _this3.state.columns.slice();\n\n        copy[2].editor.options = opt;\n\n        _this3.setState({\n          columns: copy\n        });\n\n        console.log(opt[0]);\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assignProblemBox\",\n    value: function assignProblemBox() {\n      var _this4 = this;\n\n      var problems = [];\n      var opt = [];\n      fetch('http://localhost:4000/problems').then(function (response) {\n        return response.json();\n      }).then(function (_ref4) {\n        var data = _ref4.data;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var el = _step2.value;\n            problems.push(el.problemname);\n            console.log(el.problemname);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < problems.length; k++) {\n          opt.push({\n            value: problems[k],\n            label: problems[k]\n          });\n        }\n\n        var copy = _this4.state.columns.slice();\n\n        copy[7].editor.options = opt;\n\n        _this4.setState({\n          columns: copy\n        });\n\n        console.log(opt[0]);\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var selectRow = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        bgColor: '#00BFFF',\n        clickToExpand: true,\n        clickToEdit: true\n      };\n      var cellEdit = {\n        mode: 'click'\n      };\n      return React.createElement(\"div\", {\n        className: \"Appp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.deleteRows,\n        input: \"newProduct\",\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Delete Selected Rows\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.saveChanges,\n        input: \"newProduct\",\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Save Changes\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        filter: filterFactory(),\n        selectRow: selectRow,\n        cellEdit: cellEditFactory({\n          mode: 'dbclick',\n          blurToSave: true,\n          afterSaveCell: function afterSaveCell(oldValue, newValue, row, column) {\n            alert('After Saving Cell!!'); // insert buradan yapılacak database e atılacak delete selected kısmına dikkat.\n\n            console.log(oldValue);\n            console.log(newValue);\n            console.log(row.generalinfo_id);\n            console.log(column);\n          }\n        }),\n        pagination: paginationFactory(),\n        keyField: \"generalinfo_id\",\n        data: this.state.generalinfo,\n        columns: this.state.columns,\n        striped: true,\n        hover: true,\n        condensed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nexport default SearchPage;","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\SearchPage.js"],"names":["React","Component","Container","Nav","Form","FormControl","Navbar","Button","Row","BootstrapTable","filterFactory","textFilter","dateFilter","paginationFactory","cellEditFactory","Type","SearchPage","props","state","columns","dataField","text","headerAlign","sort","filter","headerStyle","backgroundColor","editor","type","SELECT","options","value","label","editable","headerFormatter","caseIDFormatter","TEXTAREA","selectedRows","expandRow","showExpandColumn","renderer","row","generalinfo","handleSelected","bind","saveChanges","deleteRows","column","colIndex","sortElement","filterElement","display","flexDirection","console","log","assignGeneralInfo","assingProductBox","assignProblemBox","alert","fetch","then","response","json","data","setState","catch","err","error","products","opt","el","push","productname","k","length","copy","slice","problems","problemname","selectRow","mode","clickToSelect","bgColor","clickToExpand","clickToEdit","cellEdit","blurToSave","afterSaveCell","oldValue","newValue","generalinfo_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import './App.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter, dateFilter} from 'react-bootstrap-table2-filter';\r\n\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css'\r\n\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nclass SearchPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            columns: [{\r\n                dataField: 'generalinfo_id',\r\n                text: 'Info     ID',\r\n                headerAlign: 'center',\r\n                sort: true,\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              }, {\r\n                dataField: 'fromcompletedby',\r\n                text: 'Completed By',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              }, {\r\n                dataField: 'gpsproduct',\r\n                text: 'Product',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.SELECT,\r\n                  options: [{\r\n\r\n                    value: 'E',\r\n                    label: 'E'\r\n                  }]\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'startdate',\r\n                text: 'Date',\r\n                headerAlign: 'center',\r\n                filter: dateFilter(),\r\n                editable: false,\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'caseid',\r\n                text: 'Case        ID',\r\n                sort: true,\r\n                filter: textFilter(),\r\n                headerFormatter: this.caseIDFormatter,\r\n                headerAlign: 'center',\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'customername',\r\n                text: 'Customer Name',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'description',\r\n                text: 'Description',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.TEXTAREA\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'pname',\r\n                text: 'Problem     Name',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.SELECT,\r\n                  options: [{\r\n\r\n                    value: 'E',\r\n                    label: 'E'\r\n                  }]\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              }\r\n\r\n                         \r\n            ],\r\n              selectedRows: [],\r\n              expandRow : {\r\n                showExpandColumn: true,\r\n                renderer: row => (\r\n                  <div>\r\n                    <p>{ `This Expand row is belong to rowKey ${row.dataField}` }</p>\r\n                    <p>You can render anything here, also you can add additional data on every row object</p>\r\n                    <p>expandRow.renderer callback will pass the origin row object to you</p>\r\n                  </div>\r\n                )\r\n              },\r\n              generalinfo: [\r\n               \r\n              ],\r\n\r\n            \r\n        }\r\n        this.handleSelected = this.handleSelected.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n        this.deleteRows = this.deleteRows.bind(this);\r\n    }\r\n     caseIDFormatter(column, colIndex, { sortElement, filterElement }) {\r\n        return (\r\n          <div style={ { display: 'flex', flexDirection: 'column' } }>\r\n            { filterElement }\r\n            { column.text }\r\n            { sortElement }\r\n          </div>\r\n        );\r\n      }\r\n      handleSelected(){\r\n          console.log(this.state.generalinfo.dataField);\r\n      }\r\n   \r\n    componentWillMount(){\r\n      this.assignGeneralInfo();\r\n      this.assingProductBox();\r\n      this.assignProblemBox();\r\n      }\r\n    componentDidMount(){\r\n      console.log(this.state.generalinfo);\r\n    }\r\n    deleteRows(){\r\n\r\n      alert(\"Deleted\");\r\n\r\n    }\r\n    saveChanges(){\r\n      alert(\"changes saved\");\r\n\r\n    }\r\n      assignGeneralInfo(){\r\n        fetch('http://localhost:4000/generalinfo')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          this.setState({generalinfo : data})\r\n          \r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      }\r\n      assingProductBox(){\r\n        let products = [];\r\n        let opt = [];\r\n        fetch('http://localhost:4000/products')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          for(var el of data){\r\n            products.push(el.productname);\r\n            console.log(el.productname);\r\n          }\r\n          \r\n        })\r\n        .then( () => {\r\n          for(var k =0; k< products.length; k++){\r\n            opt.push({value: products[k], label: products[k] });\r\n          }\r\n         var copy = this.state.columns.slice();\r\n         copy[2].editor.options = opt;\r\n         this.setState({columns: copy});\r\n          console.log(opt[0]);\r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      \r\n      \r\n      }\r\n      assignProblemBox(){\r\n        let problems = [];\r\n        let opt = [];\r\n        fetch('http://localhost:4000/problems')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          for(var el of data){\r\n            problems.push(el.problemname);\r\n            console.log(el.problemname);\r\n          }\r\n          \r\n        })\r\n        .then( () => {\r\n          for(var k =0; k< problems.length; k++){\r\n            opt.push({value: problems[k], label: problems[k] });\r\n          }\r\n         var copy = this.state.columns.slice();\r\n         copy[7].editor.options = opt;\r\n         this.setState({columns: copy});\r\n          console.log(opt[0]);\r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      \r\n      \r\n      }\r\n\r\n    render() {\r\n      const selectRow = {\r\n        mode: 'checkbox',\r\n        clickToSelect: true,\r\n        bgColor: '#00BFFF',\r\n        clickToExpand: true,\r\n        clickToEdit: true\r\n      };\r\n      const cellEdit = {\r\n        mode: 'click'\r\n      };\r\n        return (\r\n\r\n            <div className=\"Appp\">\r\n                <Container>\r\n                  <Row>\r\n                  <Button  onClick={this.deleteRows} input =\"newProduct\" variant=\"danger\" size=\"lg\" active >\r\n          Delete Selected Rows\r\n         </Button>\r\n         <hr></hr>\r\n         <Button  onClick={this.saveChanges} input =\"newProduct\" variant=\"danger\" size=\"lg\" active >\r\n         Save Changes\r\n         </Button>\r\n\r\n                  </Row>\r\n                  <hr></hr>\r\n                  <Row>\r\n                  <BootstrapTable  filter={ filterFactory()} selectRow={ selectRow }  \r\n                  cellEdit={ cellEditFactory({ mode: 'dbclick',blurToSave: true ,\r\n                  afterSaveCell: (oldValue, newValue, row, column) => { alert('After Saving Cell!!');\r\n                  // insert buradan yapılacak database e atılacak delete selected kısmına dikkat.\r\n                  console.log(oldValue);\r\n                  console.log(newValue);\r\n                  console.log(row.generalinfo_id);\r\n                  console.log(column);\r\n                 }\r\n                }) } \r\n                  pagination={ paginationFactory() }\r\n                      keyField='generalinfo_id' data = { this.state.generalinfo} columns = { this.state.columns }  \r\n                      striped hover condensed\r\n  \r\n  />\r\n                    \r\n                  </Row>\r\n  \r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}