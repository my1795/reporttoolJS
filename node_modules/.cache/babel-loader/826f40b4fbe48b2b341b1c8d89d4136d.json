{"ast":null,"code":"import _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\SearchPage.js\";\nimport React, { Component } from 'react'; //import './App.css';\n\nimport { Container } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { Navbar } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, dateFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage(props) {\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).call(this, props));\n    _this.state = {\n      columns: [{\n        dataField: 'generalinfo_id',\n        text: 'Info     ID',\n        headerAlign: 'center',\n        sort: true,\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'fromcompletedby',\n        text: 'Completed By',\n        headerAlign: 'center',\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'gpsproduct',\n        text: 'Product',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            value: 'E',\n            label: 'E'\n          }]\n        },\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'startdate',\n        text: 'Date',\n        headerAlign: 'center',\n        filter: dateFilter(),\n        editable: false,\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'caseid',\n        text: 'Case        ID',\n        sort: true,\n        filter: textFilter(),\n        headerFormatter: _this.caseIDFormatter,\n        headerAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'customername',\n        text: 'Customer Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'description',\n        text: 'Description',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        },\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }, {\n        dataField: 'pname',\n        text: 'Problem     Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            value: 'E',\n            label: 'E'\n          }]\n        },\n        headerStyle: {\n          backgroundColor: '#81c784'\n        }\n      }],\n      selectedRows: [],\n      expandRow: {},\n      generalinfo: []\n    };\n    _this.handleSelected = _this.handleSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveChanges = _this.saveChanges.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteRows = _this.deleteRows.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"caseIDFormatter\",\n    value: function caseIDFormatter(column, colIndex, _ref) {\n      var sortElement = _ref.sortElement,\n          filterElement = _ref.filterElement;\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, filterElement, column.text, sortElement);\n    }\n  }, {\n    key: \"handleSelected\",\n    value: function handleSelected() {\n      console.log(this.state.generalinfo.dataField);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.assignGeneralInfo();\n      this.assingProductBox();\n      this.assignProblemBox();\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate() {\n      this.assignGeneralInfo();\n    }\n  }, {\n    key: \"deleteRows\",\n    value: function deleteRows() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = selectedRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n          this.deleteRow(row);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(generalinfo_id) {\n      var axios = require('axios');\n\n      axios.post(\"http://localhost:4000/generalinfo/remove?generalinfo_id=\".concat(generalinfo_id), {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        method: 'POST',\n        data: \"delete sent\"\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {});\n      alert(\"Deleted\");\n    }\n  }, {\n    key: \"saveChanges\",\n    value: function saveChanges(generalinfo_id, fromcompletedby, gpsproduct, startdate, caseid, customername, description, pname) {\n      var axios = require('axios');\n\n      axios.post(\"http://localhost:4000/generalinfo/update?generalinfo_id=\".concat(generalinfo_id, \"&startdate=\").concat(startdate, \"&caseid=\").concat(caseid, \"\\n      &gpsproduct=\").concat(gpsproduct, \"&fromcompletedby=\").concat(fromcompletedby, \"&customername=\").concat(customername, \"\\n      &description=\").concat(description, \"&pname=\").concat(pname), {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        method: 'POST',\n        data: \"update sent\"\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {});\n      alert(\"changes saved\");\n    }\n  }, {\n    key: \"assignGeneralInfo\",\n    value: function assignGeneralInfo() {\n      var _this2 = this;\n\n      fetch('http://localhost:4000/generalinfo').then(function (response) {\n        return response.json();\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this2.setState({\n          generalinfo: data\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assingProductBox\",\n    value: function assingProductBox() {\n      var _this3 = this;\n\n      var products = [];\n      var opt = [];\n      fetch('http://localhost:4000/products').then(function (response) {\n        return response.json();\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var el = _step2.value;\n            products.push(el.productname);\n            console.log(el.productname);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < products.length; k++) {\n          opt.push({\n            value: products[k],\n            label: products[k]\n          });\n        }\n\n        var copy = _this3.state.columns.slice();\n\n        copy[2].editor.options = opt;\n\n        _this3.setState({\n          columns: copy\n        });\n\n        console.log(opt[0]);\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assignProblemBox\",\n    value: function assignProblemBox() {\n      var _this4 = this;\n\n      var problems = [];\n      var opt = [];\n      fetch('http://localhost:4000/problems').then(function (response) {\n        return response.json();\n      }).then(function (_ref4) {\n        var data = _ref4.data;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var el = _step3.value;\n            problems.push(el.problemname);\n            console.log(el.problemname);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < problems.length; k++) {\n          opt.push({\n            value: problems[k],\n            label: problems[k]\n          });\n        }\n\n        var copy = _this4.state.columns.slice();\n\n        copy[7].editor.options = opt;\n\n        _this4.setState({\n          columns: copy\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var rowEvents = {\n        onMouseEnter: function onMouseEnter(e, row, rowIndex) {\n          console.log(\"enter on row with index: \".concat(rowIndex));\n        }\n      };\n      var selectRow = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        bgColor: function bgColor(row, rowIndex) {\n          return rowIndex % 2 == 0 ? '#00BFFF' : '#00FFFF';\n        },\n        clickToExpand: true,\n        clickToEdit: true,\n        onSelect: function onSelect(row, isSelect, rowIndex, e) {\n          if (isSelect === true) {\n            _this5.state.selectedRows.push(row.generalinfo_id);\n          }\n\n          if (isSelect === false) {\n            _this5.state.selectedRows.splice(_this5.state.selectedRows.indexOf(row.generalinfo_id), 1);\n          }\n\n          console.log(isSelect);\n          console.log(rowIndex);\n          console.log(e);\n        },\n        onSelectAll: function onSelectAll(isSelect, rows, e) {\n          if (isSelect === true) {\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n              for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var row = _step4.value;\n\n                _this5.state.selectedRows.push(row.generalinfo_id);\n              }\n            } catch (err) {\n              _didIteratorError4 = true;\n              _iteratorError4 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                  _iterator4.return();\n                }\n              } finally {\n                if (_didIteratorError4) {\n                  throw _iteratorError4;\n                }\n              }\n            }\n          }\n\n          if (isSelect === false) {\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = rows[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var _row = _step5.value;\n\n                _this5.state.selectedRows.splice(_this5.state.selectedRows.indexOf(_row.generalinfo_id), 1);\n              }\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n          }\n        }\n      };\n      var cellEdit = {\n        mode: 'click'\n      };\n      return React.createElement(\"div\", {\n        className: \"Appp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.deleteRows,\n        input: \"newProduct\",\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, \"Delete Selected Rows\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      })), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"generalinfo_id\",\n        filter: filterFactory(),\n        selectRow: selectRow,\n        data: this.state.generalinfo,\n        columns: this.state.columns,\n        striped: true,\n        hover: true,\n        condensed: true,\n        cellEdit: cellEditFactory({\n          mode: 'dbclick',\n          blurToSave: true,\n          afterSaveCell: function afterSaveCell(oldValue, newValue, row, column) {\n            // insert buradan yapılacak database e atılacak delete selected kısmına dikkat.\n            console.log(oldValue);\n            console.log(newValue);\n            console.log(row.generalinfo_id);\n            console.log(column);\n\n            _this5.saveChanges(row.generalinfo_id, row.fromcompletedby, row.gpsproduct, row.startdate, row.caseid, row.customername, row.description, row.pname);\n          }\n        }),\n        pagination: paginationFactory(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nexport default SearchPage;","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\SearchPage.js"],"names":["React","Component","Container","Nav","Form","FormControl","Navbar","Button","Row","BootstrapTable","filterFactory","textFilter","dateFilter","paginationFactory","cellEditFactory","Type","SearchPage","props","state","columns","dataField","text","headerAlign","sort","filter","headerStyle","backgroundColor","editor","type","SELECT","options","value","label","editable","headerFormatter","caseIDFormatter","TEXTAREA","selectedRows","expandRow","generalinfo","handleSelected","bind","saveChanges","deleteRows","column","colIndex","sortElement","filterElement","display","flexDirection","console","log","assignGeneralInfo","assingProductBox","assignProblemBox","row","deleteRow","generalinfo_id","axios","require","post","headers","method","data","then","response","catch","error","alert","fromcompletedby","gpsproduct","startdate","caseid","customername","description","pname","fetch","json","setState","err","products","opt","el","push","productname","k","length","copy","slice","problems","problemname","rowEvents","onMouseEnter","e","rowIndex","selectRow","mode","clickToSelect","bgColor","clickToExpand","clickToEdit","onSelect","isSelect","splice","indexOf","onSelectAll","rows","cellEdit","blurToSave","afterSaveCell","oldValue","newValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import './App.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter, dateFilter} from 'react-bootstrap-table2-filter';\r\n\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css'\r\n\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nclass SearchPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            columns: [{\r\n                dataField: 'generalinfo_id',\r\n                text: 'Info     ID',\r\n                headerAlign: 'center',\r\n                sort: true,\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              }, {\r\n                dataField: 'fromcompletedby',\r\n                text: 'Completed By',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              }, {\r\n                dataField: 'gpsproduct',\r\n                text: 'Product',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.SELECT,\r\n                  options: [{\r\n\r\n                    value: 'E',\r\n                    label: 'E'\r\n                  }]\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'startdate',\r\n                text: 'Date',\r\n                headerAlign: 'center',\r\n                filter: dateFilter(),\r\n                editable: false,\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'caseid',\r\n                text: 'Case        ID',\r\n                sort: true,\r\n                filter: textFilter(),\r\n                headerFormatter: this.caseIDFormatter,\r\n                headerAlign: 'center',\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'customername',\r\n                text: 'Customer Name',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'description',\r\n                text: 'Description',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.TEXTAREA\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              },\r\n              {\r\n                dataField: 'pname',\r\n                text: 'Problem     Name',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.SELECT,\r\n                  options: [{\r\n\r\n                    value: 'E',\r\n                    label: 'E'\r\n                  }]\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784'}\r\n              }\r\n\r\n                         \r\n            ],\r\n              selectedRows: [],\r\n              expandRow: {\r\n\r\n              },\r\n              generalinfo: [\r\n               \r\n              ],\r\n\r\n            \r\n        }\r\n        this.handleSelected = this.handleSelected.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n        this.deleteRows = this.deleteRows.bind(this);\r\n    }\r\n     caseIDFormatter(column, colIndex, { sortElement, filterElement }) {\r\n        return (\r\n          <div style={ { display: 'flex', flexDirection: 'column' } }>\r\n            { filterElement }\r\n            { column.text }\r\n            { sortElement }\r\n          </div>\r\n        );\r\n      }\r\n      handleSelected(){\r\n          console.log(this.state.generalinfo.dataField);\r\n      }\r\n   \r\n    componentWillMount(){\r\n      this.assignGeneralInfo();\r\n      this.assingProductBox();\r\n      this.assignProblemBox();\r\n      }\r\n    componentWillUpdate(){\r\n      this.assignGeneralInfo();\r\n    }\r\n    deleteRows(){\r\n      for(let row of selectedRows){\r\n        this.deleteRow(row);\r\n      }\r\n    }\r\n    deleteRow(generalinfo_id){\r\n      const axios = require('axios');\r\n      axios.post(`http://localhost:4000/generalinfo/remove?generalinfo_id=${generalinfo_id}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data: \"delete sent\"\r\n      })\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n\r\n      \r\n    });\r\n      alert(\"Deleted\");\r\n\r\n    }\r\n    saveChanges(generalinfo_id,fromcompletedby,gpsproduct,startdate,caseid,customername,description,pname){\r\n      const axios = require('axios');\r\n      axios.post(`http://localhost:4000/generalinfo/update?generalinfo_id=${generalinfo_id}&startdate=${startdate}&caseid=${caseid}\r\n      &gpsproduct=${gpsproduct}&fromcompletedby=${fromcompletedby}&customername=${customername}\r\n      &description=${description}&pname=${pname}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data: \"update sent\"\r\n      })\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n\r\n      \r\n    });\r\n      alert(\"changes saved\");\r\n\r\n    }\r\n      assignGeneralInfo(){\r\n        fetch('http://localhost:4000/generalinfo')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          this.setState({generalinfo : data})\r\n          \r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      }\r\n      assingProductBox(){\r\n        let products = [];\r\n        let opt = [];\r\n        fetch('http://localhost:4000/products')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          for(var el of data){\r\n            products.push(el.productname);\r\n            console.log(el.productname);\r\n          }\r\n          \r\n        })\r\n        .then( () => {\r\n          for(var k =0; k< products.length; k++){\r\n            opt.push({value: products[k], label: products[k] });\r\n          }\r\n         var copy = this.state.columns.slice();\r\n         copy[2].editor.options = opt;\r\n         this.setState({columns: copy});\r\n          console.log(opt[0]);\r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      \r\n      \r\n      }\r\n      assignProblemBox(){\r\n        let problems = [];\r\n        let opt = [];\r\n        fetch('http://localhost:4000/problems')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          for(var el of data){\r\n            problems.push(el.problemname);\r\n            console.log(el.problemname);\r\n          }\r\n          \r\n        })\r\n        .then( () => {\r\n          for(var k =0; k< problems.length; k++){\r\n            opt.push({value: problems[k], label: problems[k] });\r\n          }\r\n         var copy = this.state.columns.slice();\r\n         copy[7].editor.options = opt;\r\n         this.setState({columns: copy});\r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      \r\n      \r\n      }\r\n\r\n    render() {\r\n      const rowEvents = {\r\n        onMouseEnter: (e, row, rowIndex) => {\r\n          console.log(`enter on row with index: ${rowIndex}`);\r\n        }\r\n      };\r\n      const selectRow = {\r\n        mode: 'checkbox',\r\n        clickToSelect: true,\r\n        bgColor: (row, rowIndex) => (rowIndex % 2 == 0 ? '#00BFFF' : '#00FFFF'),\r\n        clickToExpand: true,\r\n        clickToEdit: true,\r\n        onSelect: (row, isSelect, rowIndex, e) => {\r\n          if(isSelect === true){\r\n            this.state.selectedRows.push(row.generalinfo_id);\r\n          }\r\n          if(isSelect === false){\r\n            this.state.selectedRows.splice(this.state.selectedRows.indexOf(row.generalinfo_id),1);\r\n          }\r\n          console.log(isSelect);\r\n          console.log(rowIndex);\r\n          console.log(e);\r\n        },\r\n        onSelectAll: (isSelect, rows, e) => {\r\n         if(isSelect === true){\r\n           for(let row of rows){\r\n            this.state.selectedRows.push(row.generalinfo_id);\r\n           }\r\n         }\r\n         if(isSelect === false){\r\n          for(let row of rows){\r\n            this.state.selectedRows.splice(this.state.selectedRows.indexOf(row.generalinfo_id),1);\r\n          }\r\n        }\r\n        }\r\n      };\r\n      const cellEdit = {\r\n        mode: 'click'\r\n      };\r\n        return (\r\n\r\n            <div className=\"Appp\">\r\n                <Container>\r\n                  <Row>\r\n                  <Button  onClick={this.deleteRows} input =\"newProduct\" variant=\"danger\" size=\"lg\" active >\r\n          Delete Selected Rows\r\n         </Button>\r\n         <hr></hr>\r\n\r\n                  </Row>\r\n                  <hr></hr>\r\n                  <Row>\r\n                  <BootstrapTable keyField = 'generalinfo_id'  filter={ filterFactory()} selectRow={ selectRow }  \r\n               \r\n                  data = { this.state.generalinfo} columns = { this.state.columns }  \r\n                  striped hover condensed\r\n                 \r\n                  cellEdit={ cellEditFactory({ mode: 'dbclick',blurToSave: true ,\r\n                  afterSaveCell: (oldValue, newValue, row, column) => {\r\n                  // insert buradan yapılacak database e atılacak delete selected kısmına dikkat.\r\n                  console.log(oldValue);\r\n                  console.log(newValue);\r\n                  console.log(row.generalinfo_id);\r\n                  console.log(column);\r\n                  this.saveChanges(row.generalinfo_id,row.fromcompletedby,row.gpsproduct,row.startdate,row.caseid,row.customername,row.description,row.pname)\r\n                 }\r\n                }) } \r\n                  pagination={ paginationFactory() }\r\n                   >\r\n\r\n\r\n</BootstrapTable>\r\n                    \r\n                  </Row>\r\n  \r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}