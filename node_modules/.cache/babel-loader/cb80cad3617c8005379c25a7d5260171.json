{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.save = exports.transform = exports.getMetaInfo = undefined;\n\nvar _fileSaver = require('file-saver');\n\nvar _fileSaver2 = _interopRequireDefault(_fileSaver);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getMetaInfo = exports.getMetaInfo = function getMetaInfo(columns) {\n  return columns.map(function (column) {\n    return {\n      field: column.dataField,\n      type: column.csvType || String,\n      formatter: column.csvFormatter,\n      formatExtraData: column.formatExtraData,\n      header: column.csvText || column.text,\n      export: column.csvExport === false ? false : true,\n      row: Number(column.row) || 0,\n      rowSpan: Number(column.rowSpan) || 1,\n      colSpan: Number(column.colSpan) || 1\n    };\n  }).filter(function (_) {\n    return _.export;\n  });\n};\n/* eslint no-unneeded-ternary: 0 */\n\n\nvar transform = exports.transform = function transform(data, meta, getValue, _ref) {\n  var separator = _ref.separator,\n      ignoreHeader = _ref.ignoreHeader;\n  var visibleColumns = meta.filter(function (m) {\n    return m.export;\n  });\n  var content = ''; // extract csv header\n\n  if (!ignoreHeader) {\n    content += visibleColumns.map(function (m) {\n      return '\"' + m.header + '\"';\n    }).join(separator);\n    content += '\\n';\n  } // extract csv body\n\n\n  if (data.length === 0) return content;\n  content += data.map(function (row, rowIndex) {\n    return visibleColumns.map(function (m) {\n      var cellContent = getValue(row, m.field);\n\n      if (m.formatter) {\n        cellContent = m.formatter(cellContent, row, rowIndex, m.formatExtraData);\n      }\n\n      if (m.type === String) {\n        return '\"' + cellContent + '\"';\n      }\n\n      return cellContent;\n    }).join(separator);\n  }).join('\\n');\n  return content;\n};\n\nvar save = exports.save = function save(content, _ref2) {\n  var noAutoBOM = _ref2.noAutoBOM,\n      fileName = _ref2.fileName;\n\n  _fileSaver2.default.saveAs(new Blob([content], {\n    type: 'text/plain;charset=utf-8'\n  }), fileName, noAutoBOM);\n};","map":null,"metadata":{},"sourceType":"script"}