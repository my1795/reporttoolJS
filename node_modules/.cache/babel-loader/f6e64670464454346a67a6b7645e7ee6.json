{"ast":null,"code":"import _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\SearchPage.js\";\nimport React, { Component } from 'react'; //import './App.css';\n\nimport { Container } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, dateFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage(props) {\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).call(this, props));\n    _this.state = {\n      fieldcolumns: [{\n        dataField: 'pname',\n        text: 'Problem Name',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field1',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field2',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field3',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field4',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field5',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field7',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field8',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field9',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'caseid',\n        text: 'Case ID',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '##dc143c',\n          width: '100px'\n        },\n        hidden: false\n      }],\n      fielddata: [],\n      columns: [{\n        dataField: 'generalinfo_id',\n        text: 'Info     ID',\n        headerAlign: 'center',\n        sort: true,\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'fromcompletedby',\n        text: 'Completed By',\n        headerAlign: 'center',\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'gpsproduct',\n        text: 'Product',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            value: 'E',\n            label: 'E'\n          }]\n        },\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'startdate',\n        text: 'Date',\n        headerAlign: 'center',\n        filter: dateFilter(),\n        editable: false,\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'caseid',\n        text: 'Case        ID',\n        sort: true,\n        filter: textFilter(),\n        headerFormatter: _this.caseIDFormatter,\n        headerAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'customername',\n        text: 'Customer Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'description',\n        text: 'Description',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        },\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '250px'\n        }\n      }, {\n        dataField: 'pname',\n        text: 'Problem     Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            value: 'E',\n            label: 'E'\n          }]\n        },\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }],\n      selectedRows: [],\n      generalinfo: []\n    };\n    _this.handleSelected = _this.handleSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveChanges = _this.saveChanges.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteRows = _this.deleteRows.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"caseIDFormatter\",\n    value: function caseIDFormatter(column, colIndex, _ref) {\n      var sortElement = _ref.sortElement,\n          filterElement = _ref.filterElement;\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, filterElement, column.text, sortElement);\n    }\n  }, {\n    key: \"handleSelected\",\n    value: function handleSelected() {\n      console.log(this.state.generalinfo.dataField);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.assignGeneralInfo();\n      this.assingProductBox();\n      this.assignProblemBox();\n    }\n  }, {\n    key: \"deleteRows\",\n    value: function deleteRows() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.state.selectedRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n          this.deleteRow(row);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.assignGeneralInfo();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(generalinfo_id) {\n      var axios = require('axios');\n\n      axios.post(\"http://localhost:4000/generalinfo/remove?generalinfo_id=\".concat(generalinfo_id), {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        method: 'POST',\n        data: \"delete sent\"\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {});\n      alert(\"Deleted\");\n    }\n  }, {\n    key: \"saveChanges\",\n    value: function saveChanges(generalinfo_id, fromcompletedby, gpsproduct, startdate, caseid, customername, description, pname) {\n      var axios = require('axios');\n\n      axios.post(\"http://localhost:4000/generalinfo/update?generalinfo_id=\".concat(generalinfo_id, \"&startdate=\").concat(startdate, \"&caseid=\").concat(caseid, \"\\n      &gpsproduct=\").concat(gpsproduct, \"&fromcompletedby=\").concat(fromcompletedby, \"&customername=\").concat(customername, \"\\n      &description=\").concat(description, \"&pname=\").concat(pname), {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        method: 'POST',\n        data: \"update sent\"\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {});\n      alert(\"changes saved\");\n    }\n  }, {\n    key: \"assignGeneralInfo\",\n    value: function assignGeneralInfo() {\n      var _this2 = this;\n\n      fetch('http://localhost:4000/generalinfo').then(function (response) {\n        return response.json();\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this2.setState({\n          generalinfo: data\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assingProductBox\",\n    value: function assingProductBox() {\n      var _this3 = this;\n\n      var products = [];\n      var opt = [];\n      fetch('http://localhost:4000/products').then(function (response) {\n        return response.json();\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var el = _step2.value;\n            products.push(el.productname);\n            console.log(el.productname);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < products.length; k++) {\n          opt.push({\n            value: products[k],\n            label: products[k]\n          });\n        }\n\n        var copy = _this3.state.columns.slice();\n\n        copy[2].editor.options = opt;\n\n        _this3.setState({\n          columns: copy\n        });\n\n        console.log(opt[0]);\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assignProblemBox\",\n    value: function assignProblemBox() {\n      var _this4 = this;\n\n      var problems = [];\n      var opt = [];\n      fetch('http://localhost:4000/problems').then(function (response) {\n        return response.json();\n      }).then(function (_ref4) {\n        var data = _ref4.data;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var el = _step3.value;\n            problems.push(el.problemname);\n            console.log(el.problemname);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < problems.length; k++) {\n          opt.push({\n            value: problems[k],\n            label: problems[k]\n          });\n        }\n\n        var copy = _this4.state.columns.slice();\n\n        copy[7].editor.options = opt;\n\n        _this4.setState({\n          columns: copy\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"arrangeExpand\",\n    value: function arrangeExpand(pname) {\n      var _this5 = this;\n\n      fetch(\"http://localhost:4000/problemfields?pname=\".concat(pname)).then(function (response) {\n        return response.json();\n      }).then(function (_ref5) {\n        var data = _ref5.data;\n        var sortedValues = Object.keys(data).sort();\n\n        var copiedfieldcolumns = _this5.state.fieldcolumns.slice();\n\n        console.log(\"sortedvalues\");\n        console.log(data);\n\n        for (var i = 1; i < Object.size(data); i++) {\n          console.log(\"entered for loop\");\n\n          if (sortedValues[i] === '') {\n            copiedfieldcolumns[i].hidden = true;\n            console.log(\"made hidden\");\n          } else {\n            copiedfieldcolumns[i].text = sortedValues[i];\n            console.log(\"text inserted\", sortedValues[i]);\n          }\n        }\n\n        _this5.setState({\n          fieldcolumns: copiedfieldcolumns\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"setFieldContents\",\n    value: function setFieldContents(caseid) {\n      var _this6 = this;\n\n      fetch(\"http://localhost:4000/fieldcontents?caseid=\".concat(caseid)).then(function (response) {\n        return response.json();\n      }).then(function (_ref6) {\n        var data = _ref6.data;\n\n        _this6.setState({\n          fielddata: data\n        });\n\n        _this6.arrangeExpand(data.pname);\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var expandRow = {\n        renderer: function renderer(row) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 363\n            },\n            __self: this\n          }, React.createElement(BootstrapTable, {\n            keyField: \"caseid\",\n            data: _this7.state.fielddata,\n            columns: _this7.state.fieldcolumns,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 365\n            },\n            __self: this\n          }));\n        }\n      };\n      var selectRow = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        bgColor: function bgColor(row, rowIndex) {\n          return rowIndex % 2 == 0 ? '#00BFFF' : '#00FFFF';\n        },\n        clickToExpand: true,\n        clickToEdit: true,\n        onSelect: function onSelect(row, isSelect, rowIndex, e) {\n          if (isSelect === true) {\n            _this7.state.selectedRows.push(row.generalinfo_id);\n\n            _this7.setFieldContents(row.caseid);\n          }\n\n          if (isSelect === false) {\n            _this7.state.selectedRows.splice(_this7.state.selectedRows.indexOf(row.generalinfo_id), 1);\n          }\n\n          console.log(row.rowKey);\n        },\n        onSelectAll: function onSelectAll(isSelect, rows, e) {\n          console.log(isSelect);\n          console.log(rows);\n          console.log(e);\n\n          if (isSelect === true) {\n            var copyselected = _this7.state.selectedRows.slice();\n\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n              for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var row = _step4.value;\n                copyselected.push(row.generalinfo_id);\n              }\n            } catch (err) {\n              _didIteratorError4 = true;\n              _iteratorError4 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                  _iterator4.return();\n                }\n              } finally {\n                if (_didIteratorError4) {\n                  throw _iteratorError4;\n                }\n              }\n            }\n\n            _this7.setState({\n              selectedRows: copyselected\n            });\n\n            console.log(\"copy selected will be printed\");\n            console.log(copyselected);\n          }\n\n          if (isSelect === false) {\n            var _copyselected = _this7.state.selectedRows.slice();\n\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = rows[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var _row = _step5.value;\n\n                _copyselected.splice(_copyselected.indexOf(_row.generalinfo_id), 1);\n              }\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n\n            _this7.setState({\n              selectedRows: _copyselected\n            });\n          }\n        }\n      };\n      var cellEdit = {\n        mode: 'click'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.deleteRows,\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"Delete Selected Rows\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"generalinfo_id\",\n        filter: filterFactory(),\n        selectRow: selectRow,\n        data: this.state.generalinfo,\n        columns: this.state.columns,\n        striped: true,\n        hover: true,\n        condensed: true,\n        expandRow: expandRow,\n        cellEdit: cellEditFactory({\n          mode: 'dbclick',\n          blurToSave: true,\n          afterSaveCell: function afterSaveCell(oldValue, newValue, row, column) {\n            // insert buradan yapılacak database e atılacak delete selected kısmına dikkat.\n            console.log(oldValue);\n            console.log(newValue);\n            console.log(row.generalinfo_id);\n            console.log(row.rowKey);\n\n            _this7.saveChanges(row.generalinfo_id, row.fromcompletedby, row.gpsproduct, row.startdate, row.caseid, row.customername, row.description, row.pname);\n          }\n        }),\n        pagination: paginationFactory(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nexport default SearchPage;","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\SearchPage.js"],"names":["React","Component","Container","Button","Row","BootstrapTable","filterFactory","textFilter","dateFilter","paginationFactory","cellEditFactory","Type","SearchPage","props","state","fieldcolumns","dataField","text","headerAlign","headerStyle","backgroundColor","width","hidden","fielddata","columns","sort","filter","editor","type","SELECT","options","value","label","editable","headerFormatter","caseIDFormatter","TEXTAREA","selectedRows","generalinfo","handleSelected","bind","saveChanges","deleteRows","column","colIndex","sortElement","filterElement","display","flexDirection","console","log","assignGeneralInfo","assingProductBox","assignProblemBox","row","deleteRow","forceUpdate","generalinfo_id","axios","require","post","headers","method","data","then","response","catch","error","alert","fromcompletedby","gpsproduct","startdate","caseid","customername","description","pname","fetch","json","setState","err","products","opt","el","push","productname","k","length","copy","slice","problems","problemname","sortedValues","Object","keys","copiedfieldcolumns","i","size","arrangeExpand","expandRow","renderer","selectRow","mode","clickToSelect","bgColor","rowIndex","clickToExpand","clickToEdit","onSelect","isSelect","e","setFieldContents","splice","indexOf","rowKey","onSelectAll","rows","copyselected","cellEdit","blurToSave","afterSaveCell","oldValue","newValue"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,aAAP,IAAwBC,UAAxB,EAAoCC,UAApC,QAAqD,+BAArD;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAO,0EAAP;AAGA,OAAOC,eAAP,IAA0BC,IAA1B,QAAsC,+BAAtC;;IACMC,U;;;;;AACF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,oFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACVC,MAAAA,YAAY,EAAC,CACZ;AACEC,QAAAA,SAAS,EAAC,OADZ;AAEEC,QAAAA,IAAI,EAAC,cAFP;AAGEC,QAAAA,WAAW,EAAC,EAHd;AAIEC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJd;AAKEC,QAAAA,MAAM,EAAE;AALV,OADY,EAQX;AACEN,QAAAA,SAAS,EAAC,QADZ;AAEEC,QAAAA,IAAI,EAAC,EAFP;AAGEC,QAAAA,WAAW,EAAC,EAHd;AAIEC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJd;AAKEC,QAAAA,MAAM,EAAE;AALV,OARW,EAeX;AACCN,QAAAA,SAAS,EAAC,QADX;AAECC,QAAAA,IAAI,EAAC,EAFN;AAGCC,QAAAA,WAAW,EAAC,EAHb;AAICC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJb;AAKCC,QAAAA,MAAM,EAAE;AALT,OAfW,EAsBZ;AACEN,QAAAA,SAAS,EAAC,QADZ;AAEEC,QAAAA,IAAI,EAAC,EAFP;AAGEC,QAAAA,WAAW,EAAC,EAHd;AAIEC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJd;AAKEC,QAAAA,MAAM,EAAE;AALV,OAtBY,EA6BZ;AACEN,QAAAA,SAAS,EAAC,QADZ;AAEEC,QAAAA,IAAI,EAAC,EAFP;AAGEC,QAAAA,WAAW,EAAC,EAHd;AAIEC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJd;AAKEC,QAAAA,MAAM,EAAE;AALV,OA7BY,EAoCZ;AACEN,QAAAA,SAAS,EAAC,QADZ;AAEEC,QAAAA,IAAI,EAAC,EAFP;AAGEC,QAAAA,WAAW,EAAC,EAHd;AAIEC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJd;AAKEC,QAAAA,MAAM,EAAE;AALV,OApCY,EA2CX;AACCN,QAAAA,SAAS,EAAC,QADX;AAECC,QAAAA,IAAI,EAAC,EAFN;AAGCC,QAAAA,WAAW,EAAC,EAHb;AAICC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJb;AAKCC,QAAAA,MAAM,EAAE;AALT,OA3CW,EAkDZ;AACEN,QAAAA,SAAS,EAAC,QADZ;AAEEC,QAAAA,IAAI,EAAC,EAFP;AAGEC,QAAAA,WAAW,EAAC,EAHd;AAIEC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJd;AAKEC,QAAAA,MAAM,EAAE;AALV,OAlDY,EAyDZ;AACEN,QAAAA,SAAS,EAAC,QADZ;AAEEC,QAAAA,IAAI,EAAC,EAFP;AAGEC,QAAAA,WAAW,EAAC,EAHd;AAIEC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJd;AAKEC,QAAAA,MAAM,EAAE;AALV,OAzDY,EAgEV;AACAN,QAAAA,SAAS,EAAC,QADV;AAEAC,QAAAA,IAAI,EAAC,SAFL;AAGAC,QAAAA,WAAW,EAAC,EAHZ;AAIAC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,UAAnB;AAA8BC,UAAAA,KAAK,EAAC;AAApC,SAJZ;AAKAC,QAAAA,MAAM,EAAE;AALR,OAhEU,CADH;AAyEVC,MAAAA,SAAS,EAAE,EAzED;AA0ETC,MAAAA,OAAO,EAAE,CAAC;AACNR,QAAAA,SAAS,EAAE,gBADL;AAENC,QAAAA,IAAI,EAAE,aAFA;AAGNC,QAAAA,WAAW,EAAE,QAHP;AAINO,QAAAA,IAAI,EAAE,IAJA;AAKNC,QAAAA,MAAM,EAAEnB,UAAU,EALZ;AAMNY,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA6BC,UAAAA,KAAK,EAAC;AAAnC;AANN,OAAD,EAOJ;AACDL,QAAAA,SAAS,EAAE,iBADV;AAEDC,QAAAA,IAAI,EAAE,cAFL;AAGDC,QAAAA,WAAW,EAAE,QAHZ;AAIDQ,QAAAA,MAAM,EAAEnB,UAAU,EAJjB;AAKDY,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA6BC,UAAAA,KAAK,EAAC;AAAnC;AALX,OAPI,EAaJ;AACDL,QAAAA,SAAS,EAAE,YADV;AAEDC,QAAAA,IAAI,EAAE,SAFL;AAGDC,QAAAA,WAAW,EAAE,QAHZ;AAIDQ,QAAAA,MAAM,EAAEnB,UAAU,EAJjB;AAKDoB,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAEjB,IAAI,CAACkB,MADL;AAENC,UAAAA,OAAO,EAAE,CAAC;AAERC,YAAAA,KAAK,EAAE,GAFC;AAGRC,YAAAA,KAAK,EAAE;AAHC,WAAD;AAFH,SALP;AAaDb,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA6BC,UAAAA,KAAK,EAAC;AAAnC;AAbX,OAbI,EA4BP;AACEL,QAAAA,SAAS,EAAE,WADb;AAEEC,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,WAAW,EAAE,QAHf;AAIEQ,QAAAA,MAAM,EAAElB,UAAU,EAJpB;AAKEyB,QAAAA,QAAQ,EAAE,KALZ;AAMEd,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA6BC,UAAAA,KAAK,EAAC;AAAnC;AANd,OA5BO,EAoCP;AACEL,QAAAA,SAAS,EAAE,QADb;AAEEC,QAAAA,IAAI,EAAE,gBAFR;AAGEQ,QAAAA,IAAI,EAAE,IAHR;AAIEC,QAAAA,MAAM,EAAEnB,UAAU,EAJpB;AAKE2B,QAAAA,eAAe,EAAE,MAAKC,eALxB;AAMEjB,QAAAA,WAAW,EAAE,QANf;AAOEC,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA6BC,UAAAA,KAAK,EAAC;AAAnC;AAPd,OApCO,EA6CP;AACEL,QAAAA,SAAS,EAAE,cADb;AAEEC,QAAAA,IAAI,EAAE,eAFR;AAGEC,QAAAA,WAAW,EAAE,QAHf;AAIEQ,QAAAA,MAAM,EAAEnB,UAAU,EAJpB;AAKEY,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA6BC,UAAAA,KAAK,EAAC;AAAnC;AALd,OA7CO,EAoDP;AACEL,QAAAA,SAAS,EAAE,aADb;AAEEC,QAAAA,IAAI,EAAE,aAFR;AAGEC,QAAAA,WAAW,EAAE,QAHf;AAIEQ,QAAAA,MAAM,EAAEnB,UAAU,EAJpB;AAKEoB,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAEjB,IAAI,CAACyB;AADL,SALV;AAQEjB,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA6BC,UAAAA,KAAK,EAAC;AAAnC;AARd,OApDO,EA8DP;AACEL,QAAAA,SAAS,EAAE,OADb;AAEEC,QAAAA,IAAI,EAAE,kBAFR;AAGEC,QAAAA,WAAW,EAAE,QAHf;AAIEQ,QAAAA,MAAM,EAAEnB,UAAU,EAJpB;AAKEoB,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAEjB,IAAI,CAACkB,MADL;AAENC,UAAAA,OAAO,EAAE,CAAC;AAERC,YAAAA,KAAK,EAAE,GAFC;AAGRC,YAAAA,KAAK,EAAE;AAHC,WAAD;AAFH,SALV;AAaEb,QAAAA,WAAW,EAAC;AAAEC,UAAAA,eAAe,EAAE,SAAnB;AAA6BC,UAAAA,KAAK,EAAC;AAAnC;AAbd,OA9DO,CA1EA;AA2JPgB,MAAAA,YAAY,EAAE,EA3JP;AA6JPC,MAAAA,WAAW,EAAE;AA7JN,KAAb;AAmKA,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,uDAAtB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AACA,UAAKE,UAAL,GAAkB,MAAKA,UAAL,CAAgBF,IAAhB,uDAAlB;AAvKc;AAwKjB;;;;oCAGgBG,M,EAAQC,Q,QAA0C;AAAA,UAA9BC,WAA8B,QAA9BA,WAA8B;AAAA,UAAjBC,aAAiB,QAAjBA,aAAiB;AAC/D,aACE;AAAK,QAAA,KAAK,EAAG;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,aAAa,EAAE;AAAlC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIF,aADJ,EAEIH,MAAM,CAAC1B,IAFX,EAGI4B,WAHJ,CADF;AAOD;;;qCACe;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpC,KAAL,CAAWwB,WAAX,CAAuBtB,SAAnC;AACH;;;yCAEiB;AAClB,WAAKmC,iBAAL;AACA,WAAKC,gBAAL;AACA,WAAKC,gBAAL;AACC;;;iCAES;AAAA;AAAA;AAAA;;AAAA;AACV,6BAAe,KAAKvC,KAAL,CAAWuB,YAA1B,8HAAuC;AAAA,cAA/BiB,GAA+B;AACrC,eAAKC,SAAL,CAAeD,GAAf;AACD;AAHS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIV,WAAKH,iBAAL;AACA,WAAKK,WAAL;AAED;;;8BACSC,c,EAAe;AACvB,UAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAD,MAAAA,KAAK,CAACE,IAAN,mEAAsEH,cAAtE,GAAuF;AACrFI,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAD4E;AAErFC,QAAAA,MAAM,EAAE,MAF6E;AAGrFC,QAAAA,IAAI,EAAE;AAH+E,OAAvF,EAKDC,IALC,CAKI,UAAUC,QAAV,EAAoB;AACxB;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,QAAQ,CAACF,IAArB;AACD,OARC,EASDG,KATC,CASK,UAAUC,KAAV,EAAiB;AACtB;AACAlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACD,OAZC,EAaDH,IAbC,CAaI,YAAY,CAGjB,CAhBC;AAiBAI,MAAAA,KAAK,CAAC,SAAD,CAAL;AAED;;;gCACWX,c,EAAeY,e,EAAgBC,U,EAAWC,S,EAAUC,M,EAAOC,Y,EAAaC,W,EAAYC,K,EAAM;AACpG,UAAMjB,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAD,MAAAA,KAAK,CAACE,IAAN,mEAAsEH,cAAtE,wBAAkGc,SAAlG,qBAAsHC,MAAtH,iCACcF,UADd,8BAC4CD,eAD5C,2BAC4EI,YAD5E,kCAEeC,WAFf,oBAEoCC,KAFpC,GAE4C;AAC1Cd,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SADiC;AAE1CC,QAAAA,MAAM,EAAE,MAFkC;AAG1CC,QAAAA,IAAI,EAAE;AAHoC,OAF5C,EAODC,IAPC,CAOI,UAAUC,QAAV,EAAoB;AACxB;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYe,QAAQ,CAACF,IAArB;AACD,OAVC,EAWDG,KAXC,CAWK,UAAUC,KAAV,EAAiB;AACtB;AACAlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACD,OAdC,EAeDH,IAfC,CAeI,YAAY,CAGjB,CAlBC;AAmBAI,MAAAA,KAAK,CAAC,eAAD,CAAL;AAED;;;wCACoB;AAAA;;AACjBQ,MAAAA,KAAK,CAAC,mCAAD,CAAL,CACCZ,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACY,IAAT,EAAJ;AAAA,OADd,EAECb,IAFD,CAEM,iBAAc;AAAA,YAAXD,IAAW,SAAXA,IAAW;;AAClB,QAAA,MAAI,CAACe,QAAL,CAAc;AAACxC,UAAAA,WAAW,EAAGyB;AAAf,SAAd;AAED,OALD,EAMCG,KAND,CAMO,UAAAa,GAAG;AAAA,eAAI9B,OAAO,CAACkB,KAAR,EAAJ;AAAA,OANV;AAQD;;;uCACiB;AAAA;;AAChB,UAAIa,QAAQ,GAAG,EAAf;AACA,UAAIC,GAAG,GAAG,EAAV;AACAL,MAAAA,KAAK,CAAC,gCAAD,CAAL,CACCZ,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACY,IAAT,EAAJ;AAAA,OADd,EAECb,IAFD,CAEM,iBAAc;AAAA,YAAXD,IAAW,SAAXA,IAAW;AAAA;AAAA;AAAA;;AAAA;AAClB,gCAAcA,IAAd,mIAAmB;AAAA,gBAAXmB,EAAW;AACjBF,YAAAA,QAAQ,CAACG,IAAT,CAAcD,EAAE,CAACE,WAAjB;AACAnC,YAAAA,OAAO,CAACC,GAAR,CAAYgC,EAAE,CAACE,WAAf;AACD;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMnB,OARD,EASCpB,IATD,CASO,YAAM;AACX,aAAI,IAAIqB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAEL,QAAQ,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AACpCJ,UAAAA,GAAG,CAACE,IAAJ,CAAS;AAACpD,YAAAA,KAAK,EAAEiD,QAAQ,CAACK,CAAD,CAAhB;AAAqBrD,YAAAA,KAAK,EAAEgD,QAAQ,CAACK,CAAD;AAApC,WAAT;AACD;;AACF,YAAIE,IAAI,GAAG,MAAI,CAACzE,KAAL,CAAWU,OAAX,CAAmBgE,KAAnB,EAAX;;AACAD,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQ5D,MAAR,CAAeG,OAAf,GAAyBmD,GAAzB;;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AAACtD,UAAAA,OAAO,EAAE+D;AAAV,SAAd;;AACCtC,QAAAA,OAAO,CAACC,GAAR,CAAY+B,GAAG,CAAC,CAAD,CAAf;AACD,OAjBD,EAkBCf,KAlBD,CAkBO,UAAAa,GAAG;AAAA,eAAI9B,OAAO,CAACkB,KAAR,EAAJ;AAAA,OAlBV;AAsBD;;;uCACiB;AAAA;;AAChB,UAAIsB,QAAQ,GAAG,EAAf;AACA,UAAIR,GAAG,GAAG,EAAV;AACAL,MAAAA,KAAK,CAAC,gCAAD,CAAL,CACCZ,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACY,IAAT,EAAJ;AAAA,OADd,EAECb,IAFD,CAEM,iBAAc;AAAA,YAAXD,IAAW,SAAXA,IAAW;AAAA;AAAA;AAAA;;AAAA;AAClB,gCAAcA,IAAd,mIAAmB;AAAA,gBAAXmB,EAAW;AACjBO,YAAAA,QAAQ,CAACN,IAAT,CAAcD,EAAE,CAACQ,WAAjB;AACAzC,YAAAA,OAAO,CAACC,GAAR,CAAYgC,EAAE,CAACQ,WAAf;AACD;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMnB,OARD,EASC1B,IATD,CASO,YAAM;AACX,aAAI,IAAIqB,CAAC,GAAE,CAAX,EAAcA,CAAC,GAAEI,QAAQ,CAACH,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AACpCJ,UAAAA,GAAG,CAACE,IAAJ,CAAS;AAACpD,YAAAA,KAAK,EAAE0D,QAAQ,CAACJ,CAAD,CAAhB;AAAqBrD,YAAAA,KAAK,EAAEyD,QAAQ,CAACJ,CAAD;AAApC,WAAT;AACD;;AACF,YAAIE,IAAI,GAAG,MAAI,CAACzE,KAAL,CAAWU,OAAX,CAAmBgE,KAAnB,EAAX;;AACAD,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQ5D,MAAR,CAAeG,OAAf,GAAyBmD,GAAzB;;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AAACtD,UAAAA,OAAO,EAAE+D;AAAV,SAAd;AACA,OAhBD,EAiBCrB,KAjBD,CAiBO,UAAAa,GAAG;AAAA,eAAI9B,OAAO,CAACkB,KAAR,EAAJ;AAAA,OAjBV;AAqBD;;;kCACaQ,K,EAAM;AAAA;;AAClBC,MAAAA,KAAK,qDAA8CD,KAA9C,EAAL,CACCX,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACY,IAAT,EAAJ;AAAA,OADd,EAEEb,IAFF,CAEO,iBAAc;AAAA,YAAXD,IAAW,SAAXA,IAAW;AACnB,YAAI4B,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAY9B,IAAZ,EAAkBtC,IAAlB,EAAnB;;AACA,YAAIqE,kBAAkB,GAAG,MAAI,CAAChF,KAAL,CAAWC,YAAX,CAAwByE,KAAxB,EAAzB;;AACAvC,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYa,IAAZ;;AAIA,aAAI,IAAIgC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEH,MAAM,CAACI,IAAP,CAAYjC,IAAZ,CAAlB,EAAqCgC,CAAC,EAAtC,EAAyC;AACvC9C,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACE,cAAGyC,YAAY,CAACI,CAAD,CAAZ,KAAoB,EAAvB,EAA0B;AACxBD,YAAAA,kBAAkB,CAACC,CAAD,CAAlB,CAAsBzE,MAAtB,GAA+B,IAA/B;AACA2B,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,WAHD,MAII;AACF4C,YAAAA,kBAAkB,CAACC,CAAD,CAAlB,CAAsB9E,IAAtB,GAA6B0E,YAAY,CAACI,CAAD,CAAzC;AACA9C,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6ByC,YAAY,CAACI,CAAD,CAAzC;AACD;AACJ;;AACD,QAAA,MAAI,CAACjB,QAAL,CAAc;AAAC/D,UAAAA,YAAY,EAAE+E;AAAf,SAAd;AACH,OAtBC,EAuBD5B,KAvBC,CAuBK,UAAAa,GAAG;AAAA,eAAI9B,OAAO,CAACkB,KAAR,EAAJ;AAAA,OAvBR;AAyBD;;;qCAEgBK,M,EAAO;AAAA;;AACtBI,MAAAA,KAAK,sDAA+CJ,MAA/C,EAAL,CACDR,IADC,CACI,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACY,IAAT,EAAJ;AAAA,OADZ,EAEAb,IAFA,CAEK,iBAAc;AAAA,YAAXD,IAAW,SAAXA,IAAW;;AACrB,QAAA,MAAI,CAACe,QAAL,CAAc;AAACvD,UAAAA,SAAS,EAAGwC;AAAb,SAAd;;AACA,QAAA,MAAI,CAACkC,aAAL,CAAmBlC,IAAI,CAACY,KAAxB;AACD,OALG,EAMHT,KANG,CAMG,UAAAa,GAAG;AAAA,eAAI9B,OAAO,CAACkB,KAAR,EAAJ;AAAA,OANN;AAQD;;;6BACM;AAAA;;AACP,UAAQ+B,SAAS,GAAE;AACjBC,QAAAA,QAAQ,EAAE,kBAAA7C,GAAG;AAAA,iBAEX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEC,oBAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,QAAzB;AAAkC,YAAA,IAAI,EAAG,MAAI,CAACxC,KAAL,CAAWS,SAApD;AAAgE,YAAA,OAAO,EAAG,MAAI,CAACT,KAAL,CAAWC,YAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD,CAFW;AAAA;AADI,OAAnB;AAWA,UAAMqF,SAAS,GAAG;AAChBC,QAAAA,IAAI,EAAE,UADU;AAEhBC,QAAAA,aAAa,EAAE,IAFC;AAGhBC,QAAAA,OAAO,EAAE,iBAACjD,GAAD,EAAMkD,QAAN;AAAA,iBAAoBA,QAAQ,GAAG,CAAX,IAAgB,CAAhB,GAAoB,SAApB,GAAgC,SAApD;AAAA,SAHO;AAIhBC,QAAAA,aAAa,EAAE,IAJC;AAKhBC,QAAAA,WAAW,EAAE,IALG;AAMhBC,QAAAA,QAAQ,EAAE,kBAACrD,GAAD,EAAMsD,QAAN,EAAgBJ,QAAhB,EAA0BK,CAA1B,EAAgC;AACxC,cAAGD,QAAQ,KAAK,IAAhB,EAAqB;AACnB,YAAA,MAAI,CAAC9F,KAAL,CAAWuB,YAAX,CAAwB8C,IAAxB,CAA6B7B,GAAG,CAACG,cAAjC;;AAEA,YAAA,MAAI,CAACqD,gBAAL,CAAsBxD,GAAG,CAACkB,MAA1B;AACD;;AACD,cAAGoC,QAAQ,KAAK,KAAhB,EAAsB;AACpB,YAAA,MAAI,CAAC9F,KAAL,CAAWuB,YAAX,CAAwB0E,MAAxB,CAA+B,MAAI,CAACjG,KAAL,CAAWuB,YAAX,CAAwB2E,OAAxB,CAAgC1D,GAAG,CAACG,cAApC,CAA/B,EAAmF,CAAnF;AACD;;AACFR,UAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAAC2D,MAAhB;AAEA,SAjBe;AAkBhBC,QAAAA,WAAW,EAAE,qBAACN,QAAD,EAAWO,IAAX,EAAiBN,CAAjB,EAAuB;AACjC5D,UAAAA,OAAO,CAACC,GAAR,CAAY0D,QAAZ;AACA3D,UAAAA,OAAO,CAACC,GAAR,CAAYiE,IAAZ;AACAlE,UAAAA,OAAO,CAACC,GAAR,CAAY2D,CAAZ;;AACF,cAAGD,QAAQ,KAAK,IAAhB,EAAqB;AACnB,gBAAIQ,YAAY,GAAG,MAAI,CAACtG,KAAL,CAAWuB,YAAX,CAAwBmD,KAAxB,EAAnB;;AADmB;AAAA;AAAA;;AAAA;AAEnB,oCAAe2B,IAAf,mIAAoB;AAAA,oBAAZ7D,GAAY;AACnB8D,gBAAAA,YAAY,CAACjC,IAAb,CAAkB7B,GAAG,CAACG,cAAtB;AACA;AAJkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKnB,YAAA,MAAI,CAACqB,QAAL,CAAc;AAACzC,cAAAA,YAAY,EAAE+E;AAAf,aAAd;;AACAnE,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYkE,YAAZ;AAED;;AACD,cAAGR,QAAQ,KAAK,KAAhB,EAAsB;AACrB,gBAAIQ,aAAY,GAAG,MAAI,CAACtG,KAAL,CAAWuB,YAAX,CAAwBmD,KAAxB,EAAnB;;AADqB;AAAA;AAAA;;AAAA;AAErB,oCAAe2B,IAAf,mIAAoB;AAAA,oBAAZ7D,IAAY;;AAClB8D,gBAAAA,aAAY,CAACL,MAAb,CAAoBK,aAAY,CAACJ,OAAb,CAAqB1D,IAAG,CAACG,cAAzB,CAApB,EAA6D,CAA7D;AAED;AALoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMrB,YAAA,MAAI,CAACqB,QAAL,CAAc;AAACzC,cAAAA,YAAY,EAAE+E;AAAf,aAAd;AAEA;AAEA;AA1Cc,OAAlB;AA4CA,UAAMC,QAAQ,GAAG;AACfhB,QAAAA,IAAI,EAAE;AADS,OAAjB;AAME,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAS,QAAA,OAAO,EAAE,KAAK3D,UAAvB;AAAoC,QAAA,OAAO,EAAC,QAA5C;AAAqD,QAAA,IAAI,EAAC,IAA1D;AAA+D,QAAA,MAAM,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADA,CAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAG,gBAA3B;AAA6C,QAAA,MAAM,EAAGpC,aAAa,EAAnE;AAAuE,QAAA,SAAS,EAAG8F,SAAnF;AAEA,QAAA,IAAI,EAAK,KAAKtF,KAAL,CAAWwB,WAFpB;AAEiC,QAAA,OAAO,EAAK,KAAKxB,KAAL,CAAWU,OAFxD;AAGA,QAAA,OAAO,MAHP;AAGQ,QAAA,KAAK,MAHb;AAGc,QAAA,SAAS,MAHvB;AAIA,QAAA,SAAS,EAAI0E,SAJb;AAKA,QAAA,QAAQ,EAAGxF,eAAe,CAAC;AAAE2F,UAAAA,IAAI,EAAE,SAAR;AAAkBiB,UAAAA,UAAU,EAAE,IAA9B;AAC3BC,UAAAA,aAAa,EAAE,uBAACC,QAAD,EAAWC,QAAX,EAAqBnE,GAArB,EAA0BX,MAA1B,EAAqC;AACpD;AACAM,YAAAA,OAAO,CAACC,GAAR,CAAYsE,QAAZ;AACAvE,YAAAA,OAAO,CAACC,GAAR,CAAYuE,QAAZ;AACAxE,YAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAACG,cAAhB;AAEAR,YAAAA,OAAO,CAACC,GAAR,CAAYI,GAAG,CAAC2D,MAAhB;;AACA,YAAA,MAAI,CAACxE,WAAL,CAAiBa,GAAG,CAACG,cAArB,EAAoCH,GAAG,CAACe,eAAxC,EAAwDf,GAAG,CAACgB,UAA5D,EAAuEhB,GAAG,CAACiB,SAA3E,EAAqFjB,GAAG,CAACkB,MAAzF,EAAgGlB,GAAG,CAACmB,YAApG,EAAiHnB,GAAG,CAACoB,WAArH,EAAiIpB,GAAG,CAACqB,KAArI;AACA;AAT2B,SAAD,CAL1B;AAgBA,QAAA,UAAU,EAAGlE,iBAAiB,EAhB9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAVF,CADJ,CAFJ;AA0CH;;;;EAhcoBR,S;;AAoczB,eAAeW,UAAf","sourcesContent":["import React, { Component } from 'react';\r\n//import './App.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter, dateFilter} from 'react-bootstrap-table2-filter';\r\n\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css'\r\n\r\n\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nclass SearchPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n           fieldcolumns:[\r\n            {\r\n              dataField:'pname',\r\n              text:'Problem Name',\r\n              headerAlign:'',\r\n              headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n              hidden: false\r\n            },\r\n             {\r\n               dataField:'field1',\r\n               text:'',\r\n               headerAlign:'',\r\n               headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n               hidden: false\r\n             },\r\n             {\r\n              dataField:'field2',\r\n              text:'',\r\n              headerAlign:'',\r\n              headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n              hidden: false\r\n            },\r\n            {\r\n              dataField:'field3',\r\n              text:'',\r\n              headerAlign:'',\r\n              headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n              hidden: false\r\n            },\r\n            {\r\n              dataField:'field4',\r\n              text:'',\r\n              headerAlign:'',\r\n              headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n              hidden: false\r\n            },\r\n            {\r\n              dataField:'field5',\r\n              text:'',\r\n              headerAlign:'',\r\n              headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n              hidden: false\r\n            },\r\n             {\r\n              dataField:'field7',\r\n              text:'',\r\n              headerAlign:'',\r\n              headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n              hidden: false\r\n            },\r\n            {\r\n              dataField:'field8',\r\n              text:'',\r\n              headerAlign:'',\r\n              headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n              hidden: false\r\n            },\r\n            {\r\n              dataField:'field9',\r\n              text:'',\r\n              headerAlign:'',\r\n              headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n              hidden: false\r\n            },\r\n              {\r\n              dataField:'caseid',\r\n              text:'Case ID',\r\n              headerAlign:'',\r\n              headerStyle:{ backgroundColor: '##dc143c',width:'100px'},\r\n              hidden: false\r\n            }\r\n           ],\r\n           fielddata: [],\r\n            columns: [{\r\n                dataField: 'generalinfo_id',\r\n                text: 'Info     ID',\r\n                headerAlign: 'center',\r\n                sort: true,\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              }, {\r\n                dataField: 'fromcompletedby',\r\n                text: 'Completed By',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              }, {\r\n                dataField: 'gpsproduct',\r\n                text: 'Product',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.SELECT,\r\n                  options: [{\r\n\r\n                    value: 'E',\r\n                    label: 'E'\r\n                  }]\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              },\r\n              {\r\n                dataField: 'startdate',\r\n                text: 'Date',\r\n                headerAlign: 'center',\r\n                filter: dateFilter(),\r\n                editable: false,\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              },\r\n              {\r\n                dataField: 'caseid',\r\n                text: 'Case        ID',\r\n                sort: true,\r\n                filter: textFilter(),\r\n                headerFormatter: this.caseIDFormatter,\r\n                headerAlign: 'center',\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              },\r\n              {\r\n                dataField: 'customername',\r\n                text: 'Customer Name',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              },\r\n              {\r\n                dataField: 'description',\r\n                text: 'Description',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.TEXTAREA\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784',width:'250px'}\r\n              },\r\n              {\r\n                dataField: 'pname',\r\n                text: 'Problem     Name',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.SELECT,\r\n                  options: [{\r\n\r\n                    value: 'E',\r\n                    label: 'E'\r\n                  }]\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              }\r\n\r\n                         \r\n            ],\r\n          \r\n              selectedRows: [],\r\n\r\n              generalinfo: [\r\n               \r\n              ],\r\n\r\n            \r\n        }\r\n        this.handleSelected = this.handleSelected.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n        this.deleteRows = this.deleteRows.bind(this);\r\n    }\r\n\r\n \r\n     caseIDFormatter(column, colIndex, { sortElement, filterElement }) {\r\n        return (\r\n          <div style={ { display: 'flex', flexDirection: 'column' } }>\r\n            { filterElement }\r\n            { column.text }\r\n            { sortElement }\r\n          </div>\r\n        );\r\n      }\r\n      handleSelected(){\r\n          console.log(this.state.generalinfo.dataField);\r\n      }\r\n     \r\n    componentWillMount(){\r\n      this.assignGeneralInfo();\r\n      this.assingProductBox();\r\n      this.assignProblemBox();\r\n      }\r\n\r\n    deleteRows(){\r\n      for(let row of this.state.selectedRows){\r\n        this.deleteRow(row);\r\n      }\r\n      this.assignGeneralInfo();\r\n      this.forceUpdate();\r\n      \r\n    }\r\n    deleteRow(generalinfo_id){\r\n      const axios = require('axios');\r\n      axios.post(`http://localhost:4000/generalinfo/remove?generalinfo_id=${generalinfo_id}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data: \"delete sent\"\r\n      })\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n\r\n      \r\n    });\r\n      alert(\"Deleted\");\r\n\r\n    }\r\n    saveChanges(generalinfo_id,fromcompletedby,gpsproduct,startdate,caseid,customername,description,pname){\r\n      const axios = require('axios');\r\n      axios.post(`http://localhost:4000/generalinfo/update?generalinfo_id=${generalinfo_id}&startdate=${startdate}&caseid=${caseid}\r\n      &gpsproduct=${gpsproduct}&fromcompletedby=${fromcompletedby}&customername=${customername}\r\n      &description=${description}&pname=${pname}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data: \"update sent\"\r\n      })\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n\r\n      \r\n    });\r\n      alert(\"changes saved\");\r\n\r\n    }\r\n      assignGeneralInfo(){\r\n        fetch('http://localhost:4000/generalinfo')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          this.setState({generalinfo : data})\r\n          \r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      }\r\n      assingProductBox(){\r\n        let products = [];\r\n        let opt = [];\r\n        fetch('http://localhost:4000/products')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          for(var el of data){\r\n            products.push(el.productname);\r\n            console.log(el.productname);\r\n          }\r\n          \r\n        })\r\n        .then( () => {\r\n          for(var k =0; k< products.length; k++){\r\n            opt.push({value: products[k], label: products[k] });\r\n          }\r\n         var copy = this.state.columns.slice();\r\n         copy[2].editor.options = opt;\r\n         this.setState({columns: copy});\r\n          console.log(opt[0]);\r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      \r\n      \r\n      }\r\n      assignProblemBox(){\r\n        let problems = [];\r\n        let opt = [];\r\n        fetch('http://localhost:4000/problems')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          for(var el of data){\r\n            problems.push(el.problemname);\r\n            console.log(el.problemname);\r\n          }\r\n          \r\n        })\r\n        .then( () => {\r\n          for(var k =0; k< problems.length; k++){\r\n            opt.push({value: problems[k], label: problems[k] });\r\n          }\r\n         var copy = this.state.columns.slice();\r\n         copy[7].editor.options = opt;\r\n         this.setState({columns: copy});\r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      \r\n      \r\n      }\r\n      arrangeExpand(pname){\r\n        fetch(`http://localhost:4000/problemfields?pname=${pname}`)\r\n        .then(response => response.json())\r\n         .then(({ data }) => {\r\n          var sortedValues = Object.keys(data).sort();\r\n          var copiedfieldcolumns = this.state.fieldcolumns.slice();\r\n          console.log(\"sortedvalues\");\r\n          console.log(data);\r\n  \r\n\r\n\r\n          for(let i = 1; i< Object.size(data); i++){\r\n            console.log(\"entered for loop\");\r\n              if(sortedValues[i] === ''){\r\n                copiedfieldcolumns[i].hidden = true;\r\n                console.log(\"made hidden\");\r\n              }\r\n              else{\r\n                copiedfieldcolumns[i].text = sortedValues[i];\r\n                console.log(\"text inserted\", sortedValues[i] );\r\n              }\r\n          }\r\n          this.setState({fieldcolumns: copiedfieldcolumns});\r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n      }\r\n   \r\n      setFieldContents(caseid){\r\n        fetch(`http://localhost:4000/fieldcontents?caseid=${caseid}`)\r\n      .then(response => response.json())\r\n       .then(({ data }) => {\r\n      this.setState({fielddata : data});\r\n      this.arrangeExpand(data.pname)\r\n    })\r\n    .catch(err => console.error()\r\n    )\r\n      }\r\n    render() {\r\n      const   expandRow= {\r\n        renderer: row => (\r\n\r\n          <div>\r\n         \r\n           <BootstrapTable keyField='caseid' data={ this.state.fielddata } columns={ this.state.fieldcolumns } />\r\n      \r\n          </div>\r\n        )\r\n      };\r\n\r\n      const selectRow = {\r\n        mode: 'checkbox',\r\n        clickToSelect: true,\r\n        bgColor: (row, rowIndex) => (rowIndex % 2 == 0 ? '#00BFFF' : '#00FFFF'),\r\n        clickToExpand: true,\r\n        clickToEdit: true,\r\n        onSelect: (row, isSelect, rowIndex, e) => {\r\n          if(isSelect === true){\r\n            this.state.selectedRows.push(row.generalinfo_id);\r\n\r\n            this.setFieldContents(row.caseid);\r\n          }\r\n          if(isSelect === false){\r\n            this.state.selectedRows.splice(this.state.selectedRows.indexOf(row.generalinfo_id),1);\r\n          }\r\n         console.log(row.rowKey);\r\n          \r\n        },\r\n        onSelectAll: (isSelect, rows, e) => {\r\n           console.log(isSelect);\r\n           console.log(rows);\r\n           console.log(e);\r\n         if(isSelect === true){\r\n           let copyselected = this.state.selectedRows.slice();\r\n           for(let row of rows){\r\n            copyselected.push(row.generalinfo_id);\r\n           }\r\n           this.setState({selectedRows: copyselected});\r\n           console.log(\"copy selected will be printed\");\r\n           console.log(copyselected);\r\n          \r\n         }\r\n         if(isSelect === false){\r\n          let copyselected = this.state.selectedRows.slice();\r\n          for(let row of rows){\r\n            copyselected.splice(copyselected.indexOf(row.generalinfo_id),1);\r\n            \r\n          }\r\n          this.setState({selectedRows: copyselected});\r\n         \r\n         }\r\n     \r\n         }\r\n      };\r\n      const cellEdit = {\r\n        mode: 'click'\r\n      };\r\n\r\n      \r\n      \r\n        return (\r\n          \r\n            <div>\r\n                <Container>\r\n       \r\n                  <Row>\r\n                  <Button  onClick={this.deleteRows}  variant=\"danger\" size=\"lg\" active >\r\n          Delete Selected Rows\r\n         </Button>\r\n    \r\n  \r\n                  </Row>\r\n                  <hr></hr>\r\n                  <Row>\r\n                  <BootstrapTable keyField = 'generalinfo_id'  filter={ filterFactory()} selectRow={ selectRow }  \r\n               \r\n                  data = { this.state.generalinfo} columns = { this.state.columns }  \r\n                  striped hover condensed\r\n                  expandRow = {expandRow}\r\n                  cellEdit={ cellEditFactory({ mode: 'dbclick',blurToSave: true ,\r\n                  afterSaveCell: (oldValue, newValue, row, column) => {\r\n                  // insert buradan yapılacak database e atılacak delete selected kısmına dikkat.\r\n                  console.log(oldValue);\r\n                  console.log(newValue);\r\n                  console.log(row.generalinfo_id);\r\n               \r\n                  console.log(row.rowKey);\r\n                  this.saveChanges(row.generalinfo_id,row.fromcompletedby,row.gpsproduct,row.startdate,row.caseid,row.customername,row.description,row.pname)\r\n                 }\r\n                }) } \r\n                  pagination={ paginationFactory() }\r\n                   >\r\n\r\n\r\n</BootstrapTable>\r\n                    \r\n                  </Row>\r\n  \r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}