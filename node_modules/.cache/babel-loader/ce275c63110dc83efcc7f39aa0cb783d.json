{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\General.js\";\nimport React from 'react';\nimport mysql from 'mysql'; //import './styles/custom.css';\n//import './styles/normalize.css';\n//import './styles/prog-tracker.css';\n\nimport './styles/skeleton.css';\nimport { Button, DropdownButton } from 'react-bootstrap';\nimport { Navbar } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\nimport { Dropdown } from 'react-bootstrap';\nimport { Container } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar General =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(General, _React$Component);\n\n  function General(props) {\n    var _this;\n\n    _classCallCheck(this, General);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(General).call(this, props));\n    _this.state = {\n      date: new Date(),\n      problemType: 'Choose Problem Type!',\n      problemPage: React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }),\n      caseID: '',\n      upgrade: '',\n      from: '',\n      toLoad: '',\n      currentLoad: '',\n      customerName: '',\n      description: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDate = _this.handleDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(General, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, event.target.name, event.target.value));\n    }\n  }, {\n    key: \"handleDate\",\n    value: function handleDate(inputDate) {\n      this.setState({\n        date: inputDate\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      e.preventDefault();\n      console.log('clicked');\n      this.getInfo();\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(e) {\n      e.preventDefault();\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n\n      if (this.state.problemType === 'Hardware') {\n        this.setState({\n          problemPage: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, \"from: \"), React.createElement(\"input\", {\n            name: \"from\",\n            className: \"u-full-width\",\n            type: \"text\",\n            onChange: this.handleChange,\n            value: this.state.from,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, \"to Load: \"), React.createElement(\"input\", {\n            name: \"toLoad\",\n            className: \"u-full-width\",\n            type: \"text\",\n            onChange: this.handleChange,\n            value: this.state.toLoad,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }))\n        });\n        forceUpdate();\n      } else if (this.state.problemType === 'Upgrade') {\n        this.setState({\n          problemPage: React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, \"Current Load: \"), React.createElement(\"input\", {\n            name: \"currentLoad\",\n            className: \"u-full-width\",\n            type: \"text\",\n            onChange: this.handleChange,\n            value: this.state.currentLoad,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }))\n        });\n        forceUpdate();\n      } else {\n        this.setState({\n          problemPage: React.createElement(\"hr\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          })\n        });\n        forceUpdate();\n      }\n    }\n  }, {\n    key: \"getInfo\",\n    value: function getInfo() {\n      fetch('http://localhost:4000/generalinfo').then(function (response) {\n        return response.json();\n      }).then(function (_ref) {\n        var data = _ref.data;\n        console.log(data);\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"addInfo\",\n    value: function addInfo() {\n      fetch('http://localhost:4000/generalinfo/add').then().catch(function (err) {\n        return console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header\",\n        bg: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"SELECT THE DATE\"), React.createElement(DatePicker, {\n        selected: this.state.date,\n        onChange: this.handleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"caseID: \"), React.createElement(\"input\", {\n        name: \"caseID\",\n        className: \"u-full-width\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.caseID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: this.state.problemType,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Dropdown.Item, {\n        as: \"button\",\n        name: \"problemType\",\n        onClick: this.handleDrop,\n        value: \"Hardware\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \" Hardware\"), React.createElement(Dropdown.Item, {\n        as: \"button\",\n        name: \"problemType\",\n        onClick: this.handleDrop,\n        value: \"Upgrade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \" Upgrade\")), this.state.problemPage)), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(\"input\", {\n        name: \"name\",\n        className: \"u-full-width\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Customer Name : \"), React.createElement(\"input\", {\n        name: \"customerName\",\n        className: \"u-full-width\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.customerName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, \"  Description: \"), React.createElement(\"textarea\", {\n        style: {\n          height: '100px',\n          width: '300px'\n        },\n        name: \"description\",\n        className: \"u-full-width\",\n        type: \"textarea\",\n        onChange: this.handleChange,\n        value: this.state.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }))))), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        name: \"save\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \" Save Report\"));\n    }\n  }]);\n\n  return General;\n}(React.Component);\n\nexport default General;","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\General.js"],"names":["React","mysql","Button","DropdownButton","Navbar","Form","FormControl","Nav","Dropdown","Container","Col","Row","DatePicker","General","props","state","date","Date","problemType","problemPage","caseID","upgrade","from","toLoad","currentLoad","customerName","description","handleChange","bind","handleClick","handleDate","handleDrop","event","setState","target","name","value","inputDate","e","preventDefault","console","log","getInfo","forceUpdate","fetch","then","response","json","data","catch","err","error","height","width","Component"],"mappings":"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","sourcesContent":["'use strict'\r\nimport React from 'react';\r\nimport mysql from 'mysql';\r\n//import './styles/custom.css';\r\n//import './styles/normalize.css';\r\n//import './styles/prog-tracker.css';\r\nimport './styles/skeleton.css';\r\nimport { Button, DropdownButton } from 'react-bootstrap';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nclass General extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      date: new Date(),\r\n      problemType: 'Choose Problem Type!',\r\n      problemPage: <hr></hr>,\r\n      caseID: '',\r\n      upgrade: '',\r\n      from: '',\r\n      toLoad: '',\r\n      currentLoad: '',\r\n      customerName: '',\r\n      description: ''\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleDate = this.handleDate.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n  handleDate(inputDate) {\r\n    this.setState({ date: inputDate });\r\n  }\r\n  \r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    console.log('clicked');\r\n\r\n    this.getInfo();\r\n\r\n  }\r\n  handleDrop(e){\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n    if(this.state.problemType === 'Hardware'){\r\n        this.setState({problemPage: <div>\r\n          <hr></hr>\r\n          <label>from: </label>\r\n                  <input name='from'\r\n                    className='u-full-width'\r\n\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.from}\r\n                  />\r\n                   <label>to Load: </label>\r\n                  <input name='toLoad'\r\n                    className='u-full-width'\r\n\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.toLoad}\r\n                  />\r\n\r\n        </div>})\r\n        forceUpdate();\r\n    }\r\n    else if(this.state.problemType === 'Upgrade'){\r\n      this.setState({problemPage: <div>\r\n        <hr></hr>\r\n        <label>Current Load: </label>\r\n                  <input name='currentLoad'\r\n                    className='u-full-width'\r\n\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.currentLoad}\r\n                  />\r\n      </div>})\r\n          forceUpdate();\r\n    }\r\n    else{\r\n      this.setState({problemPage: <hr></hr>});\r\n      forceUpdate();\r\n    }\r\n  }\r\n  getInfo() {\r\n    fetch('http://localhost:4000/generalinfo')\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        console.log(data)\r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n  }\r\n  addInfo() {\r\n    fetch('http://localhost:4000/generalinfo/add')\r\n      .then()\r\n      .catch(err => console.error(err))\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <header className='header' bg=\"blue\">\r\n                SELECT THE DATE</header>\r\n              <DatePicker \r\n              selected={this.state.date} onChange={this.handleDate}></DatePicker>\r\n\r\n              <div className='row'>\r\n                <div className='six columns'>\r\n                  <label>caseID: </label>\r\n                  <input name='caseID'\r\n                    className='u-full-width'\r\n\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.caseID}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col>\r\n              <DropdownButton id=\"dropdown-item-button\"  title = {this.state.problemType} size = \"lg\">\r\n     \r\n\r\n                  <Dropdown.Item as = \"button\" name = 'problemType' onClick= {this.handleDrop} \r\n                  value = 'Hardware'> Hardware</Dropdown.Item>\r\n                  <Dropdown.Item as = \"button\" name = 'problemType'  onClick= {this.handleDrop}\r\n                  value = 'Upgrade'> Upgrade</Dropdown.Item>\r\n              </DropdownButton>\r\n              {this.state.problemPage}\r\n            </Col>\r\n\r\n\r\n          </Row>\r\n          <Row>\r\n\r\n            <div className='row'>\r\n              <div className='six columns'>\r\n                <label>Name: </label>\r\n                <input name='name'\r\n                  className='u-full-width'\r\n\r\n                  type='text'\r\n                  onChange={this.handleChange}\r\n                  value={this.state.name}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n              <div className='six columns'>\r\n                <label>Customer Name : </label>\r\n                <input name='customerName'\r\n                  className='u-full-width'\r\n\r\n                  type='text'\r\n                  onChange={this.handleChange}\r\n                  value={this.state.customerName}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n              <div className='six columns'>\r\n                <label>  Description: </label>\r\n                <textarea style={{ height: '100px', width: '300px' }} name='description'\r\n                  className='u-full-width'\r\n\r\n                  type='textarea'\r\n                  onChange={this.handleChange}\r\n                  value={this.state.description}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Row>\r\n        </Container>\r\n        <button onClick={this.handleClick} name='save'> Save Report</button>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default General;"]},"metadata":{},"sourceType":"module"}