{"ast":null,"code":"import _defineProperty from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\General.js\";\nimport React from 'react';\nimport ProblemPage from './ProblemPage.js'; //import './styles/custom.css';\n//import './styles/normalize.css';\n//import './styles/prog-tracker.css';\n\nimport './styles/skeleton.css';\nimport { Button, DropdownButton } from 'react-bootstrap';\nimport { Navbar } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\nimport { Dropdown } from 'react-bootstrap';\nimport { Container } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar General =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(General, _React$Component);\n\n  function General(props) {\n    var _this;\n\n    _classCallCheck(this, General);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(General).call(this, props));\n    _this.state = {\n      date: new Date(),\n      currentProblem: 'Select the Problem!',\n      problemTypes: [],\n      problemFieldsNames: [],\n      problemFieldsContent: [{\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }],\n      currentProduct: 'Select the Product!',\n      productTypes: [],\n      caseID: '',\n      upgrade: '',\n      customerName: '',\n      description: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDate = _this.handleDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleProduct = _this.handleProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFieldContent = _this.handleFieldContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(General, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, [event.target.name], event.target.value));\n    }\n  }, {\n    key: \"handleFieldContent\",\n    value: function handleFieldContent(event) {\n      var newfields = this.state.problemFieldsContent.slice(); //copy the array\n\n      switch (event.target.index) {\n        case 0:\n          newfields[0] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          });\n        //set the new state\n\n        case 1:\n          newfields[1] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          });\n        //set the new state\n\n        case 2:\n          newfields[2] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          });\n        //set the new state\n\n        case 3:\n          newfields[3] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          });\n        //set the new state\n      }\n    }\n  }, {\n    key: \"handleDate\",\n    value: function handleDate(inputDate) {\n      this.setState({\n        date: inputDate\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.assignProductTypes();\n      this.assignProblemTypes();\n    }\n  }, {\n    key: \"assignProductTypes\",\n    value: function assignProductTypes() {\n      var _this2 = this;\n\n      fetch('http://localhost:4000/products').then(function (response) {\n        return response.json();\n      }).then(function (_ref) {\n        var data = _ref.data;\n\n        _this2.setState({\n          productTypes: data\n        });\n\n        console.log(\"products selectedddddddddddddddddd\");\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assignProblemTypes\",\n    value: function assignProblemTypes() {\n      var _this3 = this;\n\n      fetch('http://localhost:4000/problems').then(function (response) {\n        return response.json();\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this3.setState({\n          problemTypes: data\n        });\n\n        console.log(\"problems selectedddddddddddddddddd\");\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      e.preventDefault();\n\n      if (e.target.name === 'save') {\n        alert(\"Report Saved!\");\n      }\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(event) {\n      var _this4 = this;\n\n      console.log(\"enter handledrop\");\n      var prom = new Promise(function (resolve, reject) {\n        var passing = event.target.value;\n        console.log(passing);\n\n        if (!_this4.state.currentProblem == '') {\n          resolve(passing);\n        } else {\n          reject('Data didnt change');\n        }\n      });\n      prom.then(function (result) {\n        _this4.setState({\n          currentProblem: result\n        });\n      }).then(function () {\n        _this4.setCurrent();\n      }).then(function () {//this.setState({problemPage: <ProblemView func = {this}>Problem View</ProblemView>});\n      }).catch(function (result) {\n        console.log(result);\n      });\n    }\n  }, {\n    key: \"setCurrent\",\n    value: function setCurrent() {\n      var _this5 = this;\n\n      fetch(\"http://localhost:4000/problemfields?pname=\".concat(this.state.currentProblem)).then(function (response) {\n        return response.json();\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        var enames = [\"pname\", \"field1\", \"field2\", \"field3\", \"field4\", \"field5\", \"field6\", \"field7\", \"field8\", \"field9\"];\n        var fields = [];\n        var job = data[0];\n\n        for (var i = 1; i < enames.length; i++) {\n          if (job[enames[i]] !== null) {\n            fields[i - 1] = job[enames[i]];\n          }\n        }\n\n        _this5.setState({\n          problemFieldsNames: fields\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"handleProduct\",\n    value: function handleProduct(event) {\n      this.setState({\n        currentProduct: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header\",\n        bg: \"blue\",\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Please Select the date!\"), React.createElement(DatePicker, {\n        size: \"lg\",\n        selected: this.state.date,\n        onChange: this.handleDate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Case ID: \"), React.createElement(\"input\", {\n        name: \"caseID\",\n        className: \"u-full-width\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.caseID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: this.state.currentProduct,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(ProductMenu, {\n        func: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Name: \"), React.createElement(\"input\", {\n        name: \"name\",\n        className: \"u-full-width\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Customer Name : \"), React.createElement(\"input\", {\n        name: \"customerName\",\n        className: \"u-full-width\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.customerName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"  Description: \"), React.createElement(\"textarea\", {\n        style: {\n          height: '100px',\n          width: '300px'\n        },\n        name: \"description\",\n        className: \"u-full-width\",\n        type: \"textarea\",\n        onChange: this.handleChange,\n        value: this.state.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: this.state.currentProblem,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(ProblemMenu, {\n        func: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      })), React.createElement(ProblemView, {\n        func: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"view geldi \")))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClick,\n        name: \"save\",\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Save Report\")));\n    }\n  }]);\n\n  return General;\n}(React.Component);\n\nexport default General;\n\nfunction ProblemView(props) {\n  // forceUpdate();\n  console.log(\"problemview a girildi\");\n  console.log(props.func.state.problemFieldsNames.length);\n  var elements = [];\n\n  for (var i = 0; i < props.func.state.problemFieldsNames.length; i++) {\n    elements.push(React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, props.func.state.problemFieldsNames[i], \": \"), React.createElement(\"input\", {\n      name: props.func.state.problemFieldsNames[i],\n      index: i,\n      className: \"u-full-width\",\n      type: \"text\",\n      onChange: props.func.handleFieldContent,\n      value: props.func.state.problemFieldsContent[i],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })));\n  }\n\n  return elements;\n} /// Drop down items for product types \n\n\nfunction ProductMenu(props) {\n  var elements = [];\n\n  for (var i = 0; i < props.func.state.productTypes.length; i++) {\n    console.log(props.func.state.productTypes.length);\n    console.log(props.func.state.productTypes[i].productname);\n    elements.push(React.createElement(Dropdown.Item, {\n      key: i,\n      as: \"button\",\n      name: \"productTypes\",\n      onClick: props.func.handleProduct,\n      value: props.func.state.productTypes[i].productname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \" \", props.func.state.productTypes[i].productname, \" \"));\n  }\n\n  return elements;\n} /// Drop down items for problem types \n\n\nfunction ProblemMenu(props) {\n  var elements = [];\n\n  for (var i = 0; i < props.func.state.problemTypes.length; i++) {\n    elements.push(React.createElement(Dropdown.Item, {\n      key: i,\n      as: \"button\",\n      name: \"problemTypes\",\n      onClick: props.func.handleDrop,\n      value: props.func.state.problemTypes[i].problemname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \" \", props.func.state.problemTypes[i].problemname, \" \"));\n  }\n\n  return elements;\n}","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\General.js"],"names":["React","ProblemPage","Button","DropdownButton","Navbar","Form","FormControl","Nav","Dropdown","Container","Col","Row","DatePicker","General","props","state","date","Date","currentProblem","problemTypes","problemFieldsNames","problemFieldsContent","val","currentProduct","productTypes","caseID","upgrade","customerName","description","handleChange","bind","handleClick","handleDate","handleDrop","handleProduct","handleFieldContent","event","setState","target","name","value","newfields","slice","index","inputDate","assignProductTypes","assignProblemTypes","fetch","then","response","json","data","console","log","catch","err","error","e","preventDefault","alert","prom","Promise","resolve","reject","passing","result","setCurrent","enames","fields","job","i","length","fontSize","height","width","Component","ProblemView","func","elements","push","ProductMenu","productname","ProblemMenu","problemname"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport ProblemPage from './ProblemPage.js'\r\n//import './styles/custom.css';\r\n//import './styles/normalize.css';\r\n//import './styles/prog-tracker.css';\r\nimport './styles/skeleton.css';\r\nimport { Button, DropdownButton } from 'react-bootstrap';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nclass General extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      date: new Date(),\r\n    \r\n      currentProblem: 'Select the Problem!',\r\n      problemTypes: [\r\n        \r\n    ],\r\n    problemFieldsNames: [\r\n\r\n    ],\r\n    problemFieldsContent:[\r\n      {val: ''} ,\r\n      {val: ''},\r\n      {val: ''},\r\n      {val: ''},\r\n      {val: ''},\r\n      {val: ''},\r\n      {val: ''},\r\n      {val: ''},\r\n      {val: ''},\r\n    ],\r\n      currentProduct: 'Select the Product!',\r\n      productTypes: [\r\n      ],\r\n      caseID: '',\r\n      upgrade: '',\r\n      customerName: '',\r\n      description: '',\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleDate = this.handleDate.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleProduct = this.handleProduct.bind(this);\r\n    this.handleFieldContent = this.handleFieldContent.bind(this);\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({[[event.target.name]]: event.target.value});\r\n  }\r\n  handleFieldContent(event) {\r\n    var newfields = this.state.problemFieldsContent.slice() //copy the array\r\n \r\n   switch(event.target.index){\r\n     case 0:\r\n     newfields[0] = {val: event.target.value } //execute the manipulations\r\n     this.setState({problemFieldsContent: newfields}) //set the new state\r\n     case 1:\r\n     newfields[1] = {val: event.target.value } //execute the manipulations\r\n     this.setState({problemFieldsContent: newfields}) //set the new state\r\n     case 2:\r\n     newfields[2] = {val: event.target.value } //execute the manipulations\r\n     this.setState({problemFieldsContent: newfields}) //set the new state\r\n     case 3:\r\n     newfields[3] = {val: event.target.value } //execute the manipulations\r\n     this.setState({problemFieldsContent: newfields}) //set the new state\r\n\r\n   }\r\n  }\r\n  handleDate(inputDate) {\r\n    this.setState({ date: inputDate });\r\n  }\r\n  componentWillMount(){\r\n    this.assignProductTypes();\r\n    this.assignProblemTypes();\r\n  }\r\n  assignProductTypes(){\r\n    fetch('http://localhost:4000/products')\r\n    .then(response => response.json())\r\n    .then(({ data }) => {\r\n      this.setState({productTypes : data})\r\n      console.log(\"products selectedddddddddddddddddd\");\r\n    })\r\n    .catch(err => console.error()\r\n    )\r\n}\r\nassignProblemTypes(){\r\n  fetch('http://localhost:4000/problems')\r\n  .then(response => response.json())\r\n  .then(({ data }) => {\r\n    this.setState({problemTypes : data})\r\n    console.log(\"problems selectedddddddddddddddddd\");\r\n  })\r\n  .catch(err => console.error()\r\n  )\r\n}\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    if(e.target.name === 'save'){\r\n      alert(\"Report Saved!\");\r\n    }\r\n\r\n  \r\n\r\n  }\r\n  handleDrop(event){\r\n    console.log(\"enter handledrop\");\r\n\r\n    let prom = new Promise((resolve,reject)=> {\r\n      let passing = event.target.value;\r\n      console.log(passing);\r\n      if(!this.state.currentProblem == ''){\r\n        resolve(passing);\r\n      }\r\n      else{\r\n        reject('Data didnt change');\r\n      }\r\n\r\n    })\r\n    prom.then((result)=>{\r\n      this.setState({currentProblem: result});\r\n    })\r\n   .then(()=>{\r\n      this.setCurrent();\r\n    })\r\n    .then(() => {\r\n      //this.setState({problemPage: <ProblemView func = {this}>Problem View</ProblemView>});\r\n    \r\n    })\r\n    .catch((result)=>{\r\n      console.log(result)\r\n    })\r\n    \r\n \r\n  }\r\n  setCurrent(){\r\n    fetch(`http://localhost:4000/problemfields?pname=${this.state.currentProblem}`)\r\n    .then(response => response.json())\r\n    .then(({ data }) => {\r\n      var enames = [\"pname\",\"field1\",\"field2\",\"field3\",\"field4\",\"field5\",\"field6\",\"field7\",\"field8\",\"field9\"];\r\n      var fields = [];\r\n      var job =data[0];\r\n      for( var i=1; i<enames.length; i++){\r\n       \r\n        if(job[enames[i]] !== null){\r\n          fields[i-1] = job[enames[i]];\r\n        }\r\n      }\r\n      this.setState({problemFieldsNames: fields});\r\n    })\r\n    .catch(err => console.error()\r\n    )\r\n  }\r\n\r\n  handleProduct(event){\r\n    this.setState({currentProduct: event.target.value})\r\n  }\r\n\r\n \r\n  render() {\r\n    return (\r\n      <div >\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <header className='header' bg=\"blue\" style= {{fontSize: 20}}>\r\n                Please Select the date!</header>\r\n              <DatePicker size = \"lg\"\r\n              selected={this.state.date} onChange={this.handleDate}></DatePicker>\r\n              <hr></hr>\r\n              <div className='row'  >\r\n                <div className='six columns'>\r\n                  <label>Case ID: </label>\r\n                  <input name='caseID'\r\n                    className='u-full-width'\r\n\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.caseID}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr></hr>\r\n            <Row>\r\n            <DropdownButton id=\"dropdown-item-button\"  title = {this.state.currentProduct} size = \"lg\">\r\n              {<ProductMenu func = {this}/>}\r\n              </DropdownButton>\r\n            </Row>\r\n              <hr></hr>\r\n            <div className='row'>\r\n              <div className='six columns'>\r\n                <label>Name: </label>\r\n                <input name='name'\r\n                  className='u-full-width'\r\n\r\n                  type='text'\r\n                  onChange={this.handleChange}\r\n                  value={this.state.name}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n              <div className='six columns'>\r\n                <label>Customer Name : </label>\r\n                <input name='customerName'\r\n                  className='u-full-width'\r\n\r\n                  type='text'\r\n                  onChange={this.handleChange}\r\n                  value={this.state.customerName}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row'>\r\n              <div className='six columns'>\r\n                <label>  Description: </label>\r\n                <textarea style={{ height: '100px', width: '300px' }} name='description' \r\n                  className='u-full-width'\r\n\r\n                  type='textarea'\r\n                  onChange={this.handleChange}\r\n                  value={this.state.description}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            </Col>\r\n            <Col >\r\n              <DropdownButton id=\"dropdown-item-button\"  title = {this.state.currentProblem} size = \"lg\">\r\n              {<ProblemMenu func = {this}/>}\r\n              </DropdownButton>\r\n             {<ProblemView func = {this}>view geldi </ProblemView>}\r\n            </Col>\r\n       \r\n          </Row>\r\n        </Container>\r\n        <Container>\r\n        <Button  onClick={this.handleClick} name='save' variant=\"danger\" size=\"lg\" active block>\r\n        Save Report\r\n        </Button>\r\n        </Container>\r\n        \r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default General;\r\n\r\nfunction ProblemView(props){\r\n // forceUpdate();\r\n  console.log(\"problemview a girildi\");\r\n  console.log( props.func.state.problemFieldsNames.length);\r\n  var elements = [];\r\n  for(var i=0; i < props.func.state.problemFieldsNames.length; i++){\r\n    elements.push(\r\n      <div  key = {i}  >\r\n      <hr></hr>\r\n      <label>{props.func.state.problemFieldsNames[i]}: </label>\r\n              <input name={props.func.state.problemFieldsNames[i] \r\n               } \r\n               index = {i}\r\n                className='u-full-width'\r\n  \r\n                type='text'\r\n                onChange={props.func.handleFieldContent}\r\n                value={props.func.state.problemFieldsContent[i]}\r\n              />\r\n  \r\n    </div>\r\n    )\r\n  }\r\n  return elements;\r\n \r\n}\r\n\r\n/// Drop down items for product types \r\nfunction ProductMenu(props){\r\n  var elements = [];\r\n  for(var i=0; i < props.func.state.productTypes.length; i++){\r\n    console.log( props.func.state.productTypes.length );\r\n    console.log(props.func.state.productTypes[i].productname);\r\n    elements.push(\r\n      <Dropdown.Item key = {i} as = \"button\" name = 'productTypes' onClick= {props.func.handleProduct} \r\n      value = {props.func.state.productTypes[i].productname}> {props.func.state.productTypes[i].productname} </Dropdown.Item>\r\n    )\r\n  }\r\n  return elements;\r\n}\r\n/// Drop down items for problem types \r\nfunction ProblemMenu(props){\r\n  var elements = [];\r\n  for(var i=0; i < props.func.state.problemTypes.length; i++){\r\n    elements.push(\r\n      <Dropdown.Item key = {i} as = \"button\" name = 'problemTypes' onClick= {props.func.handleDrop} \r\n      value = {props.func.state.problemTypes[i].problemname}> {props.func.state.problemTypes[i].problemname} </Dropdown.Item>\r\n    )\r\n      \r\n  }\r\n  return elements;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}