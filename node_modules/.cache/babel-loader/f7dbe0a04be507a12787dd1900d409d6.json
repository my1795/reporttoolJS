{"ast":null,"code":"import _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\SearchPage.js\";\nimport React, { Component } from 'react'; //import './App.css';\n\nimport { Container } from 'react-bootstrap';\nimport { Modal } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, dateFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage(props) {\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).call(this, props));\n    _this.state = {\n      show: false,\n      columns: [{\n        dataField: 'generalinfo_id',\n        text: 'Info     ID',\n        headerAlign: 'center',\n        sort: true,\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'fromcompletedby',\n        text: 'Completed By',\n        headerAlign: 'center',\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'gpsproduct',\n        text: 'Product',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            value: 'E',\n            label: 'E'\n          }]\n        },\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'startdate',\n        text: 'Date',\n        headerAlign: 'center',\n        filter: dateFilter(),\n        editable: false,\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'caseid',\n        text: 'Case        ID',\n        sort: true,\n        filter: textFilter(),\n        headerFormatter: _this.caseIDFormatter,\n        headerAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'customername',\n        text: 'Customer Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'description',\n        text: 'Description',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        },\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '250px'\n        }\n      }, {\n        dataField: 'pname',\n        text: 'Problem     Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            value: 'E',\n            label: 'E'\n          }]\n        },\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }],\n      expandRow: {\n        renderer: function renderer(row) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, \"This Expand row is belong to rowKey \".concat(row.generalinfo_id)), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, \"You can render anything here, also you can add additional data on every row object\"), React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, \"expandRow.renderer callback will pass the origin row object to you\"));\n        }\n      },\n      selectedRows: [],\n      generalinfo: []\n    };\n    _this.handleSelected = _this.handleSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveChanges = _this.saveChanges.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteRows = _this.deleteRows.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        show: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        show: true\n      });\n    }\n  }, {\n    key: \"caseIDFormatter\",\n    value: function caseIDFormatter(column, colIndex, _ref) {\n      var sortElement = _ref.sortElement,\n          filterElement = _ref.filterElement;\n      return React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, filterElement, column.text, sortElement);\n    }\n  }, {\n    key: \"handleSelected\",\n    value: function handleSelected() {\n      console.log(this.state.generalinfo.dataField);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.assignGeneralInfo();\n      this.assingProductBox();\n      this.assignProblemBox();\n    }\n  }, {\n    key: \"deleteRows\",\n    value: function deleteRows() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.state.selectedRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var row = _step.value;\n          this.deleteRow(row);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      this.assignGeneralInfo();\n      this.forceUpdate();\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(generalinfo_id) {\n      var axios = require('axios');\n\n      axios.post(\"http://localhost:4000/generalinfo/remove?generalinfo_id=\".concat(generalinfo_id), {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        method: 'POST',\n        data: \"delete sent\"\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {});\n      alert(\"Deleted\");\n    }\n  }, {\n    key: \"saveChanges\",\n    value: function saveChanges(generalinfo_id, fromcompletedby, gpsproduct, startdate, caseid, customername, description, pname) {\n      var axios = require('axios');\n\n      axios.post(\"http://localhost:4000/generalinfo/update?generalinfo_id=\".concat(generalinfo_id, \"&startdate=\").concat(startdate, \"&caseid=\").concat(caseid, \"\\n      &gpsproduct=\").concat(gpsproduct, \"&fromcompletedby=\").concat(fromcompletedby, \"&customername=\").concat(customername, \"\\n      &description=\").concat(description, \"&pname=\").concat(pname), {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        method: 'POST',\n        data: \"update sent\"\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {});\n      alert(\"changes saved\");\n    }\n  }, {\n    key: \"assignGeneralInfo\",\n    value: function assignGeneralInfo() {\n      var _this2 = this;\n\n      fetch('http://localhost:4000/generalinfo').then(function (response) {\n        return response.json();\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this2.setState({\n          generalinfo: data\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assingProductBox\",\n    value: function assingProductBox() {\n      var _this3 = this;\n\n      var products = [];\n      var opt = [];\n      fetch('http://localhost:4000/products').then(function (response) {\n        return response.json();\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var el = _step2.value;\n            products.push(el.productname);\n            console.log(el.productname);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < products.length; k++) {\n          opt.push({\n            value: products[k],\n            label: products[k]\n          });\n        }\n\n        var copy = _this3.state.columns.slice();\n\n        copy[2].editor.options = opt;\n\n        _this3.setState({\n          columns: copy\n        });\n\n        console.log(opt[0]);\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assignProblemBox\",\n    value: function assignProblemBox() {\n      var _this4 = this;\n\n      var problems = [];\n      var opt = [];\n      fetch('http://localhost:4000/problems').then(function (response) {\n        return response.json();\n      }).then(function (_ref4) {\n        var data = _ref4.data;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var el = _step3.value;\n            problems.push(el.problemname);\n            console.log(el.problemname);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < problems.length; k++) {\n          opt.push({\n            value: problems[k],\n            label: problems[k]\n          });\n        }\n\n        var copy = _this4.state.columns.slice();\n\n        copy[7].editor.options = opt;\n\n        _this4.setState({\n          columns: copy\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var selectRow = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        bgColor: function bgColor(row, rowIndex) {\n          return rowIndex % 2 == 0 ? '#00BFFF' : '#00FFFF';\n        },\n        clickToExpand: true,\n        clickToEdit: true,\n        onSelect: function onSelect(row, isSelect, rowIndex, e) {\n          if (isSelect === true) {\n            _this5.state.selectedRows.push(row.generalinfo_id);\n          }\n\n          if (isSelect === false) {\n            _this5.state.selectedRows.splice(_this5.state.selectedRows.indexOf(row.generalinfo_id), 1);\n          }\n\n          console.log(row.rowKey);\n        },\n        onSelectAll: function onSelectAll(isSelect, rows, e) {\n          console.log(isSelect);\n          console.log(rows);\n          console.log(e);\n\n          if (isSelect === true) {\n            var copyselected = _this5.state.selectedRows.slice();\n\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n              for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var row = _step4.value;\n                copyselected.push(row.generalinfo_id);\n              }\n            } catch (err) {\n              _didIteratorError4 = true;\n              _iteratorError4 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                  _iterator4.return();\n                }\n              } finally {\n                if (_didIteratorError4) {\n                  throw _iteratorError4;\n                }\n              }\n            }\n\n            _this5.setState({\n              selectedRows: copyselected\n            });\n\n            console.log(\"copy selected will be printed\");\n            console.log(copyselected);\n          }\n\n          if (isSelect === false) {\n            var _copyselected = _this5.state.selectedRows.slice();\n\n            var _iteratorNormalCompletion5 = true;\n            var _didIteratorError5 = false;\n            var _iteratorError5 = undefined;\n\n            try {\n              for (var _iterator5 = rows[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var _row = _step5.value;\n\n                _copyselected.splice(_copyselected.indexOf(_row.generalinfo_id), 1);\n              }\n            } catch (err) {\n              _didIteratorError5 = true;\n              _iteratorError5 = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n                  _iterator5.return();\n                }\n              } finally {\n                if (_didIteratorError5) {\n                  throw _iteratorError5;\n                }\n              }\n            }\n\n            _this5.setState({\n              selectedRows: _copyselected\n            });\n          }\n        }\n      };\n      var cellEdit = {\n        mode: 'click'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.deleteRows,\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Delete Selected Rows\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.handleShow,\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Expand Selected rows\"), React.createElement(Modal, {\n        show: this.state.show,\n        onHide: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, \"Modal heading\")), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }, \"Woohoo, you're reading this text in a modal!\"), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"secondary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"Close\"), React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, \"Save Changes\")))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        keyField: \"generalinfo_id\",\n        filter: filterFactory(),\n        selectRow: selectRow,\n        data: this.state.generalinfo,\n        columns: this.state.columns,\n        striped: true,\n        hover: true,\n        condensed: true,\n        cellEdit: cellEditFactory({\n          mode: 'dbclick',\n          blurToSave: true,\n          afterSaveCell: function afterSaveCell(oldValue, newValue, row, column) {\n            // insert buradan yapılacak database e atılacak delete selected kısmına dikkat.\n            console.log(oldValue);\n            console.log(newValue);\n            console.log(row.generalinfo_id);\n            console.log(column);\n\n            _this5.saveChanges(row.generalinfo_id, row.fromcompletedby, row.gpsproduct, row.startdate, row.caseid, row.customername, row.description, row.pname);\n          }\n        }),\n        pagination: paginationFactory(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nexport default SearchPage;","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\SearchPage.js"],"names":["React","Component","Container","Modal","Button","Row","BootstrapTable","filterFactory","textFilter","dateFilter","paginationFactory","cellEditFactory","Type","SearchPage","props","state","show","columns","dataField","text","headerAlign","sort","filter","headerStyle","backgroundColor","width","editor","type","SELECT","options","value","label","editable","headerFormatter","caseIDFormatter","TEXTAREA","expandRow","renderer","row","generalinfo_id","selectedRows","generalinfo","handleSelected","bind","saveChanges","deleteRows","handleShow","handleClose","setState","column","colIndex","sortElement","filterElement","display","flexDirection","console","log","assignGeneralInfo","assingProductBox","assignProblemBox","deleteRow","forceUpdate","axios","require","post","headers","method","data","then","response","catch","error","alert","fromcompletedby","gpsproduct","startdate","caseid","customername","description","pname","fetch","json","err","products","opt","el","push","productname","k","length","copy","slice","problems","problemname","selectRow","mode","clickToSelect","bgColor","rowIndex","clickToExpand","clickToEdit","onSelect","isSelect","e","splice","indexOf","rowKey","onSelectAll","rows","copyselected","cellEdit","blurToSave","afterSaveCell","oldValue","newValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import './App.css';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nimport { Modal} from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter, dateFilter} from 'react-bootstrap-table2-filter';\r\n\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css'\r\n\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nclass SearchPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            show: false,\r\n            columns: [{\r\n                dataField: 'generalinfo_id',\r\n                text: 'Info     ID',\r\n                headerAlign: 'center',\r\n                sort: true,\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              }, {\r\n                dataField: 'fromcompletedby',\r\n                text: 'Completed By',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              }, {\r\n                dataField: 'gpsproduct',\r\n                text: 'Product',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.SELECT,\r\n                  options: [{\r\n\r\n                    value: 'E',\r\n                    label: 'E'\r\n                  }]\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              },\r\n              {\r\n                dataField: 'startdate',\r\n                text: 'Date',\r\n                headerAlign: 'center',\r\n                filter: dateFilter(),\r\n                editable: false,\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              },\r\n              {\r\n                dataField: 'caseid',\r\n                text: 'Case        ID',\r\n                sort: true,\r\n                filter: textFilter(),\r\n                headerFormatter: this.caseIDFormatter,\r\n                headerAlign: 'center',\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              },\r\n              {\r\n                dataField: 'customername',\r\n                text: 'Customer Name',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              },\r\n              {\r\n                dataField: 'description',\r\n                text: 'Description',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.TEXTAREA\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784',width:'250px'}\r\n              },\r\n              {\r\n                dataField: 'pname',\r\n                text: 'Problem     Name',\r\n                headerAlign: 'center',\r\n                filter: textFilter(),\r\n                editor: {\r\n                  type: Type.SELECT,\r\n                  options: [{\r\n\r\n                    value: 'E',\r\n                    label: 'E'\r\n                  }]\r\n                },\r\n                headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n              }\r\n\r\n                         \r\n            ],\r\n            expandRow: {\r\n              renderer: row => (\r\n                <div>\r\n                  <p>{ `This Expand row is belong to rowKey ${row.generalinfo_id}` }</p>\r\n                  <p>You can render anything here, also you can add additional data on every row object</p>\r\n                  <p>expandRow.renderer callback will pass the origin row object to you</p>\r\n                </div>\r\n              )\r\n            },\r\n              selectedRows: [],\r\n\r\n              generalinfo: [\r\n               \r\n              ],\r\n\r\n            \r\n        }\r\n        this.handleSelected = this.handleSelected.bind(this);\r\n        this.saveChanges = this.saveChanges.bind(this);\r\n        this.deleteRows = this.deleteRows.bind(this);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n    handleClose() {\r\n      this.setState({ show: false });\r\n    }\r\n  \r\n    handleShow() {\r\n      this.setState({ show: true });\r\n    }\r\n \r\n     caseIDFormatter(column, colIndex, { sortElement, filterElement }) {\r\n        return (\r\n          <div style={ { display: 'flex', flexDirection: 'column' } }>\r\n            { filterElement }\r\n            { column.text }\r\n            { sortElement }\r\n          </div>\r\n        );\r\n      }\r\n      handleSelected(){\r\n          console.log(this.state.generalinfo.dataField);\r\n      }\r\n     \r\n    componentWillMount(){\r\n      this.assignGeneralInfo();\r\n      this.assingProductBox();\r\n      this.assignProblemBox();\r\n      }\r\n\r\n    deleteRows(){\r\n      for(let row of this.state.selectedRows){\r\n        this.deleteRow(row);\r\n      }\r\n      this.assignGeneralInfo();\r\n      this.forceUpdate();\r\n      \r\n    }\r\n    deleteRow(generalinfo_id){\r\n      const axios = require('axios');\r\n      axios.post(`http://localhost:4000/generalinfo/remove?generalinfo_id=${generalinfo_id}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data: \"delete sent\"\r\n      })\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n\r\n      \r\n    });\r\n      alert(\"Deleted\");\r\n\r\n    }\r\n    saveChanges(generalinfo_id,fromcompletedby,gpsproduct,startdate,caseid,customername,description,pname){\r\n      const axios = require('axios');\r\n      axios.post(`http://localhost:4000/generalinfo/update?generalinfo_id=${generalinfo_id}&startdate=${startdate}&caseid=${caseid}\r\n      &gpsproduct=${gpsproduct}&fromcompletedby=${fromcompletedby}&customername=${customername}\r\n      &description=${description}&pname=${pname}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data: \"update sent\"\r\n      })\r\n    .then(function (response) {\r\n      // handle success\r\n      console.log(response.data);\r\n    })\r\n    .catch(function (error) {\r\n      // handle error\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n\r\n      \r\n    });\r\n      alert(\"changes saved\");\r\n\r\n    }\r\n      assignGeneralInfo(){\r\n        fetch('http://localhost:4000/generalinfo')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          this.setState({generalinfo : data})\r\n          \r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      }\r\n      assingProductBox(){\r\n        let products = [];\r\n        let opt = [];\r\n        fetch('http://localhost:4000/products')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          for(var el of data){\r\n            products.push(el.productname);\r\n            console.log(el.productname);\r\n          }\r\n          \r\n        })\r\n        .then( () => {\r\n          for(var k =0; k< products.length; k++){\r\n            opt.push({value: products[k], label: products[k] });\r\n          }\r\n         var copy = this.state.columns.slice();\r\n         copy[2].editor.options = opt;\r\n         this.setState({columns: copy});\r\n          console.log(opt[0]);\r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      \r\n      \r\n      }\r\n      assignProblemBox(){\r\n        let problems = [];\r\n        let opt = [];\r\n        fetch('http://localhost:4000/problems')\r\n        .then(response => response.json())\r\n        .then(({ data }) => {\r\n          for(var el of data){\r\n            problems.push(el.problemname);\r\n            console.log(el.problemname);\r\n          }\r\n          \r\n        })\r\n        .then( () => {\r\n          for(var k =0; k< problems.length; k++){\r\n            opt.push({value: problems[k], label: problems[k] });\r\n          }\r\n         var copy = this.state.columns.slice();\r\n         copy[7].editor.options = opt;\r\n         this.setState({columns: copy});\r\n        })\r\n        .catch(err => console.error()\r\n        )\r\n      \r\n      \r\n      }\r\n\r\n    render() {\r\n\r\n\r\n      const selectRow = {\r\n        mode: 'checkbox',\r\n        clickToSelect: true,\r\n        bgColor: (row, rowIndex) => (rowIndex % 2 == 0 ? '#00BFFF' : '#00FFFF'),\r\n        clickToExpand: true,\r\n        clickToEdit: true,\r\n        onSelect: (row, isSelect, rowIndex, e) => {\r\n          if(isSelect === true){\r\n            this.state.selectedRows.push(row.generalinfo_id);\r\n          }\r\n          if(isSelect === false){\r\n            this.state.selectedRows.splice(this.state.selectedRows.indexOf(row.generalinfo_id),1);\r\n          }\r\n         console.log(row.rowKey);\r\n          \r\n        },\r\n        onSelectAll: (isSelect, rows, e) => {\r\n           console.log(isSelect);\r\n           console.log(rows);\r\n           console.log(e);\r\n         if(isSelect === true){\r\n           let copyselected = this.state.selectedRows.slice();\r\n           for(let row of rows){\r\n            copyselected.push(row.generalinfo_id);\r\n           }\r\n           this.setState({selectedRows: copyselected});\r\n           console.log(\"copy selected will be printed\");\r\n           console.log(copyselected);\r\n          \r\n         }\r\n         if(isSelect === false){\r\n          let copyselected = this.state.selectedRows.slice();\r\n          for(let row of rows){\r\n            copyselected.splice(copyselected.indexOf(row.generalinfo_id),1);\r\n            \r\n          }\r\n          this.setState({selectedRows: copyselected});\r\n         \r\n         }\r\n     \r\n         }\r\n      };\r\n      const cellEdit = {\r\n        mode: 'click'\r\n      };\r\n\r\n      \r\n      \r\n        return (\r\n          \r\n            <div>\r\n         \r\n                <Container>\r\n       \r\n                  <Row>\r\n                  <Button  onClick={this.deleteRows}  variant=\"danger\" size=\"lg\" active >\r\n          Delete Selected Rows\r\n         </Button>\r\n         <hr></hr>\r\n         <Button onClick={this.handleShow}    variant=\"danger\" size=\"lg\" active >\r\n          Expand Selected rows \r\n         </Button>\r\n         <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Modal heading</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={this.handleClose}>\r\n              Save Changes\r\n            </Button>\r\n          </Modal.Footer>\r\n          </Modal>\r\n  \r\n                  </Row>\r\n                  <hr></hr>\r\n                  <Row>\r\n                  <BootstrapTable keyField = 'generalinfo_id'  filter={ filterFactory()} selectRow={ selectRow }  \r\n               \r\n                  data = { this.state.generalinfo} columns = { this.state.columns }  \r\n                  striped hover condensed\r\n                    \r\n                  cellEdit={ cellEditFactory({ mode: 'dbclick',blurToSave: true ,\r\n                  afterSaveCell: (oldValue, newValue, row, column) => {\r\n                  // insert buradan yapılacak database e atılacak delete selected kısmına dikkat.\r\n                  console.log(oldValue);\r\n                  console.log(newValue);\r\n                  console.log(row.generalinfo_id);\r\n                  console.log(column);\r\n                  this.saveChanges(row.generalinfo_id,row.fromcompletedby,row.gpsproduct,row.startdate,row.caseid,row.customername,row.description,row.pname)\r\n                 }\r\n                }) } \r\n                  pagination={ paginationFactory() }\r\n                   >\r\n\r\n\r\n</BootstrapTable>\r\n                    \r\n                  </Row>\r\n  \r\n                </Container>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}