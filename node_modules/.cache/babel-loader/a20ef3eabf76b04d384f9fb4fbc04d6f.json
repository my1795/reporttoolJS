{"ast":null,"code":"import _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { ButtonToolbar } from 'react-bootstrap';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport { FormGroup } from 'react-bootstrap';\nimport { FormLabel } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\nimport { NavDropdown } from 'react-bootstrap';\n\nvar axios = require('axios');\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      currentPage: React.createElement(AddUser, {\n        func: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }),\n      newUserName: '',\n      newUserPassword: '',\n      newProduct: '',\n      newProblem: '',\n      problemfields: '',\n      columns: [{\n        dataField: 'adminname',\n        text: 'Admin Name',\n        headerAlign: 'center',\n        sort: true,\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'username',\n        text: 'User Name',\n        headerAlign: 'center',\n        sort: true,\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'userpassword',\n        text: 'User Password',\n        headerAlign: 'center',\n        sort: true,\n        filter: textFilter(),\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }]\n    };\n    _this.handleUserInsert = _this.handleUserInsert.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleUserChange = _this.handleUserChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleControl = _this.handleControl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleProblemInsert = _this.handleProblemInsert.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleUserInsert\",\n    value: function handleUserInsert(event) {\n      if (this.state.newUserName == '' || this.state.newUserPassword == '') {\n        alert(\"Please check the input values!\\nSomething is missing\");\n      } else {\n        axios.post(\"http://localhost:4000/users/add\", {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          method: 'POST',\n          data: {\n            adminName: this.props.adminName,\n            userName: this.state.newUserName,\n            userPassword: this.state.newUserPassword\n          }\n        }).then(function (response) {\n          console.log(response.data);\n          alert(\"User Added\");\n        }).catch(function (error) {\n          alert(\"Some Error Occured\");\n          console.log(error);\n        }).then(function () {});\n      }\n    }\n  }, {\n    key: \"handleUserChange\",\n    value: function handleUserChange(event) {\n      if (event.target.placeholder === \"Enter User Name\") {\n        this.setState({\n          newUserName: event.target.value\n        });\n      } else if (event.target.placeholder === \"Password\") {\n        this.setState({\n          newUserPassword: event.target.value\n        });\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      if (event.target.type == \"email\") {\n        this.setState({\n          userName: event.target.value\n        });\n      }\n\n      if (event.target.placeholder == \"Enter a product name\") {\n        this.setState({\n          newProduct: event.target.value\n        });\n      }\n\n      if (event.target.placeholder == \"Enter a problem type\") {\n        this.setState({\n          newProblem: event.target.value\n        });\n      }\n\n      if (event.target.placeholder == \"Enter subfields\") {\n        this.setState({\n          problemfields: event.target.value\n        });\n      }\n\n      if (event.target.type == \"password\") {\n        this.setState({\n          password: event.target.value\n        });\n      }\n    }\n  }, {\n    key: \"handleControl\",\n    value: function handleControl(event) {\n      console.log(this.state.newProduct);\n      this.addProduct(this.state);\n    }\n  }, {\n    key: \"addProduct\",\n    value: function addProduct(product) {\n      if (product.newProduct === '') {\n        alert(\"please check the input value\");\n      } else {\n        alert(\"new Product inserted\");\n        console.log(product.newProduct + \"addProduct kısmı \");\n\n        var _axios = require('axios');\n\n        _axios.post(\"http://localhost:4000/products/add?productname=\".concat(product.newProduct), {\n          headers: {\n            \"Content-Type\": \"text/plain\"\n          },\n          method: 'POST',\n          data: product.newProduct\n        }).then(function (response) {\n          // handle success\n          console.log(response.data);\n        }).catch(function (error) {\n          // handle error\n          console.log(error);\n        }).then(function () {// always executed\n        });\n      }\n    }\n  }, {\n    key: \"handleProblemInsert\",\n    value: function handleProblemInsert(event) {\n      console.log(this.state.newProblem);\n      this.addProblem(this.state);\n      this.addProblemFields(this.state);\n    }\n  }, {\n    key: \"addProblem\",\n    value: function addProblem(problem) {\n      console.log(problem.newProblem + problem.problemfields + \"problem\");\n\n      var axios = require('axios');\n\n      if (problem.newProblem === '' || problem.problemfields === '') {\n        alert(\"missing fields!\");\n      } else {\n        axios.post(\"http://localhost:4000/problems/add?problemname=\".concat(problem.newProblem), {\n          headers: {\n            \"Content-Type\": \"text/plain\"\n          },\n          method: 'POST',\n          data: {\n            problemname: problem.newProblem,\n            problemfields: problem.problemfields\n          }\n        }).then(function (response) {\n          // handle success\n          console.log(response.data);\n        }).catch(function (error) {\n          // handle error\n          console.log(error);\n        }).then(function () {// always executed\n        });\n        alert(\"new Problem inserted\");\n      }\n    }\n  }, {\n    key: \"addProblemFields\",\n    value: function addProblemFields(problem) {\n      console.log(problem.problemfields + \"problem\");\n\n      var axios = require('axios');\n\n      if (problem.newProblem === '' || problem.problemfields === '') {\n        alert(\"missing fields!\");\n      } else {\n        axios.post(\"http://localhost:4000/problemfields/add?problemname=\".concat(problem.newProblem, \"&problemfields=\").concat(problem.problemfields), {\n          headers: {\n            \"Content-Type\": \"text/plain\"\n          },\n          method: 'POST',\n          data: {\n            problemfields: problem.problemfields\n          }\n        }).then(function (response) {\n          // handle success\n          console.log(response.data);\n        }).catch(function (error) {\n          // handle error\n          console.log(error);\n        }).then(function () {// always executed\n        });\n        alert(\"new Problem inserted\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.currentPage;\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nfunction LoginView(props) {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formGroupEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221\n    },\n    __self: this\n  }, \"User Name: \"), React.createElement(Form.Control, {\n    type: \"email\",\n    input: \"userName\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGroupPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Password: \"), React.createElement(Form.Control, {\n    type: \"password\",\n    input: \"password\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }))), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: props.func.handleClick,\n    name: \"login\",\n    variant: \"danger\",\n    size: \"lg\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, \"Login!\")));\n}\n\nfunction ControlPanel(props) {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, \"Product Name:  \"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter a product name\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: props.func.handleControl,\n    input: \"newProduct\",\n    variant: \"danger\",\n    size: \"lg\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252\n    },\n    __self: this\n  }, \"Insert New Product!\"), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257\n    },\n    __self: this\n  }, \" Problem Type:  \"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter a problem type\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \" Problem SubFields: (Seperate subfields by comma-,- ie: sf1,sf2,sf3):  \"), React.createElement(Form.Control, {\n    placeholder: \"Enter subfields\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: props.func.handleProblemInsert,\n    variant: \"danger\",\n    size: \"lg\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Insert New Problem Type!\")))));\n}\n\nfunction AddUser(props) {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, \"User Name: \"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter User Name\",\n    onChange: props.func.handleUserChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295\n    },\n    __self: this\n  }, \"Password\"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Password\",\n    onChange: props.func.handleUserChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    name: \"sb\",\n    onClick: props.func.handleUserInsert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, \"Add a New User!\"))));\n}\n\nfunction viewUsers(props) {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313\n    },\n    __self: this\n  });\n}\n\nexport default Login;","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\Login.js"],"names":["React","Component","Container","Button","ButtonToolbar","Navbar","Form","Row","Col","FormGroup","FormLabel","FormControl","Nav","NavDropdown","axios","require","Login","props","state","currentPage","newUserName","newUserPassword","newProduct","newProblem","problemfields","columns","dataField","text","headerAlign","sort","filter","textFilter","headerStyle","backgroundColor","width","handleUserInsert","bind","handleUserChange","handleChange","handleControl","handleProblemInsert","event","alert","post","headers","method","data","adminName","userName","userPassword","then","response","console","log","catch","error","target","placeholder","setState","value","type","password","addProduct","product","addProblem","addProblemFields","problem","problemname","LoginView","func","handleClick","ControlPanel","span","offset","AddUser","viewUsers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { ButtonToolbar } from 'react-bootstrap';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Form, Row,Col } from 'react-bootstrap';\r\nimport { FormGroup } from 'react-bootstrap';\r\nimport { FormLabel } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { NavDropdown } from 'react-bootstrap';\r\nconst axios = require('axios');\r\nclass Login extends Component {\r\n   constructor(props){\r\n     super(props)\r\n     this.state = {\r\n       currentPage : <AddUser func = {this}/>,\r\n       newUserName: '',\r\n       newUserPassword: '',\r\n       newProduct:'',\r\n       newProblem: '',\r\n       problemfields: '',\r\n       columns: [\r\n        {\r\n          dataField: 'adminname',\r\n          text: 'Admin Name',\r\n          headerAlign: 'center',\r\n          sort: true,\r\n          filter: textFilter(),\r\n          headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n        },\r\n        {\r\n          dataField: 'username',\r\n          text: 'User Name',\r\n          headerAlign: 'center',\r\n          sort: true,\r\n          filter: textFilter(),\r\n          headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n        },\r\n        {\r\n          dataField: 'userpassword',\r\n          text: 'User Password',\r\n          headerAlign: 'center',\r\n          sort: true,\r\n          filter: textFilter(),\r\n          headerStyle:{ backgroundColor: '#81c784',width:'100px'}\r\n        },\r\n       ]\r\n     }\r\n    this.handleUserInsert = this.handleUserInsert.bind(this);\r\n    this.handleUserChange = this.handleUserChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleControl = this.handleControl.bind(this);\r\n    this.handleProblemInsert = this.handleProblemInsert.bind(this);\r\n   }\r\n   handleUserInsert(event){\r\n    if(this.state.newUserName == '' || this.state.newUserPassword  == ''){\r\n      alert(\"Please check the input values!\\nSomething is missing\")\r\n    }\r\n    else{\r\n      axios.post(`http://localhost:4000/users/add`,{\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        method: 'POST',\r\n        data:{\r\n          adminName : this.props.adminName,\r\n          userName : this.state.newUserName,\r\n          userPassword: this.state.newUserPassword\r\n        }\r\n      })\r\n  .then(function (response) {\r\n    console.log(response.data);\r\n    alert(\"User Added\");\r\n  })\r\n  .catch(function (error) {\r\n    alert(\"Some Error Occured\");\r\n    console.log(error);\r\n  })\r\n  .then(() => {\r\n \r\n  });\r\n    }\r\n   }\r\n\r\n   handleUserChange(event){\r\n    if(event.target.placeholder === \"Enter User Name\"){\r\n      this.setState({newUserName: event.target.value});\r\n    }\r\n    else if(event.target.placeholder === \"Password\"){\r\n      this.setState({newUserPassword: event.target.value});\r\n    }\r\n   }\r\n  handleChange(event){\r\n      if(event.target.type == \"email\" ){\r\n        this.setState({userName: event.target.value });\r\n        \r\n      }\r\n      if(event.target.placeholder == \"Enter a product name\"){\r\n        this.setState({newProduct: event.target.value});\r\n      }\r\n      if(event.target.placeholder == \"Enter a problem type\"){\r\n        this.setState({newProblem: event.target.value});\r\n      }\r\n      if(event.target.placeholder == \"Enter subfields\"){\r\n        this.setState({problemfields: event.target.value});\r\n      }\r\n    if(event.target.type == \"password\"){\r\n        this.setState({password: event.target.value });\r\n    }\r\n  }\r\n  handleControl(event){\r\n  \r\n      console.log(this.state.newProduct);\r\n      this.addProduct(this.state);\r\n  }\r\n  addProduct(product) {\r\n    if(product.newProduct === ''){\r\n      alert(\"please check the input value\");\r\n    }\r\n    else{\r\n      alert(\"new Product inserted\");\r\n      console.log(product.newProduct + \"addProduct kısmı \");\r\n      const axios = require('axios');\r\n      axios.post(`http://localhost:4000/products/add?productname=${product.newProduct}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data: product.newProduct\r\n      })\r\n  .then(function (response) {\r\n    // handle success\r\n    console.log(response.data);\r\n  })\r\n  .catch(function (error) {\r\n    // handle error\r\n    console.log(error);\r\n  })\r\n  .then(function () {\r\n    // always executed\r\n  });\r\n    }\r\n   \r\n}\r\n  handleProblemInsert(event){\r\n    console.log(this.state.newProblem);\r\n    this.addProblem(this.state);\r\n    this.addProblemFields(this.state);\r\n}\r\n  addProblem(problem) {\r\n    console.log(problem.newProblem + problem.problemfields+ \"problem\");\r\n    const axios = require('axios');\r\n    if(problem.newProblem === '' || problem.problemfields === ''){\r\n      alert(\"missing fields!\")\r\n    }\r\n    else {\r\n      axios.post(`http://localhost:4000/problems/add?problemname=${problem.newProblem}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data:{\r\n          problemname : problem.newProblem,\r\n          problemfields: problem.problemfields\r\n        }\r\n      })\r\n  .then(function (response) {\r\n    // handle success\r\n    console.log(response.data);\r\n  })\r\n  .catch(function (error) {\r\n    // handle error\r\n    console.log(error);\r\n  })\r\n  .then(function () {\r\n    // always executed\r\n  });\r\n  alert(\"new Problem inserted\");\r\n    }\r\n\r\n}\r\naddProblemFields(problem) {\r\n  console.log(problem.problemfields+ \"problem\");\r\n  const axios = require('axios');\r\n  if(problem.newProblem === '' || problem.problemfields === ''){\r\n    alert(\"missing fields!\")\r\n  }\r\n  else {\r\n    axios.post(`http://localhost:4000/problemfields/add?problemname=${problem.newProblem}&problemfields=${problem.problemfields}`,{\r\n      headers: {\"Content-Type\": \"text/plain\"},\r\n      method: 'POST',\r\n      data:{\r\n        problemfields: problem.problemfields\r\n      }\r\n    })\r\n.then(function (response) {\r\n  // handle success\r\n  console.log(response.data);\r\n})\r\n.catch(function (error) {\r\n  // handle error\r\n  console.log(error);\r\n})\r\n.then(function () {\r\n  // always executed\r\n});\r\nalert(\"new Problem inserted\");\r\n  }\r\n\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n       \r\n      this.state.currentPage\r\n    );\r\n  \r\n  }\r\n}\r\nfunction LoginView(props){\r\n    return (\r\n        <Container>\r\n            <Form>\r\n        <Form.Group controlId=\"formGroupEmail\">\r\n          <Form.Label>User Name: </Form.Label>\r\n          <Form.Control type=\"email\" input = \"userName\" onChange = {props.func.handleChange}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formGroupPassword\">\r\n          <Form.Label>Password: </Form.Label>\r\n          <Form.Control type=\"password\" input = \"password\" onChange =  {props.func.handleChange} />\r\n        </Form.Group>\r\n      </Form>\r\n      <Container>\r\n         <Button  onClick={props.func.handleClick} name='login' variant=\"danger\" size=\"lg\" active >\r\n         Login!\r\n         </Button>\r\n         </Container>\r\n        </Container>\r\n\r\n      \r\n    );\r\n}\r\nfunction ControlPanel(props){\r\n    return (\r\n        <Container>\r\n          <Row>\r\n          <Col  md={{ span: 6, offset: 3}} >\r\n            <Form>\r\n        <Form.Group controlId=\"formBasicEmail\" >\r\n          <Form.Label >Product Name:  </Form.Label>\r\n          <Form.Control type = \"text\" placeholder=\"Enter a product name\" onChange = {props.func.handleChange}/>\r\n          <Form.Text className=\"text-muted\">\r\n          </Form.Text>\r\n        </Form.Group>\r\n        \r\n        <Button  onClick={props.func.handleControl} input =\"newProduct\" variant=\"danger\" size=\"lg\" active >\r\n         Insert New Product!\r\n         </Button>\r\n      \r\n         <Form.Group  controlId=\"formBasicEmail\">\r\n          <Form.Label > Problem Type:  </Form.Label>\r\n          <Form.Control type = \"text\" placeholder=\"Enter a problem type\" onChange = {props.func.handleChange}/>\r\n          <Form.Text className=\"text-muted\">\r\n          </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group  controlId=\"formBasicEmail\">\r\n          <Form.Label> Problem SubFields: (Seperate subfields by comma-,- ie: sf1,sf2,sf3):  </Form.Label>\r\n          <Form.Control placeholder=\"Enter subfields\"  onChange = {props.func.handleChange}/>\r\n          <Form.Text className=\"text-muted\">\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Button  onClick={props.func.handleProblemInsert} variant=\"danger\" size=\"lg\" active >\r\n         Insert New Problem Type!\r\n         </Button>\r\n         \r\n      </Form>\r\n      </Col>\r\n      </Row>\r\n        </Container>\r\n\r\n      \r\n    );\r\n}\r\n    function AddUser(props){\r\n      return (\r\n          <Container>\r\n            <Row>\r\n            <Col  md={{ span: 6, offset: 3}}>\r\n      <Form>\r\n      \r\n      <Form.Group controlId=\"formBasicEmail\">\r\n      <Form.Label>User Name: </Form.Label>\r\n      <Form.Control type=\"text\" placeholder=\"Enter User Name\" onChange = {props.func.handleUserChange}/>\r\n      <Form.Text className=\"text-muted\">\r\n      </Form.Text>\r\n    </Form.Group>\r\n  \r\n    <Form.Group controlId=\"formBasicPassword\">\r\n      <Form.Label>Password</Form.Label>\r\n      <Form.Control type=\"text\" placeholder=\"Password\"   onChange = {props.func.handleUserChange}/>\r\n    </Form.Group>\r\n    \r\n    </Form>\r\n   \r\n          <Button name= \"sb\" onClick={props.func.handleUserInsert} > \r\n          Add a New User!\r\n        </Button>\r\n      </Col>\r\n        </Row>\r\n          </Container>\r\n  \r\n        \r\n      );\r\n}\r\nfunction viewUsers(props){\r\n  return (\r\n      <Container>\r\n     \r\n      </Container>\r\n\r\n    \r\n  );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}