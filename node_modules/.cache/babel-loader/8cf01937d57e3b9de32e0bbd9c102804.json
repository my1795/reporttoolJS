{"ast":null,"code":"import _defineProperty from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\SearchPage.js\";\nimport React, { Component } from 'react'; //import './App.css';\n\nimport { Container } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport filterFactory, { textFilter, dateFilter } from 'react-bootstrap-table2-filter';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css';\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\n\nvar axios = require('axios');\n\nvar host = '10.254.20.112';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage(props) {\n    var _ref, _ref2, _ref3;\n\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).call(this, props));\n\n    _this.handleGetCurrentData = function () {\n      alert(_this.node.table.props.data.length + \" reports viewed by filters\");\n    };\n\n    _this.state = {\n      filteredRows: 0,\n      fieldcolumns: [{\n        dataField: 'pname',\n        text: 'Problem Name',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field1',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field2',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field3',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field4',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field5',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field6',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field7',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field8',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }, {\n        dataField: 'field9',\n        text: '',\n        headerAlign: '',\n        headerStyle: {\n          backgroundColor: '#00ff00',\n          width: '100px'\n        },\n        hidden: false\n      }],\n      fielddata: [],\n      columns: [{\n        dataField: 'generalinfo_id',\n        text: 'Info     ID',\n        headerAlign: 'center',\n        sort: true,\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        },\n        footerStyle: {\n          backgroundColor: '#c8e6c9'\n        },\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, (_ref = {\n        dataField: 'fromcompletedby',\n        text: 'Completed By',\n        headerAlign: 'center',\n        footer: _this.arrangeFilter,\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        }\n      }, _defineProperty(_ref, \"footer\", 'Total'), _defineProperty(_ref, \"headerStyle\", {\n        backgroundColor: '#81c784',\n        width: '100px'\n      }), _ref), (_ref2 = {\n        dataField: 'gpsproduct',\n        text: 'Product',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        }\n      }, _defineProperty(_ref2, \"editor\", {\n        type: Type.SELECT,\n        options: [{\n          value: 'E',\n          label: 'E'\n        }]\n      }), _defineProperty(_ref2, \"headerStyle\", {\n        backgroundColor: '#81c784',\n        width: '100px'\n      }), _ref2), (_ref3 = {\n        dataField: 'startdate',\n        text: 'Date',\n        headerAlign: 'left',\n        filter: dateFilter({\n          dateStyle: {\n            width: '150px'\n          }\n        }),\n        editable: false,\n        editor: {\n          type: Type.TEXTAREA\n        }\n      }, _defineProperty(_ref3, \"editor\", {\n        type: Type.DATE\n      }), _defineProperty(_ref3, \"headerStyle\", {\n        backgroundColor: '#81c784',\n        width: '100px',\n        height: '75px'\n      }), _ref3), {\n        dataField: 'caseid',\n        text: 'Case        ID',\n        sort: true,\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        },\n        editable: false,\n        // headerFormatter: this.caseIDFormatter,\n        headerAlign: 'center',\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'customername',\n        text: 'Customer Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        },\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }, {\n        dataField: 'description',\n        text: 'Description',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.TEXTAREA\n        },\n        formatter: _this.descriptionFormatter,\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '250px'\n        }\n      }, {\n        dataField: 'pname',\n        text: 'Problem     Name',\n        headerAlign: 'center',\n        filter: textFilter(),\n        editor: {\n          type: Type.SELECT,\n          options: [{\n            value: 'E',\n            label: 'E'\n          }]\n        },\n        headerStyle: {\n          backgroundColor: '#81c784',\n          width: '100px'\n        }\n      }],\n      selectedRows: [],\n      generalinfo: []\n    };\n    _this.handleSelected = _this.handleSelected.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.saveChanges = _this.saveChanges.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteRows = _this.deleteRows.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateProblem = _this.updateProblem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleGetCurrentData = _this.handleGetCurrentData.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"descriptionFormatter\",\n    value: function descriptionFormatter(cell, row) {\n      var h = row.description.length > 300 ? '120px' : '';\n      return React.createElement(\"div\", {\n        style: {\n          height: h,\n          width: '400px',\n          overflowY: 'scroll',\n          overflowX: 'hidden'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, row.description);\n    }\n  }, {\n    key: \"arrangeFilter\",\n    value: function arrangeFilter(filteredData) {\n      return filteredData.length;\n    }\n  }, {\n    key: \"handleSelected\",\n    value: function handleSelected() {\n      console.log(this.state.generalinfo.dataField);\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.assignGeneralInfo();\n      this.assingProductBox();\n      this.assignProblemBox();\n    }\n  }, {\n    key: \"deleteRows\",\n    value: function deleteRows() {\n      var l = this.state.selectedRows.length;\n\n      if (l > 0) {\n        var r = l > 1 ? \"reports\" : \"report\";\n\n        if (window.confirm(\"Are you sure to delete \" + l + \" \" + r + \" ?\")) {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = this.state.selectedRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var row = _step.value;\n              this.deleteRow(row.generalinfo_id, row.caseid);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        } else {}\n      } else {\n        alert(\"No reports selected!\");\n      }\n    }\n  }, {\n    key: \"deleteRow\",\n    value: function deleteRow(generalinfo_id, caseid) {\n      var _this2 = this;\n\n      var axios = require('axios');\n\n      axios.post(\"http://\".concat(host, \":4000/generalinfo/remove?generalinfo_id=\").concat(generalinfo_id), {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        method: 'POST',\n        data: \"delete sent\"\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {\n        _this2.assignGeneralInfo();\n      });\n      axios.post(\"http://\".concat(host, \":4000/fieldcontents/remove?caseid=\").concat(caseid), {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        method: 'POST',\n        data: \"delete sent\"\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"saveChanges\",\n    value: function saveChanges(generalinfo_id, fromcompletedby, gpsproduct, startdate, caseid, customername, description, pname) {\n      axios.post(\"http://\".concat(host, \":4000/generalinfo/update?generalinfo_id=\").concat(generalinfo_id, \"&startdate=\").concat(startdate, \"&caseid=\").concat(caseid, \"\\n      &gpsproduct=\").concat(gpsproduct, \"&fromcompletedby=\").concat(fromcompletedby, \"&customername=\").concat(customername, \"&pname=\").concat(pname), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: 'POST',\n        data: {\n          description: description\n        }\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {});\n      alert(\"changes saved\");\n    }\n  }, {\n    key: \"assignGeneralInfo\",\n    value: function assignGeneralInfo() {\n      var _this3 = this;\n\n      fetch(\"http://\".concat(host, \":4000/generalinfo\")).then(function (response) {\n        return response.json();\n      }).then(function (_ref4) {\n        var data = _ref4.data;\n\n        _this3.setState({\n          generalinfo: data\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assingProductBox\",\n    value: function assingProductBox() {\n      var _this4 = this;\n\n      var products = [];\n      var opt = [];\n      fetch(\"http://\".concat(host, \":4000/products\")).then(function (response) {\n        return response.json();\n      }).then(function (_ref5) {\n        var data = _ref5.data;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var el = _step2.value;\n            products.push(el.productname);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < products.length; k++) {\n          opt.push({\n            value: products[k],\n            label: products[k]\n          });\n        }\n\n        var copy = _this4.state.columns.slice();\n\n        copy[2].editor.options = opt;\n\n        _this4.setState({\n          columns: copy\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assignProblemBox\",\n    value: function assignProblemBox() {\n      var _this5 = this;\n\n      var problems = [];\n      var opt = [];\n      fetch(\"http://\".concat(host, \":4000/problems\")).then(function (response) {\n        return response.json();\n      }).then(function (_ref6) {\n        var data = _ref6.data;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var el = _step3.value;\n            problems.push(el.problemname);\n            console.log(el.problemname);\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }).then(function () {\n        for (var k = 0; k < problems.length; k++) {\n          opt.push({\n            value: problems[k],\n            label: problems[k]\n          });\n        }\n\n        var copy = _this5.state.columns.slice();\n\n        copy[7].editor.options = opt;\n\n        _this5.setState({\n          columns: copy\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"arrangeExpand\",\n    value: function arrangeExpand(pname) {\n      var _this6 = this;\n\n      fetch(\"http://\".concat(host, \":4000/problemfields?pname=\").concat(pname)).then(function (response) {\n        return response.json();\n      }).then(function (_ref7) {\n        var data = _ref7.data;\n        var sortedValues = Object.values(data[0]);\n\n        var copiedfieldcolumns = _this6.state.fieldcolumns.slice();\n\n        for (var i = 1; i < sortedValues.length; i++) {\n          if (sortedValues[i] === null) {\n            copiedfieldcolumns[i].hidden = true;\n          } else {\n            copiedfieldcolumns[i].hidden = false;\n            copiedfieldcolumns[i].text = sortedValues[i];\n          }\n        }\n\n        _this6.setState({\n          fieldcolumns: copiedfieldcolumns\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"setFieldContents\",\n    value: function setFieldContents(caseid) {\n      var _this7 = this;\n\n      fetch(\"http://\".concat(host, \":4000/fieldcontents?caseid=\").concat(caseid)).then(function (response) {\n        return response.json();\n      }).then(function (_ref8) {\n        var data = _ref8.data;\n\n        _this7.setState({\n          fielddata: data\n        });\n\n        _this7.arrangeExpand(data[0].pname);\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"updateProblem\",\n    value: function updateProblem(newPname, caseid) {\n      var _this8 = this;\n\n      var newFields = [];\n      var newContents = [];\n      fetch(\"http://\".concat(host, \":4000/problemfields?pname=\").concat(newPname), {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        method: 'GET',\n        data: \"delete sent\"\n      }).then(function (response) {\n        return response.json();\n      }).then(function (_ref9) {\n        var data = _ref9.data;\n        var requestedProblemField = Object.values(data[0]);\n\n        for (var i = 1; i < requestedProblemField.length; i++) {\n          if (requestedProblemField[i] != null) {\n            newFields[i - 1] = requestedProblemField[i];\n          }\n        }\n      }).then(function () {\n        for (var i = 0; i < newFields.length; i++) {\n          newContents[i] = window.prompt(\"Please enter new problem's subfields\", newFields[i]);\n        }\n      }).then(function () {\n        for (var i = 0; i < newFields.length; i++) {\n          _this8.sendProblemToServer(\"field\".concat(i + 1), newContents[i], caseid, newPname);\n        }\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {\n        console.log(newFields);\n      });\n    }\n  }, {\n    key: \"sendProblemToServer\",\n    value: function sendProblemToServer(field, content, caseid, newPname) {\n      axios.post(\"http://\".concat(host, \":4000/fieldcontents/update?field=\").concat(field, \"&content=\").concat(content, \"&caseid=\").concat(caseid, \"&pname=\").concat(newPname), {\n        headers: {\n          \"Content-Type\": \"text/plain\"\n        },\n        method: 'POST',\n        data: \"problem sent\"\n      }).then(function (response) {\n        // handle success\n        console.log(response.data);\n      }).catch(function (error) {\n        // handle error\n        console.log(error);\n      }).then(function () {});\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n\n      // { this.handleGetCurrentData()}\n      var expandRow = {\n        renderer: function renderer(row) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 488\n            },\n            __self: this\n          }, React.createElement(Container, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 490\n            },\n            __self: this\n          }, React.createElement(BootstrapTable, {\n            keyField: \"caseid\",\n            data: _this9.state.fielddata,\n            columns: _this9.state.fieldcolumns,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 491\n            },\n            __self: this\n          })));\n        }\n      };\n      var selectRow = {\n        mode: 'checkbox',\n        clickToSelect: true,\n        bgColor: function bgColor(row, rowIndex) {\n          return rowIndex % 2 == 0 ? '#00BFFF' : '#00FFFF';\n        },\n        clickToExpand: true,\n        clickToEdit: true,\n        onSelect: function onSelect(row, isSelect, rowIndex, e) {\n          if (isSelect === true) {\n            _this9.state.selectedRows.push(row);\n\n            _this9.setFieldContents(row.caseid);\n          }\n\n          if (isSelect === false) {\n            _this9.state.selectedRows.splice(_this9.state.selectedRows.indexOf(row), 1);\n          }\n        },\n        onSelectAll: function onSelectAll(isSelect, rows, e) {\n          if (isSelect === true) {\n            for (var i = 0; i < rows.length; i++) {\n              _this9.state.selectedRows.push(rows[i]);\n\n              _this9.setFieldContents(rows[i].caseid);\n            }\n          }\n\n          if (isSelect === false) {\n            for (var _i = 0; _i < rows.length; _i++) {\n              _this9.state.selectedRows.splice(_this9.state.selectedRows.indexOf(rows[_i]), 1);\n            }\n          }\n        }\n      };\n      var cellEdit = {\n        mode: 'click'\n      };\n      var pagination = paginationFactory({});\n      var filter = filterFactory({});\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.deleteRows,\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, \"Delete Selected Rows\"), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555\n        },\n        __self: this\n      }, \" \"), React.createElement(Button, {\n        onClick: this.handleGetCurrentData,\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, \"Filter results\")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 561\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 562\n        },\n        __self: this\n      }, React.createElement(BootstrapTable, {\n        ref: function ref(n) {\n          return _this9.node = n;\n        },\n        keyField: \"generalinfo_id\",\n        filter: filter,\n        selectRow: selectRow,\n        data: this.state.generalinfo,\n        columns: this.state.columns,\n        striped: true,\n        hover: true,\n        condensed: true,\n        expandRow: expandRow,\n        cellEdit: cellEditFactory({\n          mode: 'dbclick',\n          blurToSave: true,\n          afterSaveCell: function afterSaveCell(oldValue, newValue, row, column) {\n            if (oldValue != newValue && !(newValue === '')) {\n              _this9.saveChanges(row.generalinfo_id, row.fromcompletedby, row.gpsproduct, row.startdate, row.caseid, row.customername, row.description, row.pname);\n\n              if (column.dataField === 'pname') {\n                _this9.updateProblem(newValue, row.caseid);\n              }\n            }\n          }\n        }),\n        pagination: pagination,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nexport default SearchPage;","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\SearchPage.js"],"names":["React","Component","Container","Button","Row","BootstrapTable","filterFactory","textFilter","dateFilter","paginationFactory","cellEditFactory","Type","axios","require","host","SearchPage","props","handleGetCurrentData","alert","node","table","data","length","state","filteredRows","fieldcolumns","dataField","text","headerAlign","headerStyle","backgroundColor","width","hidden","fielddata","columns","sort","filter","editor","type","TEXTAREA","footerStyle","footer","arrangeFilter","SELECT","options","value","label","dateStyle","editable","DATE","height","formatter","descriptionFormatter","selectedRows","generalinfo","handleSelected","bind","saveChanges","deleteRows","updateProblem","cell","row","h","description","overflowY","overflowX","filteredData","console","log","assignGeneralInfo","assingProductBox","assignProblemBox","l","r","window","confirm","deleteRow","generalinfo_id","caseid","post","headers","method","then","response","catch","error","fromcompletedby","gpsproduct","startdate","customername","pname","fetch","json","setState","err","products","opt","el","push","productname","k","copy","slice","problems","problemname","sortedValues","Object","values","copiedfieldcolumns","i","arrangeExpand","newPname","newFields","newContents","requestedProblemField","prompt","sendProblemToServer","field","content","expandRow","renderer","selectRow","mode","clickToSelect","bgColor","rowIndex","clickToExpand","clickToEdit","onSelect","isSelect","e","setFieldContents","splice","indexOf","onSelectAll","rows","cellEdit","pagination","n","blurToSave","afterSaveCell","oldValue","newValue","column"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import './App.css';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\n\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter, dateFilter } from 'react-bootstrap-table2-filter';\r\n\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table2-filter/dist/react-bootstrap-table2-filter.min.css'\r\n\r\n\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nconst axios = require('axios');\r\n\r\nvar host = '10.254.20.112';\r\nclass SearchPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filteredRows: 0,\r\n      fieldcolumns: [\r\n        {\r\n          dataField: 'pname',\r\n          text: 'Problem Name',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        },\r\n        {\r\n          dataField: 'field1',\r\n          text: '',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        },\r\n        {\r\n          dataField: 'field2',\r\n          text: '',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        },\r\n        {\r\n          dataField: 'field3',\r\n          text: '',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        },\r\n        {\r\n          dataField: 'field4',\r\n          text: '',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        },\r\n        {\r\n          dataField: 'field5',\r\n          text: '',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        },\r\n        {\r\n          dataField: 'field6',\r\n          text: '',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        },\r\n        {\r\n          dataField: 'field7',\r\n          text: '',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        },\r\n        {\r\n          dataField: 'field8',\r\n          text: '',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        },\r\n        {\r\n          dataField: 'field9',\r\n          text: '',\r\n          headerAlign: '',\r\n          headerStyle: { backgroundColor: '#00ff00', width: '100px' },\r\n          hidden: false\r\n        }\r\n      ],\r\n      fielddata: [],\r\n      columns: [{\r\n        dataField: 'generalinfo_id',\r\n        text: 'Info     ID',\r\n        headerAlign: 'center',\r\n        sort: true,\r\n        filter: textFilter(),\r\n        editor: {\r\n          type: Type.TEXTAREA\r\n        },\r\n        footerStyle: {\r\n          backgroundColor: '#c8e6c9'\r\n        },\r\n        headerStyle: { backgroundColor: '#81c784', width: '100px' }\r\n      }, {\r\n        dataField: 'fromcompletedby',\r\n        text: 'Completed By',\r\n        headerAlign: 'center',\r\n        footer: this.arrangeFilter,\r\n        filter: textFilter(),\r\n        editor: {\r\n          type: Type.TEXTAREA\r\n        },\r\n        footer: 'Total',\r\n       \r\n        headerStyle: { backgroundColor: '#81c784', width: '100px' }\r\n      }, {\r\n        dataField: 'gpsproduct',\r\n        text: 'Product',\r\n        headerAlign: 'center',\r\n        filter: textFilter(),\r\n        editor: {\r\n          type: Type.TEXTAREA\r\n        },\r\n        editor: {\r\n          type: Type.SELECT,\r\n          options: [{\r\n\r\n            value: 'E',\r\n            label: 'E'\r\n          }]\r\n        },\r\n        headerStyle: { backgroundColor: '#81c784', width: '100px' }\r\n      },\r\n      {\r\n        dataField: 'startdate',\r\n        text: 'Date',\r\n        headerAlign: 'left',\r\n        filter: dateFilter({\r\n          dateStyle: { width: '150px' }\r\n        }),\r\n        editable: false,\r\n        editor: {\r\n          type: Type.TEXTAREA\r\n        },\r\n        editor: {\r\n          type: Type.DATE\r\n        },\r\n        headerStyle: { backgroundColor: '#81c784', width: '100px' ,height:'75px' }\r\n      },\r\n      {\r\n        dataField: 'caseid',\r\n        text: 'Case        ID',\r\n        sort: true,\r\n        filter: textFilter(),\r\n        editor: {\r\n          type: Type.TEXTAREA\r\n        },\r\n        editable: false,\r\n        // headerFormatter: this.caseIDFormatter,\r\n        headerAlign: 'center',\r\n        headerStyle: { backgroundColor: '#81c784', width: '100px' }\r\n      },\r\n      {\r\n        dataField: 'customername',\r\n        text: 'Customer Name',\r\n        headerAlign: 'center',\r\n        filter: textFilter(),\r\n        editor: {\r\n          type: Type.TEXTAREA\r\n        },\r\n        headerStyle: { backgroundColor: '#81c784', width: '100px' }\r\n      },\r\n      {\r\n        dataField: 'description',\r\n        text: 'Description',\r\n        headerAlign: 'center',\r\n        filter: textFilter(),\r\n        editor: {\r\n          type: Type.TEXTAREA\r\n        },\r\n        formatter: this.descriptionFormatter,\r\n        headerStyle: { backgroundColor: '#81c784', width: '250px'  }\r\n\r\n      },\r\n      {\r\n        dataField: 'pname',\r\n        text: 'Problem     Name',\r\n        headerAlign: 'center',\r\n        filter: textFilter(),\r\n        editor: {\r\n          type: Type.SELECT,\r\n         \r\n          options: [{\r\n\r\n            value: 'E',\r\n            label: 'E'\r\n          }]\r\n        },\r\n        headerStyle: { backgroundColor: '#81c784', width: '100px' }\r\n      }\r\n\r\n\r\n      ],\r\n\r\n      selectedRows: [],\r\n\r\n      generalinfo: [\r\n\r\n      ],\r\n\r\n\r\n    }\r\n    this.handleSelected = this.handleSelected.bind(this);\r\n    this.saveChanges = this.saveChanges.bind(this);\r\n    this.deleteRows = this.deleteRows.bind(this);\r\n    this.updateProblem = this.updateProblem.bind(this);\r\n    this.handleGetCurrentData = this.handleGetCurrentData.bind(this);\r\n  }\r\n\r\ndescriptionFormatter(cell,row){\r\n  const h = (row.description.length > 300) ? '120px' : ''\r\n  return(\r\n  <div style= {{height: h ,width: '400px',overflowY: 'scroll', overflowX: 'hidden'}}>{row.description}</div>\r\n  );\r\n}\r\nhandleGetCurrentData = () => {\r\n  alert(this.node.table.props.data.length + \" reports viewed by filters\");\r\n}\r\n\r\narrangeFilter(filteredData){\r\n  return (filteredData.length);\r\n}\r\n\r\n  handleSelected() {\r\n    console.log(this.state.generalinfo.dataField);\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.assignGeneralInfo();\r\n    this.assingProductBox();\r\n    this.assignProblemBox();\r\n  }\r\n\r\n  deleteRows() {\r\n    let l = this.state.selectedRows.length;\r\n    if(l>0){\r\n      let r = (l > 1) ? \"reports\" : \"report\";\r\n      if (window.confirm(\"Are you sure to delete \" + l + \" \" + r + \" ?\")) {\r\n        for (let row of this.state.selectedRows) {\r\n          this.deleteRow(row.generalinfo_id,row.caseid);\r\n        }\r\n      } else {\r\n    \r\n      }\r\n    }\r\n  else{\r\n    alert(\"No reports selected!\");\r\n  }\r\n  \r\n\r\n  }\r\n  deleteRow(generalinfo_id,caseid) {\r\n    const axios = require('axios');\r\n    axios.post(`http://${host}:4000/generalinfo/remove?generalinfo_id=${generalinfo_id}`, {\r\n      headers: { \"Content-Type\": \"text/plain\" },\r\n      method: 'POST',\r\n      data: \"delete sent\"\r\n    })\r\n      .then(function (response) {\r\n        // handle success\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      }).then(()=>{\r\n        this.assignGeneralInfo();\r\n      })\r\n      \r\n      axios.post(`http://${host}:4000/fieldcontents/remove?caseid=${caseid}`, {\r\n        headers: { \"Content-Type\": \"text/plain\" },\r\n        method: 'POST',\r\n        data: \"delete sent\"\r\n      })\r\n        .then(function (response) {\r\n          // handle success\r\n          console.log(response.data);\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        })\r\n        .then(function () {\r\n  \r\n  \r\n        });\r\n\r\n\r\n  }\r\n  saveChanges(generalinfo_id, fromcompletedby, gpsproduct, startdate, caseid, customername, description, pname) {\r\n\r\n    axios.post(`http://${host}:4000/generalinfo/update?generalinfo_id=${generalinfo_id}&startdate=${startdate}&caseid=${caseid}\r\n      &gpsproduct=${gpsproduct}&fromcompletedby=${fromcompletedby}&customername=${customername}&pname=${pname}`, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        method: 'POST',\r\n        data: {\r\n          description: description\r\n        }\r\n      })\r\n      .then(function (response) {\r\n        // handle success\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n\r\n\r\n      });\r\n    alert(\"changes saved\");\r\n\r\n  }\r\n  assignGeneralInfo() {\r\n\r\n    fetch(`http://${host}:4000/generalinfo`)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        this.setState({ generalinfo: data })\r\n\r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n  }\r\n  assingProductBox() {\r\n    let products = [];\r\n    let opt = [];\r\n    fetch(`http://${host}:4000/products`)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        for (var el of data) {\r\n          products.push(el.productname);\r\n\r\n        }\r\n\r\n      })\r\n      .then(() => {\r\n        for (var k = 0; k < products.length; k++) {\r\n          opt.push({ value: products[k], label: products[k] });\r\n        }\r\n        var copy = this.state.columns.slice();\r\n        copy[2].editor.options = opt;\r\n        this.setState({ columns: copy });\r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n\r\n\r\n  }\r\n  assignProblemBox() {\r\n    let problems = [];\r\n    let opt = [];\r\n    fetch(`http://${host}:4000/problems`)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        for (var el of data) {\r\n          problems.push(el.problemname);\r\n          console.log(el.problemname);\r\n        }\r\n\r\n      })\r\n      .then(() => {\r\n        for (var k = 0; k < problems.length; k++) {\r\n          opt.push({ value: problems[k], label: problems[k] });\r\n        }\r\n        var copy = this.state.columns.slice();\r\n        copy[7].editor.options = opt;\r\n        this.setState({ columns: copy });\r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n\r\n\r\n  }\r\n  arrangeExpand(pname) {\r\n    fetch(`http://${host}:4000/problemfields?pname=${pname}`)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        var sortedValues = Object.values(data[0]);\r\n        var copiedfieldcolumns = this.state.fieldcolumns.slice();\r\n\r\n\r\n\r\n        for (let i = 1; i < sortedValues.length; i++) {\r\n\r\n          if (sortedValues[i] === null) {\r\n            copiedfieldcolumns[i].hidden = true;\r\n\r\n          }\r\n          else {\r\n            copiedfieldcolumns[i].hidden = false;\r\n            copiedfieldcolumns[i].text = sortedValues[i];\r\n\r\n          }\r\n        }\r\n        this.setState({ fieldcolumns: copiedfieldcolumns });\r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n  }\r\n\r\n  setFieldContents(caseid) {\r\n    fetch(`http://${host}:4000/fieldcontents?caseid=${caseid}`)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        this.setState({ fielddata: data });\r\n        this.arrangeExpand(data[0].pname)\r\n      \r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n  }\r\n  updateProblem(newPname,caseid){\r\n    var newFields = [];\r\n    var newContents = [];\r\n    fetch(`http://${host}:4000/problemfields?pname=${newPname}`, {\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      method: 'GET',\r\n      data: \"delete sent\"\r\n    })\r\n      .then( response => response.json())\r\n      .then(({ data }) => {\r\n        var requestedProblemField = Object.values(data[0]);\r\n        for(var i=1; i< requestedProblemField.length; i++){\r\n          if(requestedProblemField[i]!= null){\r\n            newFields[i-1] = requestedProblemField[i];\r\n          }\r\n        }\r\n      })\r\n      .then(()=>{\r\n        for(var i=0; i< newFields.length; i++){\r\n          newContents[i] = window.prompt(\"Please enter new problem's subfields\",newFields[i]);\r\n        }\r\n      }).then(()=>{\r\n        for(var i=0; i< newFields.length; i++){\r\n          this.sendProblemToServer(`field${i+1}`,newContents[i],caseid,newPname);\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () { \r\n        console.log(newFields);\r\n\r\n      });\r\n  }\r\n  sendProblemToServer(field,content,caseid,newPname){\r\n    axios.post(`http://${host}:4000/fieldcontents/update?field=${field}&content=${content}&caseid=${caseid}&pname=${newPname}`, {\r\n      headers: { \"Content-Type\": \"text/plain\" },\r\n      method: 'POST',\r\n      data: \"problem sent\"\r\n    })\r\n      .then(function (response) {\r\n        // handle success\r\n        console.log(response.data);\r\n      })\r\n      .catch(function (error) {\r\n        // handle error\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n\r\n\r\n      });\r\n  }\r\n  render() {\r\n    // { this.handleGetCurrentData()}\r\n    const expandRow = {\r\n      renderer: row => (\r\n\r\n        <div>\r\n\r\n          <Container>\r\n            <BootstrapTable keyField='caseid' data={this.state.fielddata} columns={this.state.fieldcolumns} />\r\n          </Container>\r\n\r\n        </div>\r\n      )\r\n    };\r\n\r\n    const selectRow = {\r\n      mode: 'checkbox',\r\n      clickToSelect: true,\r\n      bgColor: (row, rowIndex) => (rowIndex % 2 == 0 ? '#00BFFF' : '#00FFFF'),\r\n      clickToExpand: true,\r\n      clickToEdit: true,\r\n      onSelect: (row, isSelect, rowIndex, e) => {\r\n       \r\n        if (isSelect === true) {\r\n          this.state.selectedRows.push(row);\r\n\r\n       \r\n          this.setFieldContents(row.caseid);\r\n        }\r\n        if (isSelect === false) {\r\n          this.state.selectedRows.splice(this.state.selectedRows.indexOf(row), 1);\r\n       \r\n        }\r\n\r\n\r\n      },\r\n      onSelectAll: (isSelect, rows, e) => {\r\n        if (isSelect === true) {\r\n          for (let i = 0; i < rows.length; i++) {\r\n            this.state.selectedRows.push(rows[i]);\r\n            \r\n\r\n            this.setFieldContents(rows[i].caseid);\r\n          }\r\n        }\r\n        if (isSelect === false) {\r\n          for (let i = 0; i < rows.length; i++) {\r\n            this.state.selectedRows.splice(this.state.selectedRows.indexOf(rows[i]), 1);\r\n       \r\n          }\r\n        }\r\n\r\n      }\r\n    };\r\n    const cellEdit = {\r\n      mode: 'click'\r\n    };\r\n     const pagination = paginationFactory({\r\n        });\r\n\r\n    const filter = filterFactory({\r\n  \r\n    });\r\n    return (\r\n\r\n      <div>\r\n        <Container>\r\n\r\n          <Row>\r\n            <Button onClick={this.deleteRows} variant=\"danger\" size=\"lg\" active >\r\n              Delete Selected Rows\r\n         </Button>\r\n          <hr> </hr>\r\n          <Button onClick={this.handleGetCurrentData} variant=\"danger\" size=\"lg\" active >\r\n              Filter results\r\n         </Button>\r\n\r\n          </Row>\r\n          <hr></hr>\r\n          <Row>\r\n            <BootstrapTable ref ={n => this.node = n} keyField='generalinfo_id' filter={filter} selectRow={selectRow}\r\n              data={this.state.generalinfo} columns={this.state.columns}\r\n              striped hover condensed\r\n              expandRow={expandRow}\r\n              cellEdit={cellEditFactory({\r\n                mode: 'dbclick', blurToSave: true,\r\n                afterSaveCell: (oldValue, newValue, row, column) => {\r\n                  if(oldValue != newValue && !(newValue === '') ){\r\n                    this.saveChanges(row.generalinfo_id, row.fromcompletedby, row.gpsproduct, row.startdate, row.caseid, row.customername, row.description, row.pname)\r\n                    if(column.dataField === 'pname'){\r\n                      this.updateProblem(newValue,row.caseid);\r\n                    }\r\n                  }\r\n                }\r\n              })}\r\n              pagination={pagination}\r\n            >\r\n\r\n\r\n            </BootstrapTable>\r\n\r\n          </Row>\r\n\r\n        </Container>\r\n\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\n\r\nexport default SearchPage;\r\n"]},"metadata":{},"sourceType":"module"}