{"ast":null,"code":"import _defineProperty from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\General.js\";\nimport React from 'react';\nimport ProblemPage from './ProblemPage.js'; //import './styles/custom.css';\n//import './styles/normalize.css';\n\nimport './styles/general.css';\nimport './styles/skeleton.css';\nimport { Button, DropdownButton } from 'react-bootstrap';\nimport { Navbar } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\nimport { Dropdown } from 'react-bootstrap';\nimport { Container } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport { Row } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nvar host = 'http://10.254.20.182';\n\nvar General =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(General, _React$Component);\n\n  function General(props) {\n    var _this;\n\n    _classCallCheck(this, General);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(General).call(this, props));\n    _this.state = {\n      date: new Date(),\n      currentProblem: 'Select the Problem!',\n      problemTypes: [],\n      problemFieldsNames: [],\n      problemFieldsContent: [{\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }, {\n        val: ''\n      }],\n      currentProduct: 'Select the Product!',\n      productTypes: [],\n      caseID: '',\n      name: '',\n      customerName: '',\n      description: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDate = _this.handleDate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDrop = _this.handleDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleProduct = _this.handleProduct.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleFieldContent = _this.handleFieldContent.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(General, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState(_defineProperty({}, [event.target.name], event.target.value));\n    }\n  }, {\n    key: \"handleFieldContent\",\n    value: function handleFieldContent(event) {\n      var newfields = this.state.problemFieldsContent.slice(); //copy the array\n\n      console.log(\"print index and value passed form event\");\n      console.log(event.target.placeholder);\n      console.log(newfields);\n\n      switch (event.target.placeholder) {\n        case '0':\n          newfields[0] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        case '1':\n          newfields[1] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        case '2':\n          newfields[2] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        case '3':\n          newfields[3] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        case '4':\n          newfields[4] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        case '5':\n          newfields[5] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        case '6':\n          newfields[6] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        case '7':\n          newfields[7] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        case '8':\n          newfields[8] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        case '9':\n          newfields[9] = {\n            val: event.target.value //execute the manipulations\n\n          };\n          this.setState({\n            problemFieldsContent: newfields\n          }); //set the new state\n\n          break;\n\n        default:\n          alert(\"Unexpected value for problem sub fields entry\");\n      }\n    }\n  }, {\n    key: \"handleDate\",\n    value: function handleDate(inputDate) {\n      this.setState({\n        date: inputDate\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.assignProductTypes();\n      this.assignProblemTypes();\n    }\n  }, {\n    key: \"assignProductTypes\",\n    value: function assignProductTypes() {\n      var _this2 = this;\n\n      fetch(\"http://\".concat(host, \":4000/products\")).then(function (response) {\n        return response.json();\n      }).then(function (_ref) {\n        var data = _ref.data;\n\n        _this2.setState({\n          productTypes: data\n        });\n\n        console.log(\"products selectedddddddddddddddddd\");\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"assignProblemTypes\",\n    value: function assignProblemTypes() {\n      var _this3 = this;\n\n      fetch(\"http://\".concat(host, \":4000/problems\")).then(function (response) {\n        return response.json();\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this3.setState({\n          problemTypes: data\n        });\n\n        console.log(\"problems selectedddddddddddddddddd\");\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"handleDrop\",\n    value: function handleDrop(event) {\n      var _this4 = this;\n\n      console.log(\"enter handledrop\");\n      var prom = new Promise(function (resolve, reject) {\n        var passing = event.target.value;\n        console.log(passing);\n\n        if (!_this4.state.currentProblem == '') {\n          resolve(passing);\n        } else {\n          reject('Data didnt change');\n        }\n      });\n      prom.then(function (result) {\n        _this4.setState({\n          currentProblem: result\n        });\n      }).then(function () {\n        _this4.setCurrent();\n      }).then(function () {}).catch(function (result) {\n        console.log(result);\n      });\n    }\n  }, {\n    key: \"setCurrent\",\n    value: function setCurrent() {\n      var _this5 = this;\n\n      fetch(\"http://\".concat(host, \":4000/problemfields?pname=\").concat(this.state.currentProblem)).then(function (response) {\n        return response.json();\n      }).then(function (_ref3) {\n        var data = _ref3.data;\n        var enames = [\"pname\", \"field1\", \"field2\", \"field3\", \"field4\", \"field5\", \"field6\", \"field7\", \"field8\", \"field9\"];\n        var fields = [];\n        var job = data[0];\n\n        for (var i = 1; i < enames.length; i++) {\n          if (job[enames[i]] !== null) {\n            fields[i - 1] = job[enames[i]];\n          }\n        }\n\n        _this5.setState({\n          problemFieldsNames: fields\n        });\n      }).catch(function (err) {\n        return console.error();\n      });\n    }\n  }, {\n    key: \"handleProduct\",\n    value: function handleProduct(event) {\n      this.setState({\n        currentProduct: event.target.value\n      });\n    } //////////////////////////////////////////Insert to database - save report\n\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      e.preventDefault(); ////////////////////// cleared form data ///////////////////////////////\n\n      var nexts = {\n        caseID: '',\n        name: '',\n        customerName: '',\n        description: '',\n        date: new Date()\n      };\n      var copiedContents = this.state.problemFieldsContent;\n      var result = copiedContents.map(function (f) {\n        return {\n          val: ''\n        };\n      }); /////////////////////////////////////////////////////////////////////////////////\n\n      if (e.target.name === 'save') {\n        if (this.state.description === '' || this.state.caseID === '' || this.state.customerName === '' || this.state.currentProduct === 'Select the Product!' || this.state.currentProblem === 'Select the Problem!') {\n          alert(\"please check the input values \");\n        } else {\n          alert(\"General Info inserted\");\n\n          var axios = require('axios');\n\n          axios.post(\"http://\".concat(host, \":4000/generalinfo/add?startdate=\").concat(this.formatDate(), \"&caseid=\").concat(this.state.caseID, \"\\n        &gpsproduct=\").concat(this.state.currentProduct, \"&fromcompletedby=\").concat(this.state.name, \"&customername=\").concat(this.state.customerName, \"\\n        &pname=\").concat(this.state.currentProblem), {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            method: 'POST',\n            data: {\n              description: this.state.description\n            }\n          });\n          axios.post(\"http://\".concat(host, \":4000/fieldcontents/add?caseid=\").concat(this.state.caseID, \"&pname=\").concat(this.state.currentProblem, \"&field1=\").concat(this.state.problemFieldsContent[0].val, \"&field2=\").concat(this.state.problemFieldsContent[1].val, \"&field3=\").concat(this.state.problemFieldsContent[2].val, \"\\n      &field4=\").concat(this.state.problemFieldsContent[3].val, \"&field5=\").concat(this.state.problemFieldsContent[4].val, \"&field6=\").concat(this.state.problemFieldsContent[5].val, \"&field7=\").concat(this.state.problemFieldsContent[6].val, \"&field8=\").concat(this.state.problemFieldsContent[7].val, \"&field9=\").concat(this.state.problemFieldsContent[8].val), {\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            method: 'POST',\n            data: {\n              caseid: this.state.caseID,\n              pname: this.state.currentProblem,\n              field1: this.state.problemFieldsContent[0],\n              field2: this.state.problemFieldsContent[1],\n              field3: this.state.problemFieldsContent[2],\n              field4: this.state.problemFieldsContent[3],\n              field5: this.state.problemFieldsContent[4],\n              field6: this.state.problemFieldsContent[5],\n              field7: this.state.problemFieldsContent[6],\n              field8: this.state.problemFieldsContent[7],\n              field9: this.state.problemFieldsContent[8]\n            }\n          }).then(function (response) {\n            // handle success\n            console.log(response.data);\n            alert(\"Report Saved!\");\n            console.log(\"description is printibng\");\n          }).catch(function (error) {\n            // handle error\n            console.log(error);\n          }).then(function () {//  this.setState();\n          });\n        }\n\n        this.setState(nexts);\n        this.setState({\n          problemFieldsContent: result\n        });\n        console.log(result);\n      }\n    }\n  }, {\n    key: \"formatDate\",\n    value: function formatDate() {\n      var result = '';\n      result = result.concat(this.state.date.getFullYear()).concat('-');\n      result = result.concat(this.state.date.getMonth() + 1).concat('-');\n      result = result.concat(this.state.date.getDate());\n      return result;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"header\",\n        bg: \"blue\",\n        style: {\n          fontSize: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }, \"Please Select the date!\"), React.createElement(DatePicker, {\n        size: \"lg\",\n        dateFormat: \"yyyy/MM/dd\",\n        type: \"text\",\n        selected: this.state.date,\n        onChange: this.handleDate,\n        withPortal: true,\n        showMonthDropdown: true,\n        strictParsing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Case ID: \"), React.createElement(\"input\", {\n        name: \"caseID\",\n        className: \"u-full-width\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.caseID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: this.state.currentProduct,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(ProductMenu, {\n        func: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, \"Reporter: \"), React.createElement(\"input\", {\n        name: \"name\",\n        className: \"u-full-width\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Customer Name : \"), React.createElement(\"input\", {\n        name: \"customerName\",\n        className: \"u-full-width\",\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.customerName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"six columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"  Description: \"), React.createElement(\"textarea\", {\n        style: {\n          height: '150px',\n          width: '400px',\n          overflowY: 'scroll',\n          overflowX: 'hidden'\n        },\n        name: \"description\",\n        className: \"u-full-width\",\n        type: \"textarea\",\n        onChange: this.handleChange,\n        value: this.state.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"dropdown-item-button\",\n        title: this.state.currentProblem,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }, React.createElement(ProblemMenu, {\n        func: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359\n        },\n        __self: this\n      })), React.createElement(ProblemView, {\n        func: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, \"view geldi \")))), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClick,\n        name: \"save\",\n        variant: \"danger\",\n        size: \"lg\",\n        active: true,\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, \"Save Report\")));\n    }\n  }]);\n\n  return General;\n}(React.Component);\n\nexport default General;\n\nfunction ProblemView(props) {\n  console.log(\"problemview a girildi\");\n  console.log(props.func.state.problemFieldsNames.length);\n  var elements = [];\n\n  for (var i = 0; i < props.func.state.problemFieldsNames.length; i++) {\n    elements.push(React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, props.func.state.problemFieldsNames[i], \": \"), React.createElement(\"input\", {\n      name: props.func.state.problemFieldsNames[i],\n      placeholder: i,\n      className: \"u-full-width\",\n      type: \"text\",\n      onChange: props.func.handleFieldContent,\n      value: props.func.state.problemFieldsContent[i].val,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    })));\n  }\n\n  return elements;\n} /// Drop down items for product types \n\n\nfunction ProductMenu(props) {\n  var elements = [];\n\n  for (var i = 0; i < props.func.state.productTypes.length; i++) {\n    console.log(props.func.state.productTypes.length);\n    console.log(props.func.state.productTypes[i].productname);\n    elements.push(React.createElement(Dropdown.Item, {\n      key: i,\n      as: \"button\",\n      name: \"productTypes\",\n      onClick: props.func.handleProduct,\n      value: props.func.state.productTypes[i].productname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    }, \" \", props.func.state.productTypes[i].productname, \" \"));\n  }\n\n  return elements;\n} /// Drop down items for problem types \n\n\nfunction ProblemMenu(props) {\n  var elements = [];\n\n  for (var i = 0; i < props.func.state.problemTypes.length; i++) {\n    elements.push(React.createElement(Dropdown.Item, {\n      key: i,\n      as: \"button\",\n      name: \"problemTypes\",\n      onClick: props.func.handleDrop,\n      value: props.func.state.problemTypes[i].problemname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \" \", props.func.state.problemTypes[i].problemname, \" \"));\n  }\n\n  return elements;\n}","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\General.js"],"names":["React","ProblemPage","Button","DropdownButton","Navbar","Form","FormControl","Nav","Dropdown","Container","Col","Row","DatePicker","host","General","props","state","date","Date","currentProblem","problemTypes","problemFieldsNames","problemFieldsContent","val","currentProduct","productTypes","caseID","name","customerName","description","handleChange","bind","handleClick","handleDate","handleDrop","handleProduct","handleFieldContent","event","setState","target","value","newfields","slice","console","log","placeholder","alert","inputDate","assignProductTypes","assignProblemTypes","fetch","then","response","json","data","catch","err","error","prom","Promise","resolve","reject","passing","result","setCurrent","enames","fields","job","i","length","e","preventDefault","nexts","copiedContents","map","f","axios","require","post","formatDate","headers","method","caseid","pname","field1","field2","field3","field4","field5","field6","field7","field8","field9","concat","getFullYear","getMonth","getDate","fontSize","height","width","overflowY","overflowX","Component","ProblemView","func","elements","push","ProductMenu","productname","ProblemMenu","problemname"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport ProblemPage from './ProblemPage.js'\r\n//import './styles/custom.css';\r\n//import './styles/normalize.css';\r\nimport './styles/general.css';\r\nimport './styles/skeleton.css';\r\nimport { Button, DropdownButton } from 'react-bootstrap';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Form } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Col } from 'react-bootstrap';\r\nimport { Row } from 'react-bootstrap';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nvar host = 'http://10.254.20.182';\r\nclass General extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      date: new Date(),\r\n\r\n      currentProblem: 'Select the Problem!',\r\n      problemTypes: [\r\n\r\n      ],\r\n      problemFieldsNames: [\r\n\r\n      ],\r\n      problemFieldsContent: [\r\n        { val: '' },\r\n        { val: '' },\r\n        { val: '' },\r\n        { val: '' },\r\n        { val: '' },\r\n        { val: '' },\r\n        { val: '' },\r\n        { val: '' },\r\n        { val: '' },\r\n      ],\r\n      currentProduct: 'Select the Product!',\r\n      productTypes: [\r\n      ],\r\n      caseID: '',\r\n      name: '',\r\n      customerName: '',\r\n      description: '',\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleDate = this.handleDate.bind(this);\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.handleProduct = this.handleProduct.bind(this);\r\n    this.handleFieldContent = this.handleFieldContent.bind(this);\r\n\r\n\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ [[event.target.name]]: event.target.value });\r\n  }\r\n  handleFieldContent(event) {\r\n    var newfields = this.state.problemFieldsContent.slice() //copy the array\r\n    console.log(\"print index and value passed form event\");\r\n    console.log(event.target.placeholder);\r\n    console.log(newfields);\r\n    switch (event.target.placeholder) {\r\n      case '0':\r\n\r\n        newfields[0] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      case '1':\r\n        newfields[1] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      case '2':\r\n        newfields[2] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      case '3':\r\n        newfields[3] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      case '4':\r\n        newfields[4] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      case '5':\r\n        newfields[5] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      case '6':\r\n        newfields[6] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      case '7':\r\n        newfields[7] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      case '8':\r\n        newfields[8] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      case '9':\r\n        newfields[9] = { val: event.target.value } //execute the manipulations\r\n        this.setState({ problemFieldsContent: newfields }) //set the new state\r\n        break;\r\n      default:\r\n        alert(\"Unexpected value for problem sub fields entry\");\r\n    }\r\n  }\r\n  handleDate(inputDate) {\r\n    this.setState({ date: inputDate });\r\n  }\r\n  componentWillMount() {\r\n    this.assignProductTypes();\r\n    this.assignProblemTypes();\r\n  }\r\n  assignProductTypes() {\r\n    fetch(`http://${host}:4000/products`)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        this.setState({ productTypes: data })\r\n        console.log(\"products selectedddddddddddddddddd\");\r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n  }\r\n  assignProblemTypes() {\r\n    fetch(`http://${host}:4000/problems`)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        this.setState({ problemTypes: data })\r\n        console.log(\"problems selectedddddddddddddddddd\");\r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n  }\r\n\r\n  handleDrop(event) {\r\n    console.log(\"enter handledrop\");\r\n\r\n    let prom = new Promise((resolve, reject) => {\r\n      let passing = event.target.value;\r\n      console.log(passing);\r\n      if (!this.state.currentProblem == '') {\r\n        resolve(passing);\r\n      }\r\n      else {\r\n        reject('Data didnt change');\r\n      }\r\n\r\n    })\r\n    prom.then((result) => {\r\n      this.setState({ currentProblem: result });\r\n    })\r\n      .then(() => {\r\n        this.setCurrent();\r\n      })\r\n      .then(() => {\r\n\r\n      })\r\n      .catch((result) => {\r\n        console.log(result)\r\n      })\r\n\r\n\r\n  }\r\n  setCurrent() {\r\n    fetch(`http://${host}:4000/problemfields?pname=${this.state.currentProblem}`)\r\n      .then(response => response.json())\r\n      .then(({ data }) => {\r\n        var enames = [\"pname\", \"field1\", \"field2\", \"field3\", \"field4\", \"field5\", \"field6\", \"field7\", \"field8\", \"field9\"];\r\n        var fields = [];\r\n        var job = data[0];\r\n        for (var i = 1; i < enames.length; i++) {\r\n\r\n          if (job[enames[i]] !== null) {\r\n            fields[i - 1] = job[enames[i]];\r\n          }\r\n        }\r\n        this.setState({ problemFieldsNames: fields });\r\n      })\r\n      .catch(err => console.error()\r\n      )\r\n  }\r\n\r\n  handleProduct(event) {\r\n    this.setState({ currentProduct: event.target.value })\r\n  }\r\n  //////////////////////////////////////////Insert to database - save report\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    ////////////////////// cleared form data ///////////////////////////////\r\n    var nexts = { caseID: '', name: '', customerName: '', description: '', date: new Date() };\r\n    var copiedContents = this.state.problemFieldsContent;\r\n    var result = copiedContents.map(f => {\r\n      return { val: '' };\r\n\r\n    });\r\n\r\n    /////////////////////////////////////////////////////////////////////////////////\r\n    if (e.target.name === 'save') {\r\n      if (this.state.description === '' || this.state.caseID === '' || this.state.customerName === '' ||\r\n        this.state.currentProduct === 'Select the Product!' || this.state.currentProblem === 'Select the Problem!') {\r\n        alert(\"please check the input values \");\r\n      }\r\n      else {\r\n        alert(\"General Info inserted\");\r\n        const axios = require('axios');\r\n        axios.post(`http://${host}:4000/generalinfo/add?startdate=${this.formatDate()}&caseid=${this.state.caseID}\r\n        &gpsproduct=${this.state.currentProduct}&fromcompletedby=${this.state.name}&customername=${this.state.customerName}\r\n        &pname=${this.state.currentProblem}`, {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            method: 'POST',\r\n            data: {\r\n              description: this.state.description\r\n            }\r\n          })\r\n        axios.post(`http://${host}:4000/fieldcontents/add?caseid=${this.state.caseID}&pname=${this.state.currentProblem}&field1=${this.state.problemFieldsContent[0].val}&field2=${this.state.problemFieldsContent[1].val}&field3=${this.state.problemFieldsContent[2].val}\r\n      &field4=${this.state.problemFieldsContent[3].val}&field5=${this.state.problemFieldsContent[4].val}&field6=${this.state.problemFieldsContent[5].val}&field7=${this.state.problemFieldsContent[6].val}&field8=${this.state.problemFieldsContent[7].val}&field9=${this.state.problemFieldsContent[8].val}`, {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            method: 'POST',\r\n            data: {\r\n              caseid: this.state.caseID,\r\n              pname: this.state.currentProblem,\r\n              field1: this.state.problemFieldsContent[0],\r\n              field2: this.state.problemFieldsContent[1],\r\n              field3: this.state.problemFieldsContent[2],\r\n              field4: this.state.problemFieldsContent[3],\r\n              field5: this.state.problemFieldsContent[4],\r\n              field6: this.state.problemFieldsContent[5],\r\n              field7: this.state.problemFieldsContent[6],\r\n              field8: this.state.problemFieldsContent[7],\r\n              field9: this.state.problemFieldsContent[8]\r\n            }\r\n          })\r\n          .then(function (response) {\r\n            // handle success\r\n            console.log(response.data);\r\n            alert(\"Report Saved!\");\r\n            console.log(\"description is printibng\");\r\n\r\n          })\r\n          .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n          })\r\n          .then(function () {\r\n            //  this.setState();\r\n\r\n\r\n\r\n          });\r\n      }\r\n\r\n\r\n      this.setState(nexts);\r\n      this.setState({ problemFieldsContent: result });\r\n      console.log(result);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  formatDate() {\r\n    var result = '';\r\n    result = result.concat(this.state.date.getFullYear()).concat('-');\r\n\r\n    result = result.concat(this.state.date.getMonth() + 1).concat('-');\r\n    result = result.concat(this.state.date.getDate());\r\n    return result;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div >\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <header className='header' bg=\"blue\" style={{ fontSize: 20 }}>\r\n                Please Select the date!</header>\r\n              <DatePicker size=\"lg\" dateFormat=\"yyyy/MM/dd\" type=\"text\"\r\n                selected={this.state.date} onChange={this.handleDate} withPortal showMonthDropdown strictParsing></DatePicker>\r\n              <hr></hr>\r\n              <div className='row'  >\r\n                <div className='six columns'>\r\n                  <label>Case ID: </label>\r\n                  <input name='caseID'\r\n                    className='u-full-width'\r\n\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.caseID}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <hr></hr>\r\n              <Row>\r\n\r\n                <DropdownButton id=\"dropdown-item-button\" title={this.state.currentProduct} size=\"lg\">\r\n                  {<ProductMenu func={this} />}\r\n                </DropdownButton>\r\n              </Row>\r\n              <hr></hr>\r\n              <div className='row'>\r\n                <div className='six columns'>\r\n                  <label>Reporter: </label>\r\n                  <input name='name'\r\n                    className='u-full-width'\r\n\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.name}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='row'>\r\n                <div className='six columns'>\r\n                  <label>Customer Name : </label>\r\n                  <input name='customerName'\r\n                    className='u-full-width'\r\n\r\n                    type='text'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.customerName}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className='row'>\r\n                <div className='six columns'>\r\n                  <label>  Description: </label>\r\n                  <textarea style={{ height: '150px', width: '400px',overflowY: 'scroll', overflowX: 'hidden'}} name='description'\r\n                    className='u-full-width'\r\n\r\n                    type='textarea'\r\n                    onChange={this.handleChange}\r\n                    value={this.state.description}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n            </Col>\r\n            <Col >\r\n              <DropdownButton id=\"dropdown-item-button\" title={this.state.currentProblem} size=\"lg\">\r\n                {<ProblemMenu func={this} />}\r\n              </DropdownButton>\r\n              {<ProblemView func={this}>view geldi </ProblemView>}\r\n            </Col>\r\n\r\n          </Row>\r\n        </Container>\r\n        <Container>\r\n          <Button onClick={this.handleClick} name='save' variant=\"danger\" size=\"lg\" active block>\r\n            Save Report\r\n        </Button>\r\n        </Container>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default General;\r\n\r\nfunction ProblemView(props) {\r\n  console.log(\"problemview a girildi\");\r\n  console.log(props.func.state.problemFieldsNames.length);\r\n  var elements = [];\r\n  for (var i = 0; i < props.func.state.problemFieldsNames.length; i++) {\r\n    elements.push(\r\n      <div key={i}  >\r\n        <hr></hr>\r\n        <label>{props.func.state.problemFieldsNames[i]}: </label>\r\n        <input name={props.func.state.problemFieldsNames[i]\r\n        }\r\n          placeholder={i}\r\n          className='u-full-width'\r\n\r\n          type='text'\r\n          onChange={props.func.handleFieldContent}\r\n          value={props.func.state.problemFieldsContent[i].val}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n  return elements;\r\n\r\n}\r\n\r\n/// Drop down items for product types \r\nfunction ProductMenu(props) {\r\n  var elements = [];\r\n  for (var i = 0; i < props.func.state.productTypes.length; i++) {\r\n    console.log(props.func.state.productTypes.length);\r\n    console.log(props.func.state.productTypes[i].productname);\r\n    elements.push(\r\n      <Dropdown.Item key={i} as=\"button\" name='productTypes' onClick={props.func.handleProduct}\r\n        value={props.func.state.productTypes[i].productname}> {props.func.state.productTypes[i].productname} </Dropdown.Item>\r\n    )\r\n  }\r\n  return elements;\r\n}\r\n/// Drop down items for problem types \r\nfunction ProblemMenu(props) {\r\n  var elements = [];\r\n  for (var i = 0; i < props.func.state.problemTypes.length; i++) {\r\n    elements.push(\r\n      <Dropdown.Item key={i} as=\"button\" name='problemTypes' onClick={props.func.handleDrop}\r\n        value={props.func.state.problemTypes[i].problemname}> {props.func.state.problemTypes[i].problemname} </Dropdown.Item>\r\n    )\r\n\r\n  }\r\n  return elements;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}