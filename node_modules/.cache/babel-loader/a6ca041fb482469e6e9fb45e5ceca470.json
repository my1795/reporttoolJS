{"ast":null,"code":"\"use strict\";\n\nvar execa = require(\"execa\");\n\nvar ipRegex = require(\"ip-regex\");\n\nvar gwArgs = \"path Win32_NetworkAdapterConfiguration where IPEnabled=true get DefaultIPGateway,Index /format:table\".split(\" \");\nvar ifArgs = \"path Win32_NetworkAdapter get Index,NetConnectionID /format:table\".split(\" \");\n\nvar parse = function parse(gwTable, ifTable, family) {\n  var gateway, gwid, result;\n  (gwTable || \"\").trim().split(\"\\n\").splice(1).some(function (line) {\n    var results = line.trim().split(/} +/) || [];\n    var gw = results[0];\n    var id = results[1];\n    gateway = (ipRegex[family]().exec((gw || \"\").trim()) || [])[0];\n\n    if (gateway) {\n      gwid = id;\n      return true;\n    }\n  });\n  (ifTable || \"\").trim().split(\"\\n\").splice(1).some(function (line) {\n    var i = line.indexOf(\" \");\n    var id = line.substr(0, i).trim();\n    var name = line.substr(i + 1).trim();\n\n    if (id === gwid) {\n      result = {\n        gateway: gateway,\n        interface: name ? name : null\n      };\n      return true;\n    }\n  });\n\n  if (!result) {\n    throw new Error(\"Unable to determine default gateway\");\n  }\n\n  return result;\n};\n\nvar spawnOpts = {\n  windowsHide: true\n};\n\nvar promise = function promise(family) {\n  return Promise.all([execa.stdout(\"wmic\", gwArgs, spawnOpts), execa.stdout(\"wmic\", ifArgs, spawnOpts)]).then(function (results) {\n    var gwTable = results[0];\n    var ifTable = results[1];\n    return parse(gwTable, ifTable, family);\n  });\n};\n\nvar sync = function sync(family) {\n  var gwTable = execa.sync(\"wmic\", gwArgs, spawnOpts).stdout;\n  var ifTable = execa.sync(\"wmic\", ifArgs, spawnOpts).stdout;\n  return parse(gwTable, ifTable, family);\n};\n\nmodule.exports.v4 = function () {\n  return promise(\"v4\");\n};\n\nmodule.exports.v6 = function () {\n  return promise(\"v6\");\n};\n\nmodule.exports.v4.sync = function () {\n  return sync(\"v4\");\n};\n\nmodule.exports.v6.sync = function () {\n  return sync(\"v6\");\n};","map":null,"metadata":{},"sourceType":"script"}