{"ast":null,"code":"import _classCallCheck from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\Users\\\\musyil\\\\reportengine\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\Users\\\\musyil\\\\reportengine\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { ButtonToolbar } from 'react-bootstrap';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Form, Row, Col } from 'react-bootstrap';\nimport { FormGroup } from 'react-bootstrap';\nimport { FormLabel } from 'react-bootstrap';\nimport { FormControl } from 'react-bootstrap';\nimport { Nav } from 'react-bootstrap';\nimport { NavDropdown } from 'react-bootstrap';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n    _this.state = {\n      currentPage: React.createElement(ControlPanel, {\n        func: _assertThisInitialized(_assertThisInitialized(_this)),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }),\n      userName: '',\n      password: '',\n      newProduct: '',\n      newProblem: '',\n      problemfields: ''\n    };\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleControl = _this.handleControl.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleProblemInsert = _this.handleProblemInsert.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"handleClick\",\n    value: function handleClick(event) {}\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      if (event.target.type == \"email\") {\n        this.setState({\n          userName: event.target.value\n        });\n      }\n\n      if (event.target.placeholder == \"Enter a product name\") {\n        this.setState({\n          newProduct: event.target.value\n        });\n      }\n\n      if (event.target.placeholder == \"Enter a problem type\") {\n        this.setState({\n          newProblem: event.target.value\n        });\n      }\n\n      if (event.target.placeholder == \"Enter subfields\") {\n        this.setState({\n          problemfields: event.target.value\n        });\n      }\n\n      if (event.target.type == \"password\") {\n        this.setState({\n          password: event.target.value\n        });\n      }\n    }\n  }, {\n    key: \"handleControl\",\n    value: function handleControl(event) {\n      console.log(this.state.newProduct);\n      this.addProduct(this.state);\n    }\n  }, {\n    key: \"addProduct\",\n    value: function addProduct(product) {\n      if (product.newProduct === '') {\n        alert(\"please check the input value\");\n      } else {\n        alert(\"new Product inserted\");\n        console.log(product.newProduct + \"addProduct kısmı \");\n\n        var axios = require('axios');\n\n        axios.post(\"http://localhost:4000/products/add?productname=\".concat(product.newProduct), {\n          headers: {\n            \"Content-Type\": \"text/plain\"\n          },\n          method: 'POST',\n          data: product.newProduct\n        }).then(function (response) {\n          // handle success\n          console.log(response.data);\n        }).catch(function (error) {\n          // handle error\n          console.log(error);\n        }).then(function () {// always executed\n        });\n      }\n    }\n  }, {\n    key: \"handleProblemInsert\",\n    value: function handleProblemInsert(event) {\n      console.log(this.state.newProblem);\n      this.addProblem(this.state);\n      this.addProblemFields(this.state);\n    }\n  }, {\n    key: \"addProblem\",\n    value: function addProblem(problem) {\n      console.log(problem.newProblem + problem.problemfields + \"problem\");\n\n      var axios = require('axios');\n\n      if (problem.newProblem === '' || problem.problemfields === '') {\n        alert(\"missing fields!\");\n      } else {\n        axios.post(\"http://localhost:4000/problems/add?problemname=\".concat(problem.newProblem), {\n          headers: {\n            \"Content-Type\": \"text/plain\"\n          },\n          method: 'POST',\n          data: {\n            problemname: problem.newProblem,\n            problemfields: problem.problemfields\n          }\n        }).then(function (response) {\n          // handle success\n          console.log(response.data);\n        }).catch(function (error) {\n          // handle error\n          console.log(error);\n        }).then(function () {// always executed\n        });\n        alert(\"new Problem inserted\");\n      }\n    }\n  }, {\n    key: \"addProblemFields\",\n    value: function addProblemFields(problem) {\n      console.log(problem.problemfields + \"problem\");\n\n      var axios = require('axios');\n\n      if (problem.newProblem === '' || problem.problemfields === '') {\n        alert(\"missing fields!\");\n      } else {\n        axios.post(\"http://localhost:4000/problemfields/add?problemname=\".concat(problem.newProblem, \"&problemfields=\").concat(problem.problemfields), {\n          headers: {\n            \"Content-Type\": \"text/plain\"\n          },\n          method: 'POST',\n          data: {\n            problemfields: problem.problemfields\n          }\n        }).then(function (response) {\n          // handle success\n          console.log(response.data);\n        }).catch(function (error) {\n          // handle error\n          console.log(error);\n        }).then(function () {// always executed\n        });\n        alert(\"new Problem inserted\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.currentPage;\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nfunction LoginView(props) {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formGroupEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"User Name: \"), React.createElement(Form.Control, {\n    type: \"email\",\n    input: \"userName\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"formGroupPassword\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Password: \"), React.createElement(Form.Control, {\n    type: \"password\",\n    input: \"password\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }))), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: props.func.handleClick,\n    name: \"login\",\n    variant: \"danger\",\n    size: \"lg\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, \"Login!\")));\n}\n\nfunction ControlPanel(props) {\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    style: {\n      fontSize: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Product Name:  \"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter a product name\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: props.func.handleControl,\n    input: \"newProduct\",\n    variant: \"danger\",\n    size: \"lg\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, \"Insert New Product!\"), React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    style: {\n      fontSize: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \" Problem Type:  \"), React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter a problem type\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(Form.Label, {\n    style: {\n      fontSize: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, \" Problem SubFields: (Seperate subfields by comma-,- ie: sf1,sf2,sf3):  \"), React.createElement(Form.Control, {\n    placeholder: \"Enter subfields\",\n    onChange: props.func.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: props.func.handleProblemInsert,\n    variant: \"danger\",\n    size: \"lg\",\n    active: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Insert New Problem Type!\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["D:\\Users\\musyil\\reportengine\\src\\components\\Login.js"],"names":["React","Component","Container","Button","ButtonToolbar","Navbar","Form","Row","Col","FormGroup","FormLabel","FormControl","Nav","NavDropdown","Login","props","state","currentPage","userName","password","newProduct","newProblem","problemfields","handleClick","bind","handleChange","handleControl","handleProblemInsert","event","target","type","setState","value","placeholder","console","log","addProduct","product","alert","axios","require","post","headers","method","data","then","response","catch","error","addProblem","addProblemFields","problem","problemname","LoginView","func","ControlPanel","span","offset","fontSize"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAmBC,GAAnB,QAA8B,iBAA9B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,WAAT,QAA4B,iBAA5B;;IACMC,K;;;;;AACH,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAG,oBAAC,YAAD;AAAc,QAAA,IAAI,uDAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,UAAU,EAAC,EAJA;AAKXC,MAAAA,UAAU,EAAE,EALD;AAMXC,MAAAA,aAAa,EAAE;AANJ,KAAb;AAQD,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,uDAApB;AACA,UAAKE,aAAL,GAAqB,MAAKA,aAAL,CAAmBF,IAAnB,uDAArB;AACA,UAAKG,mBAAL,GAA2B,MAAKA,mBAAL,CAAyBH,IAAzB,uDAA3B;AAbiB;AAcjB;;;;gCACUI,K,EAAM,CAMjB;;;iCACYA,K,EAAM;AACf,UAAGA,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,OAAxB,EAAiC;AAC/B,aAAKC,QAAL,CAAc;AAACb,UAAAA,QAAQ,EAAEU,KAAK,CAACC,MAAN,CAAaG;AAAxB,SAAd;AAED;;AACD,UAAGJ,KAAK,CAACC,MAAN,CAAaI,WAAb,IAA4B,sBAA/B,EAAsD;AACpD,aAAKF,QAAL,CAAc;AAACX,UAAAA,UAAU,EAAEQ,KAAK,CAACC,MAAN,CAAaG;AAA1B,SAAd;AACD;;AACD,UAAGJ,KAAK,CAACC,MAAN,CAAaI,WAAb,IAA4B,sBAA/B,EAAsD;AACpD,aAAKF,QAAL,CAAc;AAACV,UAAAA,UAAU,EAAEO,KAAK,CAACC,MAAN,CAAaG;AAA1B,SAAd;AACD;;AACD,UAAGJ,KAAK,CAACC,MAAN,CAAaI,WAAb,IAA4B,iBAA/B,EAAiD;AAC/C,aAAKF,QAAL,CAAc;AAACT,UAAAA,aAAa,EAAEM,KAAK,CAACC,MAAN,CAAaG;AAA7B,SAAd;AACD;;AACH,UAAGJ,KAAK,CAACC,MAAN,CAAaC,IAAb,IAAqB,UAAxB,EAAmC;AAC/B,aAAKC,QAAL,CAAc;AAACZ,UAAAA,QAAQ,EAAES,KAAK,CAACC,MAAN,CAAaG;AAAxB,SAAd;AACH;AACF;;;kCACaJ,K,EAAM;AAEhBM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWI,UAAvB;AACA,WAAKgB,UAAL,CAAgB,KAAKpB,KAArB;AACH;;;+BACUqB,O,EAAS;AAClB,UAAGA,OAAO,CAACjB,UAAR,KAAuB,EAA1B,EAA6B;AAC3BkB,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACD,OAFD,MAGI;AACFA,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACjB,UAAR,GAAqB,mBAAjC;;AACA,YAAMmB,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACAD,QAAAA,KAAK,CAACE,IAAN,0DAA6DJ,OAAO,CAACjB,UAArE,GAAkF;AAChFsB,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WADuE;AAEhFC,UAAAA,MAAM,EAAE,MAFwE;AAGhFC,UAAAA,IAAI,EAAEP,OAAO,CAACjB;AAHkE,SAAlF,EAKHyB,IALG,CAKE,UAAUC,QAAV,EAAoB;AACxB;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACF,IAArB;AACD,SARG,EASHG,KATG,CASG,UAAUC,KAAV,EAAiB;AACtB;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD,SAZG,EAaHH,IAbG,CAaE,YAAY,CAChB;AACD,SAfG;AAgBD;AAEJ;;;wCACqBjB,K,EAAM;AACxBM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWK,UAAvB;AACA,WAAK4B,UAAL,CAAgB,KAAKjC,KAArB;AACA,WAAKkC,gBAAL,CAAsB,KAAKlC,KAA3B;AACH;;;+BACYmC,O,EAAS;AAClBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,OAAO,CAAC9B,UAAR,GAAqB8B,OAAO,CAAC7B,aAA7B,GAA4C,SAAxD;;AACA,UAAMiB,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,UAAGW,OAAO,CAAC9B,UAAR,KAAuB,EAAvB,IAA6B8B,OAAO,CAAC7B,aAAR,KAA0B,EAA1D,EAA6D;AAC3DgB,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACD,OAFD,MAGK;AACHC,QAAAA,KAAK,CAACE,IAAN,0DAA6DU,OAAO,CAAC9B,UAArE,GAAkF;AAChFqB,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WADuE;AAEhFC,UAAAA,MAAM,EAAE,MAFwE;AAGhFC,UAAAA,IAAI,EAAC;AACHQ,YAAAA,WAAW,EAAGD,OAAO,CAAC9B,UADnB;AAEHC,YAAAA,aAAa,EAAE6B,OAAO,CAAC7B;AAFpB;AAH2E,SAAlF,EAQHuB,IARG,CAQE,UAAUC,QAAV,EAAoB;AACxB;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACF,IAArB;AACD,SAXG,EAYHG,KAZG,CAYG,UAAUC,KAAV,EAAiB;AACtB;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD,SAfG,EAgBHH,IAhBG,CAgBE,YAAY,CAChB;AACD,SAlBG;AAmBJP,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACG;AAEJ;;;qCACgBa,O,EAAS;AACxBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,OAAO,CAAC7B,aAAR,GAAuB,SAAnC;;AACA,UAAMiB,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,UAAGW,OAAO,CAAC9B,UAAR,KAAuB,EAAvB,IAA6B8B,OAAO,CAAC7B,aAAR,KAA0B,EAA1D,EAA6D;AAC3DgB,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACD,OAFD,MAGK;AACHC,QAAAA,KAAK,CAACE,IAAN,+DAAkEU,OAAO,CAAC9B,UAA1E,4BAAsG8B,OAAO,CAAC7B,aAA9G,GAA8H;AAC5HoB,UAAAA,OAAO,EAAE;AAAC,4BAAgB;AAAjB,WADmH;AAE5HC,UAAAA,MAAM,EAAE,MAFoH;AAG5HC,UAAAA,IAAI,EAAC;AACHtB,YAAAA,aAAa,EAAE6B,OAAO,CAAC7B;AADpB;AAHuH,SAA9H,EAOHuB,IAPG,CAOE,UAAUC,QAAV,EAAoB;AACxB;AACAZ,UAAAA,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACF,IAArB;AACD,SAVG,EAWHG,KAXG,CAWG,UAAUC,KAAV,EAAiB;AACtB;AACAd,UAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACD,SAdG,EAeHH,IAfG,CAeE,YAAY,CAChB;AACD,SAjBG;AAkBJP,QAAAA,KAAK,CAAC,sBAAD,CAAL;AACG;AAEF;;;6BAGU;AACP,aAEE,KAAKtB,KAAL,CAAWC,WAFb;AAKD;;;;EAjJiBhB,S;;AAmJpB,SAASoD,SAAT,CAAmBtC,KAAnB,EAAyB;AACrB,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,KAAK,EAAG,UAAnC;AAA8C,IAAA,QAAQ,EAAIA,KAAK,CAACuC,IAAN,CAAW7B,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADI,EAKJ,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,KAAK,EAAG,UAAtC;AAAiD,IAAA,QAAQ,EAAKV,KAAK,CAACuC,IAAN,CAAW7B,YAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALI,CADJ,EAWF,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,MAAD;AAAS,IAAA,OAAO,EAAEV,KAAK,CAACuC,IAAN,CAAW/B,WAA7B;AAA0C,IAAA,IAAI,EAAC,OAA/C;AAAuD,IAAA,OAAO,EAAC,QAA/D;AAAwE,IAAA,IAAI,EAAC,IAA7E;AAAkF,IAAA,MAAM,MAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CAXE,CADJ;AAqBH;;AACD,SAASgC,YAAT,CAAsBxC,KAAtB,EAA4B;AACxB,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEyC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEJ,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAG;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAG,MAArB;AAA4B,IAAA,WAAW,EAAC,sBAAxC;AAA+D,IAAA,QAAQ,EAAI3C,KAAK,CAACuC,IAAN,CAAW7B,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFI,EASJ,oBAAC,MAAD;AAAS,IAAA,OAAO,EAAEV,KAAK,CAACuC,IAAN,CAAW5B,aAA7B;AAA4C,IAAA,KAAK,EAAE,YAAnD;AAAgE,IAAA,OAAO,EAAC,QAAxE;AAAiF,IAAA,IAAI,EAAC,IAAtF;AAA2F,IAAA,MAAM,MAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATI,EAaH,oBAAC,IAAD,CAAM,KAAN;AAAa,IAAA,SAAS,EAAC,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAG;AAACgC,MAAAA,QAAQ,EAAE;AAAX,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,EAEC,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,IAAI,EAAG,MAArB;AAA4B,IAAA,WAAW,EAAC,sBAAxC;AAA+D,IAAA,QAAQ,EAAI3C,KAAK,CAACuC,IAAN,CAAW7B,YAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAKC,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,KAAK,EAAG;AAACiC,MAAAA,QAAQ,EAAE;AAAX,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EALD,EAMC,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,WAAW,EAAC,iBAA1B;AAA6C,IAAA,QAAQ,EAAI3C,KAAK,CAACuC,IAAN,CAAW7B,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAOC,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CAbG,EAuBJ,oBAAC,MAAD;AAAS,IAAA,OAAO,EAAEV,KAAK,CAACuC,IAAN,CAAW3B,mBAA7B;AAAkD,IAAA,OAAO,EAAC,QAA1D;AAAmE,IAAA,IAAI,EAAC,IAAxE;AAA6E,IAAA,MAAM,MAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAvBI,CADF,CADF,CADJ;AAoCH;;AAED,eAAeb,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {Container} from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { ButtonToolbar } from 'react-bootstrap';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Form, Row,Col } from 'react-bootstrap';\r\nimport { FormGroup } from 'react-bootstrap';\r\nimport { FormLabel } from 'react-bootstrap';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { NavDropdown } from 'react-bootstrap';\r\nclass Login extends Component {\r\n   constructor(props){\r\n     super(props)\r\n     this.state = {\r\n       currentPage : <ControlPanel func = {this}/>,\r\n       userName: '',\r\n       password: '',\r\n       newProduct:'',\r\n       newProblem: '',\r\n       problemfields: ''\r\n     }\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleControl = this.handleControl.bind(this);\r\n    this.handleProblemInsert = this.handleProblemInsert.bind(this);\r\n   }\r\n  handleClick(event){\r\n \r\n\r\n       \r\n    \r\n   \r\n  }\r\n  handleChange(event){\r\n      if(event.target.type == \"email\" ){\r\n        this.setState({userName: event.target.value });\r\n        \r\n      }\r\n      if(event.target.placeholder == \"Enter a product name\"){\r\n        this.setState({newProduct: event.target.value});\r\n      }\r\n      if(event.target.placeholder == \"Enter a problem type\"){\r\n        this.setState({newProblem: event.target.value});\r\n      }\r\n      if(event.target.placeholder == \"Enter subfields\"){\r\n        this.setState({problemfields: event.target.value});\r\n      }\r\n    if(event.target.type == \"password\"){\r\n        this.setState({password: event.target.value });\r\n    }\r\n  }\r\n  handleControl(event){\r\n  \r\n      console.log(this.state.newProduct);\r\n      this.addProduct(this.state);\r\n  }\r\n  addProduct(product) {\r\n    if(product.newProduct === ''){\r\n      alert(\"please check the input value\");\r\n    }\r\n    else{\r\n      alert(\"new Product inserted\");\r\n      console.log(product.newProduct + \"addProduct kısmı \");\r\n      const axios = require('axios');\r\n      axios.post(`http://localhost:4000/products/add?productname=${product.newProduct}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data: product.newProduct\r\n      })\r\n  .then(function (response) {\r\n    // handle success\r\n    console.log(response.data);\r\n  })\r\n  .catch(function (error) {\r\n    // handle error\r\n    console.log(error);\r\n  })\r\n  .then(function () {\r\n    // always executed\r\n  });\r\n    }\r\n   \r\n}\r\n  handleProblemInsert(event){\r\n    console.log(this.state.newProblem);\r\n    this.addProblem(this.state);\r\n    this.addProblemFields(this.state);\r\n}\r\n  addProblem(problem) {\r\n    console.log(problem.newProblem + problem.problemfields+ \"problem\");\r\n    const axios = require('axios');\r\n    if(problem.newProblem === '' || problem.problemfields === ''){\r\n      alert(\"missing fields!\")\r\n    }\r\n    else {\r\n      axios.post(`http://localhost:4000/problems/add?problemname=${problem.newProblem}`,{\r\n        headers: {\"Content-Type\": \"text/plain\"},\r\n        method: 'POST',\r\n        data:{\r\n          problemname : problem.newProblem,\r\n          problemfields: problem.problemfields\r\n        }\r\n      })\r\n  .then(function (response) {\r\n    // handle success\r\n    console.log(response.data);\r\n  })\r\n  .catch(function (error) {\r\n    // handle error\r\n    console.log(error);\r\n  })\r\n  .then(function () {\r\n    // always executed\r\n  });\r\n  alert(\"new Problem inserted\");\r\n    }\r\n\r\n}\r\naddProblemFields(problem) {\r\n  console.log(problem.problemfields+ \"problem\");\r\n  const axios = require('axios');\r\n  if(problem.newProblem === '' || problem.problemfields === ''){\r\n    alert(\"missing fields!\")\r\n  }\r\n  else {\r\n    axios.post(`http://localhost:4000/problemfields/add?problemname=${problem.newProblem}&problemfields=${problem.problemfields}`,{\r\n      headers: {\"Content-Type\": \"text/plain\"},\r\n      method: 'POST',\r\n      data:{\r\n        problemfields: problem.problemfields\r\n      }\r\n    })\r\n.then(function (response) {\r\n  // handle success\r\n  console.log(response.data);\r\n})\r\n.catch(function (error) {\r\n  // handle error\r\n  console.log(error);\r\n})\r\n.then(function () {\r\n  // always executed\r\n});\r\nalert(\"new Problem inserted\");\r\n  }\r\n\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n       \r\n      this.state.currentPage\r\n    );\r\n  \r\n  }\r\n}\r\nfunction LoginView(props){\r\n    return (\r\n        <Container>\r\n            <Form>\r\n        <Form.Group controlId=\"formGroupEmail\">\r\n          <Form.Label>User Name: </Form.Label>\r\n          <Form.Control type=\"email\" input = \"userName\" onChange = {props.func.handleChange}/>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formGroupPassword\">\r\n          <Form.Label>Password: </Form.Label>\r\n          <Form.Control type=\"password\" input = \"password\" onChange =  {props.func.handleChange} />\r\n        </Form.Group>\r\n      </Form>\r\n      <Container>\r\n         <Button  onClick={props.func.handleClick} name='login' variant=\"danger\" size=\"lg\" active >\r\n         Login!\r\n         </Button>\r\n         </Container>\r\n        </Container>\r\n\r\n      \r\n    );\r\n}\r\nfunction ControlPanel(props){\r\n    return (\r\n        <Container>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form  >\r\n              \r\n        <Form.Group controlId=\"formBasicEmail\" >\r\n          <Form.Label style= {{fontSize: 10}}>Product Name:  </Form.Label>\r\n          <Form.Control type = \"text\" placeholder=\"Enter a product name\" onChange = {props.func.handleChange}/>\r\n          <Form.Text className=\"text-muted\">\r\n          </Form.Text>\r\n        </Form.Group>\r\n        \r\n        <Button  onClick={props.func.handleControl} input =\"newProduct\" variant=\"danger\" size=\"lg\" active >\r\n         Insert New Product!\r\n         </Button>\r\n      \r\n         <Form.Group  controlId=\"formBasicEmail\">\r\n          <Form.Label style= {{fontSize: 10}}> Problem Type:  </Form.Label>\r\n          <Form.Control type = \"text\" placeholder=\"Enter a problem type\" onChange = {props.func.handleChange}/>\r\n          <Form.Text className=\"text-muted\">\r\n          </Form.Text>\r\n          <Form.Label style= {{fontSize: 10}}> Problem SubFields: (Seperate subfields by comma-,- ie: sf1,sf2,sf3):  </Form.Label>\r\n          <Form.Control placeholder=\"Enter subfields\"  onChange = {props.func.handleChange}/>\r\n          <Form.Text className=\"text-muted\">\r\n          </Form.Text>\r\n        </Form.Group>\r\n        <Button  onClick={props.func.handleProblemInsert} variant=\"danger\" size=\"lg\" active >\r\n         Insert New Problem Type!\r\n         </Button>\r\n         \r\n      </Form>\r\n      </Col>\r\n        </Container>\r\n\r\n      \r\n    );\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}